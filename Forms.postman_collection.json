{
	"info": {
		"_postman_id": "730f78cc-9009-4108-8a56-244c877c2a10",
		"name": "Forms",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "38280743"
	},
	"item": [
		{
			"name": "Login CSRF Token",
			"request": {
				"method": "GET",
				"header": []
			},
			"response": [
				{
					"name": "Sample Response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/html",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{local_url}}/accounts/login/",
							"host": [
								"{{local_url}}"
							],
							"path": [
								"accounts",
								"login",
								""
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "html",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/html; charset=utf-8"
						},
						{
							"key": "Expires",
							"value": "Sat, 14 Jun 2025 08:00:18 GMT"
						},
						{
							"key": "Cache-Control",
							"value": "max-age=0, no-cache, no-store, must-revalidate, private"
						},
						{
							"key": "Vary",
							"value": "Cookie"
						},
						{
							"key": "X-Frame-Options",
							"value": "DENY"
						},
						{
							"key": "Content-Length",
							"value": "58066"
						},
						{
							"key": "X-Content-Type-Options",
							"value": "nosniff"
						},
						{
							"key": "Referrer-Policy",
							"value": "same-origin"
						},
						{
							"key": "Cross-Origin-Opener-Policy",
							"value": "same-origin"
						},
						{
							"key": "Set-Cookie",
							"value": "csrftoken=pS71uVLEU6GUXotyBOOShxFpiGnS3SJL; expires=Sat, 13 Jun 2026 08:00:19 GMT; Max-Age=31449600; Path=/; SameSite=Lax"
						},
						{
							"key": "Server",
							"value": "daphne"
						}
					],
					"cookie": [],
					"body": "<!DOCTYPE html>\n<html lang=\"en\">\n    <head>\n        <meta charset=\"UTF-8\">\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n        <title>Sign in - CollabForms</title>\n        <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css\" rel=\"stylesheet\">\n        <link href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css\" rel=\"stylesheet\">\n        <link href=\"https://fonts.googleapis.com/css2?family=Google+Sans:wght@300;400;500;600;700&family=Roboto:wght@300;400;500;600;700&display=swap\" rel=\"stylesheet\">\n        <style>\n        :root {\n            /* Google Forms exact color palette */\n            --primary-color: #1a73e8;\n            --primary-hover: #1557b0;\n            --secondary-color: #5f6368;\n            --text-primary: #202124;\n            --text-secondary: #5f6368;\n            --text-muted: #9aa0a6;\n            --border-color: #dadce0;\n            --border-focus: #4285f4;\n            --background-primary: #ffffff;\n            --background-secondary: #f1f3f4;\n            --background-tertiary: #e8eaed;\n            --surface-color: #ffffff;\n            --surface-raised: #ffffff;\n            --shadow-light: 0 1px 2px 0 rgba(60,64,67,.3), 0 1px 3px 1px rgba(60,64,67,.15);\n            --shadow-medium: 0 1px 3px 0 rgba(60,64,67,.3), 0 4px 8px 3px rgba(60,64,67,.15);\n            --shadow-heavy: 0 2px 6px 2px rgba(60,64,67,.15), 0 8px 24px 4px rgba(60,64,67,.15);\n            --success-color: #34a853;\n            --warning-color: #fbbc04;\n            --error-color: #ea4335;\n            --purple-accent: #9c27b0;\n            --forms-purple: #673ab7;\n        }\n        \n        * {\n            font-family: 'Google Sans', 'Roboto', -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif;\n        }\n        \n        body {\n            background-color: var(--background-secondary);\n            color: var(--text-primary);\n            line-height: 1.6;\n            font-size: 14px;\n            margin: 0;\n            padding: 0;\n        }\n        \n        /* Google Forms-style header */\n        .navbar {\n            background: var(--surface-color) !important;\n            border-bottom: 1px solid var(--border-color);\n            box-shadow: var(--shadow-light);\n            min-height: 64px;\n            padding: 0;\n        }\n        \n        .navbar-brand {\n            font-family: 'Google Sans', sans-serif;\n            font-weight: 500;\n            color: var(--text-primary) !important;\n            font-size: 22px;\n            padding: 0;\n            margin: 0;\n        }\n        \n        .navbar-brand i {\n            color: var(--forms-purple);\n            margin-right: 8px;\n        }\n        \n        /* Google Forms-style cards */\n        .form-card {\n            background: var(--surface-color);\n            border: 1px solid var(--border-color);\n            border-radius: 8px;\n            box-shadow: var(--shadow-light);\n            transition: all 0.2s cubic-bezier(0.4,0,0.2,1);\n            overflow: hidden;\n        }\n        \n        .form-card:hover {\n            box-shadow: var(--shadow-medium);\n        }\n        \n        .form-card-header {\n            border-top: 10px solid var(--forms-purple);\n            padding: 24px 24px 0 24px;\n            background: var(--surface-color);\n        }\n        \n        .form-card-body {\n            padding: 24px;\n        }\n        \n        /* Google Forms-style buttons */\n        .btn-google-primary {\n            background-color: var(--primary-color);\n            border: none;\n            color: white;\n            border-radius: 4px;\n            font-weight: 500;\n            font-size: 14px;\n            padding: 8px 24px;\n            height: 40px;\n            transition: all 0.2s cubic-bezier(0.4,0,0.2,1);\n            text-transform: none;\n            box-shadow: none;\n        }\n        \n        .btn-google-primary:hover {\n            background-color: var(--primary-hover);\n            color: white;\n            box-shadow: 0 1px 2px 0 rgba(60,64,67,.3), 0 1px 3px 1px rgba(60,64,67,.15);\n        }\n        \n        .btn-google-secondary {\n            background-color: transparent;\n            border: 1px solid var(--border-color);\n            color: var(--primary-color);\n            border-radius: 4px;\n            font-weight: 500;\n            font-size: 14px;\n            padding: 8px 24px;\n            height: 40px;\n            transition: all 0.2s cubic-bezier(0.4,0,0.2,1);\n            text-transform: none;\n        }\n        \n        .btn-google-secondary:hover {\n            background-color: rgba(26, 115, 232, 0.04);\n            border-color: var(--primary-color);\n            color: var(--primary-color);\n        }\n        \n        .btn-google-text {\n            background: transparent;\n            border: none;\n            color: var(--primary-color);\n            font-weight: 500;\n            font-size: 14px;\n            padding: 8px 16px;\n            border-radius: 4px;\n            transition: all 0.2s cubic-bezier(0.4,0,0.2,1);\n        }\n        \n        .btn-google-text:hover {\n            background-color: rgba(26, 115, 232, 0.04);\n            color: var(--primary-color);\n        }\n        \n        /* Google Forms-style form inputs */\n        .form-input-google {\n            border: none;\n            border-bottom: 1px solid var(--border-color);\n            border-radius: 4px 4px 0 0;\n            background-color: #f8f9fa;\n            padding: 16px 16px 6px 16px;\n            font-size: 16px;\n            line-height: 1.5;\n            transition: all 0.2s cubic-bezier(0.4,0,0.2,1);\n            width: 100%;\n        }\n        \n        .form-input-google:focus {\n            outline: none;\n            border-bottom: 2px solid var(--primary-color);\n            background-color: #fafbfc;\n            box-shadow: 0 2px 4px rgba(26, 115, 232, 0.1);\n        }\n        \n        .form-floating-google {\n            position: relative;\n        }\n        \n        .form-floating-google > .form-input-google {\n            padding-top: 20px;\n            padding-bottom: 4px;\n        }\n        \n        .form-floating-google > label {\n            position: absolute;\n            top: 0;\n            left: 16px;\n            padding-top: 16px;\n            color: var(--text-secondary);\n            font-size: 16px;\n            font-weight: 400;\n            transition: all 0.2s cubic-bezier(0.4,0,0.2,1);\n            pointer-events: none;\n            transform-origin: 0 0;\n        }\n        \n        .form-floating-google > .form-input-google:focus ~ label,\n        .form-floating-google > .form-input-google:not(:placeholder-shown) ~ label {\n            transform: translateY(-50%) scale(0.75);\n            color: var(--primary-color);\n            padding-top: 4px;\n        }\n        \n        /* User avatar */\n        .user-avatar {\n            width: 32px;\n            height: 32px;\n            border-radius: 50%;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            color: white;\n            font-weight: 500;\n            font-size: 14px;\n            background: linear-gradient(135deg, var(--primary-color), var(--forms-purple));\n        }\n        \n        /* Connection status */\n        .connection-status {\n            position: fixed;\n            bottom: 24px;\n            right: 24px;\n            z-index: 1050;\n            border-radius: 4px;\n            padding: 8px 16px;\n            font-size: 14px;\n            font-weight: 500;\n            box-shadow: var(--shadow-medium);\n        }\n        \n        .connection-connected {\n            background-color: var(--success-color);\n            color: white;\n        }\n        \n        .connection-connecting {\n            background-color: var(--warning-color);\n            color: var(--text-primary);\n        }\n        \n        .connection-disconnected {\n            background-color: var(--error-color);\n            color: white;\n        }\n        \n        /* Page layouts */\n        .page-container {\n            max-width: 768px;\n            margin: 0 auto;\n            padding: 0 16px;\n        }\n        \n        .page-container-wide {\n            max-width: 1200px;\n            margin: 0 auto;\n            padding: 0 16px;\n        }\n        \n        .auth-container {\n            min-height: 100vh;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n            padding: 24px;\n        }\n        \n        .auth-card {\n            background: var(--surface-color);\n            border-radius: 12px;\n            box-shadow: var(--shadow-heavy);\n            width: 100%;\n            max-width: 420px;\n            overflow: hidden;\n        }\n        \n        .auth-header {\n            text-align: center;\n            padding: 48px 48px 24px 48px;\n        }\n        \n        .auth-body {\n            padding: 0 48px 48px 48px;\n        }\n        \n        .auth-logo {\n            color: var(--forms-purple);\n            font-size: 48px;\n            margin-bottom: 24px;\n        }\n        \n        .auth-title {\n            font-size: 24px;\n            font-weight: 400;\n            color: var(--text-primary);\n            margin-bottom: 8px;\n        }\n        \n        .auth-subtitle {\n            font-size: 16px;\n            color: var(--text-secondary);\n            margin-bottom: 0;\n        }\n        \n        /* Dropdown menus */\n        .dropdown-menu {\n            border: 1px solid var(--border-color);\n            border-radius: 8px;\n            box-shadow: var(--shadow-medium);\n            padding: 8px 0;\n            min-width: 200px;\n        }\n        \n        .dropdown-item {\n            padding: 12px 16px;\n            font-size: 14px;\n            color: var(--text-primary);\n            border: none;\n            background: none;\n            transition: background-color 0.2s cubic-bezier(0.4,0,0.2,1);\n        }\n        \n        .dropdown-item:hover {\n            background-color: var(--background-tertiary);\n            color: var(--text-primary);\n        }\n        \n        .dropdown-divider {\n            margin: 8px 0;\n            border-top: 1px solid var(--border-color);\n        }\n        \n        /* Alert messages */\n        .alert {\n            border-radius: 4px;\n            border: none;\n            font-size: 14px;\n            padding: 16px;\n            margin-bottom: 16px;\n        }\n        \n        .alert-success {\n            background-color: #e8f5e8;\n            color: #1e7e34;\n        }\n        \n        .alert-warning {\n            background-color: #fff3cd;\n            color: #856404;\n        }\n        \n        .alert-danger {\n            background-color: #f8d7da;\n            color: #721c24;\n        }\n        \n        .alert-info {\n            background-color: #d1ecf1;\n            color: #0c5460;\n        }\n        \n        /* Loading animations */\n        .loading-spinner {\n            display: inline-block;\n            width: 16px;\n            height: 16px;\n            border: 2px solid var(--border-color);\n            border-radius: 50%;\n            border-top-color: var(--primary-color);\n            animation: spin 1s linear infinite;\n        }\n        \n        @keyframes spin {\n            to { transform: rotate(360deg); }\n        }\n        \n        .fade-in {\n            animation: fadeIn 0.3s cubic-bezier(0.4,0,0.2,1);\n        }\n        \n        @keyframes fadeIn {\n            from { opacity: 0; transform: translateY(8px); }\n            to { opacity: 1; transform: translateY(0); }\n        }\n        \n        /* Option builder styles */\n        .option-builder {\n            width: 100%;\n        }\n        \n        .option-item {\n            display: flex;\n            align-items: center;\n            gap: 8px;\n            margin-bottom: 8px;\n            padding: 8px;\n            border: 1px solid var(--border-color);\n            border-radius: 4px;\n            background-color: var(--surface-color);\n            transition: all 0.2s cubic-bezier(0.4,0,0.2,1);\n        }\n        \n        .option-item:hover {\n            border-color: var(--primary-color);\n        }\n        \n        .option-item .field-handle {\n            color: var(--text-muted);\n            cursor: grab;\n            padding: 4px;\n        }\n        \n        .option-item .field-handle:active {\n            cursor: grabbing;\n        }\n        \n        .option-input {\n            flex: 1;\n            border: none;\n            outline: none;\n            background: transparent;\n            font-size: 14px;\n            color: var(--text-primary);\n            padding: 4px 0;\n        }\n        \n        .option-input::placeholder {\n            color: var(--text-muted);\n        }\n        \n        .option-remove {\n            background: transparent;\n            border: none;\n            color: var(--text-muted);\n            padding: 4px;\n            border-radius: 3px;\n            transition: all 0.2s cubic-bezier(0.4,0,0.2,1);\n            cursor: pointer;\n        }\n        \n        .option-remove:hover {\n            background-color: var(--error-color);\n            color: white;\n        }\n        \n        .option-add {\n            display: flex;\n            align-items: center;\n            gap: 8px;\n            width: 100%;\n            background: transparent;\n            border: 1px dashed var(--border-color);\n            border-radius: 4px;\n            padding: 12px;\n            color: var(--primary-color);\n            font-size: 14px;\n            font-weight: 500;\n            transition: all 0.2s cubic-bezier(0.4,0,0.2,1);\n            cursor: pointer;\n            margin-top: 4px;\n        }\n        \n        .option-add:hover {\n            background-color: rgba(26, 115, 232, 0.04);\n            border-color: var(--primary-color);\n        }\n        \n        .option-add i {\n            font-size: 12px;\n        }\n        \n        /* Field type selector styles */\n        .field-type-grid {\n            display: grid;\n            grid-template-columns: repeat(auto-fit, minmax(140px, 1fr));\n            gap: 8px;\n            margin-bottom: 16px;\n        }\n        \n        .field-type-option {\n            display: flex;\n            flex-direction: column;\n            align-items: center;\n            gap: 6px;\n            padding: 16px 8px;\n            border: 1px solid var(--border-color);\n            border-radius: 6px;\n            background-color: var(--surface-color);\n            cursor: pointer;\n            transition: all 0.2s cubic-bezier(0.4,0,0.2,1);\n            text-align: center;\n            position: relative;\n            overflow: hidden;\n        }\n        \n        .field-type-option:hover {\n            border-color: var(--primary-color);\n            background-color: rgba(26, 115, 232, 0.04);\n        }\n        \n        .field-type-option.selected {\n            border-color: var(--primary-color);\n            background-color: rgba(26, 115, 232, 0.08);\n            color: var(--primary-color);\n        }\n        \n        .field-type-option i {\n            font-size: 18px;\n            color: var(--text-secondary);\n            transition: color 0.2s cubic-bezier(0.4,0,0.2,1);\n        }\n        \n        .field-type-option.selected i {\n            color: var(--primary-color);\n        }\n        \n        .field-type-option span {\n            font-size: 12px;\n            font-weight: 500;\n            color: var(--text-primary);\n        }\n        \n        /* Enhanced responsive design */\n        /* Enhanced responsive design for different screen sizes */\n        \n        /* Mobile First - Base styles for small devices */\n        @media (max-width: 575.98px) {\n            .page-container {\n                padding: 0 8px;\n                max-width: 100%;\n            }\n            \n            .page-container-wide {\n                padding: 0 8px;\n                max-width: 100%;\n            }\n            \n            .auth-container {\n                padding: 16px;\n                min-height: 100vh;\n            }\n            \n            .auth-header {\n                padding: 32px 20px 20px 20px;\n            }\n            \n            .auth-body {\n                padding: 0 20px 32px 20px;\n            }\n            \n            .form-group-google {\n                margin-bottom: 20px;\n            }\n            \n            .navbar-brand {\n                font-size: 18px;\n            }\n            \n            .form-card-body {\n                padding: 16px;\n            }\n            \n            .form-card-header {\n                padding: 16px 16px 0 16px;\n            }\n            \n            .field-type-grid {\n                grid-template-columns: repeat(2, 1fr);\n                gap: 6px;\n            }\n            \n            .field-type-option {\n                padding: 12px 6px;\n                min-height: 70px;\n            }\n            \n            .field-type-option i {\n                font-size: 16px;\n                margin-bottom: 4px;\n            }\n            \n            .field-type-option span {\n                font-size: 10px;\n                line-height: 1.2;\n            }\n            \n            .page-header .d-flex {\n                flex-direction: column;\n                align-items: stretch !important;\n                gap: 12px;\n            }\n            \n            .btn-group {\n                width: 100%;\n                flex-direction: column;\n            }\n            \n            .btn-group .btn {\n                flex: 1;\n                margin-left: 0;\n                margin-bottom: 4px;\n            }\n            \n            .option-item {\n                flex-wrap: wrap;\n                gap: 6px;\n            }\n            \n            .option-input-wrapper {\n                flex: 1;\n                min-width: 200px;\n                margin: 0;\n            }\n        }\n        \n        /* Small devices - tablets portrait */\n        @media (min-width: 576px) and (max-width: 767.98px) {\n            .page-container {\n                padding: 0 12px;\n                max-width: 540px;\n            }\n            \n            .page-container-wide {\n                padding: 0 12px;\n                max-width: 720px;\n            }\n            \n            .auth-container {\n                padding: 20px;\n            }\n            \n            .auth-header {\n                padding: 40px 28px 20px 28px;\n            }\n            \n            .auth-body {\n                padding: 0 28px 40px 28px;\n            }\n            \n            .form-group-google {\n                margin-bottom: 22px;\n            }\n            \n            .field-type-grid {\n                grid-template-columns: repeat(3, 1fr);\n                gap: 8px;\n            }\n            \n            .field-type-option {\n                padding: 14px 8px;\n                min-height: 80px;\n            }\n            \n            .field-type-option i {\n                font-size: 18px;\n                margin-bottom: 6px;\n            }\n            \n            .field-type-option span {\n                font-size: 11px;\n            }\n        }\n        \n        /* Medium devices - tablets landscape */\n        @media (min-width: 768px) and (max-width: 991.98px) {\n            .page-container {\n                padding: 0 16px;\n                max-width: 720px;\n            }\n            \n            .page-container-wide {\n                padding: 0 16px;\n                max-width: 960px;\n            }\n            \n            .form-card-body {\n                padding: 20px;\n            }\n            \n            .form-card-header {\n                padding: 20px 20px 0 20px;\n            }\n            \n            .field-type-grid {\n                grid-template-columns: repeat(4, 1fr);\n                gap: 8px;\n            }\n            \n            .field-type-option {\n                padding: 16px 10px;\n                min-height: 85px;\n            }\n            \n            .field-type-option i {\n                font-size: 20px;\n                margin-bottom: 8px;\n            }\n            \n            .field-type-option span {\n                font-size: 12px;\n            }\n        }\n        \n        /* Large devices - small laptops */\n        @media (min-width: 992px) and (max-width: 1199.98px) {\n            .page-container {\n                padding: 0 20px;\n                max-width: 960px;\n            }\n            \n            .page-container-wide {\n                padding: 0 20px;\n                max-width: 1140px;\n            }\n            \n            .field-type-grid {\n                grid-template-columns: repeat(4, 1fr);\n                gap: 10px;\n            }\n            \n            .field-type-option {\n                padding: 18px 12px;\n                min-height: 90px;\n            }\n            \n            .field-type-option i {\n                font-size: 22px;\n                margin-bottom: 8px;\n            }\n            \n            .field-type-option span {\n                font-size: 13px;\n            }\n        }\n        \n        /* Extra large devices - large laptops and desktops */\n        @media (min-width: 1200px) and (max-width: 1399.98px) {\n            .page-container {\n                padding: 0 24px;\n                max-width: 1140px;\n            }\n            \n            .page-container-wide {\n                padding: 0 24px;\n                max-width: 1320px;\n            }\n            \n            .field-type-grid {\n                grid-template-columns: repeat(4, 1fr);\n                gap: 12px;\n            }\n            \n            .field-type-option {\n                padding: 20px 14px;\n                min-height: 95px;\n            }\n            \n            .field-type-option i {\n                font-size: 24px;\n                margin-bottom: 10px;\n            }\n            \n            .field-type-option span {\n                font-size: 14px;\n            }\n        }\n        \n        /* Extra extra large devices - large monitors */\n        @media (min-width: 1400px) {\n            .page-container {\n                padding: 0 30px;\n                max-width: 1200px;\n            }\n            \n            .page-container-wide {\n                padding: 0 30px;\n                max-width: 1600px;\n            }\n            \n            .field-type-grid {\n                grid-template-columns: repeat(4, 1fr);\n                gap: 15px;\n            }\n            \n            .field-type-option {\n                padding: 22px 16px;\n                min-height: 100px;\n            }\n            \n            .field-type-option i {\n                font-size: 26px;\n                margin-bottom: 12px;\n            }\n            \n            .field-type-option span {\n                font-size: 15px;\n            }\n        }\n        \n        /* Laptop-specific fixes for alignment issues */\n        @media (min-width: 1024px) and (max-width: 1440px) and (orientation: landscape) {\n            /* Common laptop resolution fixes */\n            .row.g-4 {\n                --bs-gutter-x: 2rem;\n                --bs-gutter-y: 2rem;\n            }\n            \n            .col-xl-8, .col-lg-7 {\n                flex: 0 0 auto;\n                width: 66.66666667%;\n            }\n            \n            .col-xl-4, .col-lg-5 {\n                flex: 0 0 auto;\n                width: 33.33333333%;\n            }\n            \n            .sticky-form-panel {\n                position: sticky;\n                top: 24px;\n                height: fit-content;\n                max-height: calc(100vh - 48px);\n                overflow-y: auto;\n            }\n            \n            /* Better spacing for form elements */\n            .form-group-google {\n                margin-bottom: 1.5rem;\n            }\n            \n            .option-builder {\n                max-height: 300px;\n                overflow-y: auto;\n                border: 1px solid var(--border-color);\n                border-radius: 6px;\n                padding: 12px;\n            }\n            \n            /* Improved field item layout */\n            .field-item {\n                margin-bottom: 1rem;\n                padding: 1.25rem;\n            }\n            \n            .field-item .d-flex {\n                align-items: flex-start;\n                gap: 1rem;\n            }\n            \n            /* Better button alignment */\n            .d-flex.gap-2 {\n                gap: 0.75rem !important;\n            }\n            \n            .d-flex.gap-3 {\n                gap: 1rem !important;\n            }\n        }\n        \n        /* Ultra-wide screen optimizations */\n        @media (min-width: 1920px) {\n            .page-container-wide {\n                max-width: 1800px;\n            }\n            \n            .row.g-4 {\n                --bs-gutter-x: 3rem;\n            }\n            \n            .form-card {\n                box-shadow: var(--shadow-medium);\n            }\n        }\n        \n        /* Height-based responsive adjustments */\n        @media (max-height: 700px) and (min-width: 992px) {\n            .sticky-form-panel {\n                position: static;\n            }\n            \n            .form-card-body {\n                padding: 16px;\n            }\n            \n            .form-group-google {\n                margin-bottom: 1rem;\n            }\n        }\n        \n        /* High DPI screen adjustments */\n        @media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi) {\n            .form-card {\n                border-width: 0.5px;\n            }\n            \n            .option-item {\n                border-width: 0.5px;\n            }\n            \n            .field-type-option {\n                border-width: 0.5px;\n            }\n        }\n        \n        /* Additional utility classes for better alignment */\n        .status-indicator {\n            width: 8px;\n            height: 8px;\n            border-radius: 50%;\n            margin-right: 6px;\n            flex-shrink: 0;\n        }\n        \n        .status-online {\n            background-color: var(--success-color);\n        }\n        \n        .status-editing {\n            background-color: var(--warning-color);\n            animation: pulse 2s infinite;\n        }\n        \n        @keyframes pulse {\n            0% { opacity: 1; }\n            50% { opacity: 0.5; }\n            100% { opacity: 1; }\n        }\n        \n        /* Field handle for drag and drop */\n        .field-handle {\n            color: var(--text-muted);\n            cursor: grab;\n            padding: 4px;\n            transition: color 0.2s cubic-bezier(0.4,0,0.2,1);\n        }\n        \n        .field-handle:hover {\n            color: var(--text-secondary);\n        }\n        \n        .field-handle:active {\n            cursor: grabbing;\n        }\n        \n        /* Field item styles */\n        .field-item {\n            transition: all 0.2s cubic-bezier(0.4,0,0.2,1);\n        }\n        \n        .field-item:hover {\n            box-shadow: var(--shadow-light);\n        }\n        \n        .field-item.dragging {\n            opacity: 0.7;\n            transform: rotate(5deg);\n        }\n        \n        /* Better form input focus states */\n        .form-input-google:focus {\n            outline: none;\n            border-bottom: 2px solid var(--primary-color);\n            background-color: #fafbfc;\n            box-shadow: 0 2px 4px rgba(26, 115, 232, 0.1);\n        }\n        \n        /* Improved checkbox and radio styles */\n        .form-check-input:checked {\n            background-color: var(--primary-color);\n            border-color: var(--primary-color);\n        }\n        \n        .form-check-input:focus {\n            border-color: var(--primary-color);\n            outline: none;\n            box-shadow: 0 0 0 0.25rem rgba(26, 115, 232, 0.25);\n        }\n        \n        /* Page header improvements */\n        .page-header {\n            background-color: var(--surface-color);\n            border-bottom: 1px solid var(--border-color);\n            margin-bottom: 0;\n        }\n        \n        /* Better button spacing in groups */\n        .btn-group .btn,\n        .d-flex .btn + .btn {\n            margin-left: 8px;\n        }\n        \n        /* Better form field error states */\n        .form-input-google.is-invalid {\n            border-bottom-color: var(--error-color);\n        }\n        \n        .form-input-google.is-invalid:focus {\n            border-bottom-color: var(--error-color);\n            box-shadow: 0 2px 4px rgba(234, 67, 53, 0.1);\n        }\n        \n        /* Consistent border radius */\n        .rounded {\n            border-radius: 6px !important;\n        }\n        \n        .rounded-pill {\n            border-radius: 16px !important;\n        }\n        \n        /* Enhanced option builder styles */\n        .option-list {\n            margin-bottom: 12px;\n        }\n        \n        .option-drag-handle {\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            width: 24px;\n            height: 24px;\n            color: var(--text-muted);\n            cursor: grab;\n            border-radius: 3px;\n            transition: all 0.2s cubic-bezier(0.4,0,0.2,1);\n        }\n        \n        .option-drag-handle:hover {\n            background-color: var(--background-tertiary);\n            color: var(--text-secondary);\n        }\n        \n        .option-drag-handle:active {\n            cursor: grabbing;\n        }\n        \n        .option-input-wrapper {\n            flex: 1;\n            margin: 0 8px;\n        }\n        \n        .option-remove-placeholder {\n            width: 24px;\n            height: 24px;\n        }\n        \n        .option-dragging {\n            opacity: 0.5;\n            transform: rotate(2deg);\n        }\n        \n        .option-item:last-child .option-input {\n            border-bottom-color: transparent;\n        }\n        \n        .option-item .option-input:focus {\n            border-bottom-color: var(--primary-color);\n        }\n        \n        /* Field type option hover effects */\n        .field-type-option {\n            position: relative;\n            overflow: hidden;\n        }\n        \n        .field-type-option::before {\n            content: '';\n            position: absolute;\n            top: 0;\n            left: -100%;\n            width: 100%;\n            height: 100%;\n            background: linear-gradient(90deg, transparent, rgba(26, 115, 232, 0.1), transparent);\n            transition: left 0.5s ease;\n        }\n        \n        .field-type-option:hover::before {\n            left: 100%;\n        }\n        \n        /* Form validation styles */\n        .is-invalid .option-input {\n            border-bottom-color: var(--error-color);\n        }\n        \n        .invalid-feedback {\n            color: var(--error-color);\n            font-size: 12px;\n            margin-top: 4px;\n        }\n        \n        /* Loading state for option builder */\n        .option-builder.loading {\n            opacity: 0.6;\n            pointer-events: none;\n        }\n        \n        .option-builder.loading::after {\n            content: '';\n            position: absolute;\n            top: 50%;\n            left: 50%;\n            transform: translate(-50%, -50%);\n            width: 20px;\n            height: 20px;\n            border: 2px solid var(--border-color);\n            border-top-color: var(--primary-color);\n            border-radius: 50%;\n            animation: spin 1s linear infinite;\n        }\n        \n        /* Dashboard specific responsive improvements */\n        .dashboard-stats {\n            margin-bottom: 2rem;\n        }\n        \n        .dashboard-stats .form-card {\n            transition: all 0.3s cubic-bezier(0.4,0,0.2,1);\n        }\n        \n        .dashboard-stats .form-card:hover {\n            transform: translateY(-2px);\n            box-shadow: var(--shadow-medium);\n        }\n        \n        /* Forms grid responsive layout */\n        @media (min-width: 1200px) {\n            .forms-grid .col-xl-4 {\n                flex: 0 0 auto;\n                width: 33.333333%;\n            }\n        }\n        \n        @media (min-width: 992px) and (max-width: 1199.98px) {\n            .forms-grid .col-lg-6 {\n                flex: 0 0 auto;\n                width: 50%;\n            }\n        }\n        \n        @media (max-width: 991.98px) {\n            .forms-grid .col-md-12 {\n                flex: 0 0 auto;\n                width: 100%;\n            }\n        }\n        \n        /* Better button groups on mobile */\n        @media (max-width: 767.98px) {\n            .btn-group-mobile {\n                display: flex;\n                flex-direction: column;\n                gap: 8px;\n                width: 100%;\n            }\n            \n            .btn-group-mobile .btn {\n                width: 100%;\n                margin-left: 0;\n            }\n            \n            .page-header .d-flex {\n                flex-direction: column;\n                align-items: stretch !important;\n                gap: 16px;\n            }\n            \n            .page-header .flex-grow-1 {\n                text-align: center;\n            }\n        }\n        \n        /* Form card improvements for different screen sizes */\n        .form-item-card {\n            transition: all 0.2s cubic-bezier(0.4,0,0.2,1);\n            height: 100%;\n            display: flex;\n            flex-direction: column;\n        }\n        \n        .form-item-card:hover {\n            transform: translateY(-1px);\n            box-shadow: var(--shadow-light);\n        }\n        \n        .form-item-card .form-item-content {\n            flex: 1;\n            display: flex;\n            flex-direction: column;\n        }\n        \n        .form-item-card .form-item-footer {\n            margin-top: auto;\n            padding-top: 12px;\n        }\n        \n        /* Enhanced responsiveness for collaboration UI */\n        .collaboration-panel {\n            position: sticky;\n            top: 24px;\n            max-height: calc(100vh - 48px);\n            overflow-y: auto;\n        }\n        \n        @media (max-width: 991.98px) {\n            .collaboration-panel {\n                position: static;\n                max-height: none;\n            }\n        }\n        \n        /* Better form field spacing on different screen sizes */\n        @media (min-width: 768px) and (max-width: 1023.98px) {\n            .form-group-google {\n                margin-bottom: 1.25rem;\n            }\n            \n            .field-type-grid {\n                gap: 8px;\n            }\n            \n            .option-builder {\n                padding: 14px;\n            }\n        }\n        \n        /* Ultra-wide screen optimizations */\n        @media (min-width: 1600px) {\n            .page-container-wide {\n                max-width: 1500px;\n            }\n            \n            .forms-grid {\n                --bs-gutter-x: 2rem;\n            }\n            \n            .dashboard-stats {\n                --bs-gutter-x: 1.5rem;\n            }\n        }\n        \n        /* Print styles */\n        @media print {\n            .page-header,\n            .btn,\n            .dropdown,\n            .connection-status,\n            .navbar {\n                display: none !important;\n            }\n            \n            .form-card {\n                border: 1px solid #ddd !important;\n                box-shadow: none !important;\n                page-break-inside: avoid;\n            }\n            \n            .page-container,\n            .page-container-wide {\n                max-width: none !important;\n                padding: 0 !important;\n            }\n        }\n        \n        /* Google Forms-style form groups */\n        .form-group-google {\n            margin-bottom: 24px;\n            position: relative;\n        }\n        \n        .form-error {\n            color: var(--error-color);\n            font-size: 12px;\n            margin-top: 6px;\n            font-weight: 400;\n        }\n        \n        .form-help {\n            color: var(--text-muted);\n            font-size: 12px;\n            margin-top: 6px;\n            line-height: 1.4;\n        }\n    </style>\n    </head>\n    <body>\n        <nav class=\"navbar navbar-expand-lg\">\n            <div class=\"container-fluid px-4\">\n                <a class=\"navbar-brand d-flex align-items-center\" href=\"/forms/\">\n                    <i class=\"fas fa-poll-h me-2\"></i>\n                CollabForms\n                </a>\n                <div class=\"navbar-nav ms-auto\">\n                    <a class=\"btn btn-google-text me-2\" href=\"/accounts/login/\">\n                        <i class=\"fas fa-sign-in-alt me-1\"></i>Sign in\n                    </a>\n                    <a class=\"btn btn-google-primary\" href=\"/accounts/register/\">\n                        <i class=\"fas fa-user-plus me-1\"></i>Sign up\n                    </a>\n                </div>\n            </div>\n        </nav>\n        <main>\n            <div class=\"auth-container\">\n                <div class=\"auth-card\">\n                    <div class=\"auth-header\">\n                        <div class=\"auth-logo\">\n                            <i class=\"fas fa-poll-h\"></i>\n                        </div>\n                        <h1 class=\"auth-title\">Sign in</h1>\n                        <p class=\"auth-subtitle\">to continue to CollabForms</p>\n                    </div>\n                    <div class=\"auth-body\">\n                        <form method=\"post\" novalidate>\n                            <input type=\"hidden\" name=\"csrfmiddlewaretoken\" value=\"36xXiSK1OENeYJoIK7KSdEVsPJrsQkXXiOuOCDlvyAjYLXH6bLoAk1qHXfEaJ2wy\">\n                            <div class=\"form-group-google\">\n                                <div class=\"form-floating-google\">\n                                    <input type=\"text\" \n                               class=\"form-input-google\" \n                               id=\"id_username\" \n                               name=\"username\" \n                               placeholder=\" \"\n                               value=\"\"\n                               required>\n                                    <label for=\"id_username\">Username</label>\n                                </div>\n                            </div>\n                            <div class=\"form-group-google\">\n                                <div class=\"form-floating-google\">\n                                    <input type=\"password\" \n                               class=\"form-input-google\" \n                               id=\"id_password\" \n                               name=\"password\" \n                               placeholder=\" \"\n                               required>\n                                    <label for=\"id_password\">Password</label>\n                                </div>\n                            </div>\n                            <div class=\"d-flex justify-content-between align-items-center mb-4 mt-2\">\n                                <a href=\"/accounts/register/\" class=\"btn-google-text p-0\">\n                        Create account\n                    </a>\n                                <button type=\"submit\" class=\"btn btn-google-primary\">\n                        Sign in\n                    </button>\n                            </div>\n                        </form>\n                        <div class=\"text-center mt-4\">\n                            <p class=\"text-muted small mb-0\">\n                    New to CollabForms? \n                    \n                                <a href=\"/accounts/register/\" class=\"text-decoration-none\">\n                        Create an account\n                    </a>\n                            </p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </main>\n        <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js\"></script>\n        <script>\n    // Google Forms-style form field rendering\n    function renderFormField(field, value = '', userEditing = null) {\n        const isLocked = userEditing && userEditing.id !== window.currentUserId;\n        const lockClass = isLocked ? 'field-locked' : '';\n        const lockIcon = isLocked ? `\n            <i class=\"fas fa-lock text-warning ms-2\" title=\"Being edited by ${userEditing.username}\"></i>` : '';\n        \n        let fieldHtml = `\n            <div class=\"form-card mb-3 fade-in\" data-field-id=\"${field.id}\">\n                <div class=\"form-card-body\">\n                    <div class=\"d-flex justify-content-between align-items-start mb-3\">\n                        <div>\n                            <label class=\"form-label fw-normal\">${field.label}</label>\n                            ${field.is_required ? '\n                            <span class=\"text-danger ms-1\">*</span>' : ''}\n                            ${lockIcon}\n                        </div>\n                    </div>\n        `;\n        \n        switch(field.field_type) {\n            case 'text':\n            case 'email':\n            case 'url':\n                fieldHtml += `\n                    <div class=\"form-floating-google\">\n                        <input type=\"${field.field_type}\" \n                               class=\"form-input-google ${lockClass}\" \n                               id=\"field_${field.id}\" \n                               name=\"field_${field.id}\" \n                               placeholder=\" \"\n                               value=\"${value}\"\n                               ${field.is_required ? 'required' : ''}\n                               ${isLocked ? 'disabled' : ''}>\n                        <label for=\"field_${field.id}\">Your answer</label>\n                    </div>\n                `;\n                break;\n                \n            case 'date':\n                fieldHtml += `\n                    <div class=\"form-floating-google\">\n                        <input type=\"date\" \n                               class=\"form-input-google ${lockClass}\" \n                               id=\"field_${field.id}\" \n                               name=\"field_${field.id}\" \n                               value=\"${value}\"\n                               ${field.is_required ? 'required' : ''}\n                               ${isLocked ? 'disabled' : ''}>\n                        <label for=\"field_${field.id}\">Select date</label>\n                    </div>\n                `;\n                break;\n                \n            case 'textarea':\n                fieldHtml += `\n                    <div class=\"form-floating-google\">\n                        <textarea class=\"form-input-google ${lockClass}\" \n                                  id=\"field_${field.id}\" \n                                  name=\"field_${field.id}\" \n                                  placeholder=\" \"\n                                  rows=\"3\"\n                                  style=\"min-height: 100px; resize: vertical;\"\n                                  ${field.is_required ? 'required' : ''}\n                                  ${isLocked ? 'disabled' : ''}>${value}</textarea>\n                        <label for=\"field_${field.id}\">Your answer</label>\n                    </div>\n                `;\n                break;\n                \n            case 'number':\n                fieldHtml += `\n                    <div class=\"form-floating-google\">\n                        <input type=\"number\" \n                               class=\"form-input-google ${lockClass}\" \n                               id=\"field_${field.id}\" \n                               name=\"field_${field.id}\" \n                               placeholder=\" \"\n                               value=\"${value}\"\n                               ${field.is_required ? 'required' : ''}\n                               ${isLocked ? 'disabled' : ''}>\n                        <label for=\"field_${field.id}\">Your answer</label>\n                    </div>\n                `;\n                break;\n                \n            case 'select':\n            case 'dropdown':\n                fieldHtml += `\n                    <select class=\"form-input-google ${lockClass}\" \n                            id=\"field_${field.id}\" \n                            name=\"field_${field.id}\"\n                            ${field.is_required ? 'required' : ''}\n                            ${isLocked ? 'disabled' : ''}>\n                        <option value=\"\" disabled ${!value ? 'selected' : ''}>Choose</option>\n                        ${field.options.map(option => \n                            `\n                        <option value=\"${option}\" ${value === option ? 'selected' : ''}>${option}</option>`\n                        ).join('')}\n                    </select>\n                `;\n                break;\n                \n            case 'radio':\n                fieldHtml += `\n                    <div class=\"d-grid gap-2\">\n                        ${field.options.map((option, index) => `\n                            \n                        <div class=\"form-check\">\n                            <input class=\"form-check-input\" \n                                       type=\"radio\" \n                                       name=\"field_${field.id}\" \n                                       id=\"field_${field.id}_${index}\" \n                                       value=\"${option}\"\n                                       ${value === option ? 'checked' : ''}\n                                       ${isLocked ? 'disabled' : ''}>\n                            <label class=\"form-check-label\" for=\"field_${field.id}_${index}\">\n                                    ${option}\n                                </label>\n                        </div>\n                        `).join('')}\n                    </div>\n                `;\n                break;\n                \n            case 'checkbox':\n                const selectedValues = Array.isArray(value) ? value : (value ? [value] : []);\n                fieldHtml += `\n                    <div class=\"d-grid gap-2\">\n                        ${field.options.map((option, index) => `\n                            \n                        <div class=\"form-check\">\n                            <input class=\"form-check-input\" \n                                       type=\"checkbox\" \n                                       name=\"field_${field.id}\" \n                                       id=\"field_${field.id}_${index}\" \n                                       value=\"${option}\"\n                                       ${selectedValues.includes(option) ? 'checked' : ''}\n                                       ${isLocked ? 'disabled' : ''}>\n                            <label class=\"form-check-label\" for=\"field_${field.id}_${index}\">\n                                    ${option}\n                                </label>\n                        </div>\n                        `).join('')}\n                    </div>\n                `;\n                break;\n        }\n        \n        fieldHtml += `\n                </div>\n            </div>\n        `;\n        \n        return fieldHtml;\n    }\n    \n    // Show user avatars in a Google-style way\n    function renderUserAvatar(user, isEditing = false) {\n        const statusClass = isEditing ? 'status-editing' : 'status-online';\n        return `\n            <div class=\"d-flex align-items-center mb-2\" data-user-id=\"${user.id}\">\n                <div class=\"user-avatar me-2\">${user.username.charAt(0).toUpperCase()}</div>\n                <div class=\"flex-grow-1\">\n                    <div class=\"d-flex align-items-center\">\n                        <span class=\"status-indicator ${statusClass}\"></span>\n                        <span class=\"small fw-medium\">${user.username}</span>\n                    </div>\n                    <div class=\"text-muted\" style=\"font-size: 11px;\">\n                        ${isEditing ? 'Currently editing' : 'Active'}\n                    </div>\n                </div>\n            </div>\n        `;\n    }\n    \n    // Mobile user avatar rendering\n    function renderMobileUserAvatar(user, isEditing = false) {\n        const statusClass = isEditing ? 'status-editing' : 'status-online';\n        return `\n            <div class=\"user-avatar\" \n                 data-user-id=\"${user.id}\" \n                 title=\"${user.username} - ${isEditing ? 'Currently editing' : 'Active'}\"\n                 style=\"position: relative;\">\n                ${user.username.charAt(0).toUpperCase()}\n                \n                <span class=\"status-indicator ${statusClass}\" \n                      style=\"position: absolute; bottom: -2px; right: -2px; border: 1px solid white;\"></span>\n            </div>\n        `;\n    }\n    \n    // Option builder functionality\n    window.optionBuilders = {};\n    \n    function createOptionBuilder(containerId, initialOptions = []) {\n        const container = document.getElementById(containerId);\n        if (!container) return;\n        \n        const options = initialOptions.length > 0 ? initialOptions : ['Option 1'];\n        let optionCounter = options.length;\n        \n        function renderOptions() {\n            container.innerHTML = `\n            <div class=\"option-builder\">\n                <div class=\"mb-3\">\n                    <label class=\"form-label small text-muted mb-2\">Options</label>\n                    <div class=\"option-list\" id=\"option-list-${containerId}\">\n                            ${options.map((option, index) => `\n                                \n                        <div class=\"option-item\" data-index=\"${index}\">\n                            <div class=\"option-drag-handle\">\n                                <i class=\"fas fa-grip-vertical\"></i>\n                            </div>\n                            <div class=\"option-input-wrapper\">\n                                <input type=\"text\" \n                                               class=\"option-input\" \n                                               value=\"${option}\" \n                                               placeholder=\"Enter option text...\"\n                                               onchange=\"updateOption('${containerId}', ${index}, this.value)\"\n                                               onkeydown=\"handleOptionKeydown(event, '${containerId}', ${index})\">\n                                    \n                            </div>\n                                    ${options.length > 1 ? `\n                            <button type=\"button\" \n                                                class=\"option-remove\" \n                                                onclick=\"removeOption('${containerId}', ${index})\"\n                                                title=\"Remove option\">\n                                <i class=\"fas fa-times\"></i>\n                            </button>\n                                    ` : `\n                            <div class=\"option-remove-placeholder\"></div>\n                                    `}\n                        </div>\n                            `).join('')}\n                    </div>\n                    <button type=\"button\" \n                                class=\"option-add\" \n                                onclick=\"addOption('${containerId}')\"\n                                title=\"Add new option\">\n                        <i class=\"fas fa-plus\"></i>\n                        <span>Add option</span>\n                    </button>\n                </div>\n            </div>\n            `;\n            \n            // Initialize drag and drop for options\n            initializeOptionSorting(containerId);\n        }\n        \n        window.updateOption = function(builderId, index, value) {\n            if (window.optionBuilders[builderId]) {\n                window.optionBuilders[builderId].options[index] = value;\n                window.optionBuilders[builderId].updateHiddenInput();\n            }\n        };\n        \n        window.removeOption = function(builderId, index) {\n            if (window.optionBuilders[builderId] && window.optionBuilders[builderId].options.length > 1) {\n                window.optionBuilders[builderId].options.splice(index, 1);\n                window.optionBuilders[builderId].renderOptions();\n                window.optionBuilders[builderId].updateHiddenInput();\n            }\n        };\n        \n        window.addOption = function(builderId) {\n            if (window.optionBuilders[builderId]) {\n                const builder = window.optionBuilders[builderId];\n                builder.optionCounter++;\n                builder.options.push(`Option ${builder.optionCounter}`);\n                builder.renderOptions();\n                \n                // Focus on the new input\n                setTimeout(() => {\n                    const inputs = document.querySelectorAll(`#${builderId} .option-input`);\n                    const newInput = inputs[inputs.length - 1];\n                    if (newInput) {\n                        newInput.focus();\n                        newInput.select();\n                    }\n                }, 100);\n                \n                builder.updateHiddenInput();\n            }\n        };\n        \n        window.handleOptionKeydown = function(event, builderId, index) {\n            if (event.key === 'Enter') {\n                event.preventDefault();\n                addOption(builderId);\n            } else if (event.key === 'Backspace' && event.target.value === '' && window.optionBuilders[builderId].options.length > 1) {\n                event.preventDefault();\n                removeOption(builderId, index);\n                // Focus on previous input if available\n                setTimeout(() => {\n                    const inputs = document.querySelectorAll(`#${builderId} .option-input`);\n                    const prevInput = inputs[Math.max(0, index - 1)];\n                    if (prevInput) {\n                        prevInput.focus();\n                    }\n                }, 100);\n            }\n        };\n        \n        function updateHiddenInput() {\n            const hiddenInput = document.querySelector('[name=\"options_text\"]');\n            if (hiddenInput) {\n                hiddenInput.value = options.filter(opt => opt.trim()).join('\\n');\n            }\n        }\n        \n        function initializeOptionSorting(builderId) {\n            const optionList = document.getElementById(`option-list-${builderId}`);\n            if (optionList && window.Sortable) {\n                new Sortable(optionList, {\n                    handle: '.option-drag-handle',\n                    animation: 150,\n                    ghostClass: 'option-dragging',\n                    onEnd: function(evt) {\n                        const builder = window.optionBuilders[builderId];\n                        if (builder) {\n                            // Reorder the options array\n                            const movedOption = builder.options.splice(evt.oldIndex, 1)[0];\n                            builder.options.splice(evt.newIndex, 0, movedOption);\n                            builder.updateHiddenInput();\n                        }\n                    }\n                });\n            }\n        }\n        \n        renderOptions();\n        updateHiddenInput();\n        \n        window.optionBuilders[containerId] = {\n            options,\n            optionCounter,\n            renderOptions,\n            updateHiddenInput\n        };\n    }\n    \n    // Field type selector functionality\n    function createFieldTypeSelector(containerId, selectedType = '') {\n        const container = document.getElementById(containerId);\n        if (!container) return;\n        \n        const fieldTypes = [\n            { value: 'text', label: 'Short answer', icon: 'fas fa-font', description: 'Single line text input' },\n            { value: 'textarea', label: 'Paragraph', icon: 'fas fa-align-left', description: 'Multi-line text input' },\n            { value: 'radio', label: 'Multiple choice', icon: 'fas fa-circle-dot', description: 'Select one option' },\n            { value: 'checkbox', label: 'Checkboxes', icon: 'fas fa-check-square', description: 'Select multiple options' },\n            { value: 'dropdown', label: 'Dropdown', icon: 'fas fa-caret-down', description: 'Select from dropdown list' },\n            { value: 'number', label: 'Number', icon: 'fas fa-hashtag', description: 'Numeric input' },\n            { value: 'email', label: 'Email', icon: 'fas fa-envelope', description: 'Email address input' },\n            { value: 'date', label: 'Date', icon: 'fas fa-calendar-alt', description: 'Date picker input' }\n        ];\n        \n        container.innerHTML = `\n            <div class=\"field-type-grid\">\n                ${fieldTypes.map(type => `\n                    \n                <div class=\"field-type-option ${selectedType === type.value ? 'selected' : ''}\" \n                         data-type=\"${type.value}\"\n                         onclick=\"selectFieldType('${type.value}')\"\n                         title=\"${type.description}\">\n                    <i class=\"${type.icon}\"></i>\n                    <span>${type.label}</span>\n                </div>\n                `).join('')}\n            </div>\n        `;\n        \n        window.selectFieldType = function(type) {\n            // Update visual selection\n            container.querySelectorAll('.field-type-option').forEach(option => {\n                option.classList.toggle('selected', option.dataset.type === type);\n            });\n            \n            // Update hidden select\n            const hiddenSelect = document.querySelector('[name=\"field_type\"]');\n            if (hiddenSelect) {\n                hiddenSelect.value = type;\n            }\n            \n            // Show/hide options builder based on field type\n            const optionsContainer = document.getElementById('options-builder');\n            const needsOptions = ['radio', 'checkbox', 'dropdown'].includes(type);\n            if (optionsContainer) {\n                optionsContainer.style.display = needsOptions ? 'block' : 'none';\n                \n                // Initialize or update option builder if needed\n                if (needsOptions) {\n                    const builderContainer = document.getElementById('options-container');\n                    if (builderContainer && !window.optionBuilders['options-container']) {\n                        createOptionBuilder('options-container');\n                    }\n                }\n            }\n        };\n        \n        // Auto-select first option if none selected\n        if (!selectedType) {\n            selectFieldType('text');\n        }\n    }\n        </script>\n    </body>\n</html>"
				},
				{
					"name": "Sample Response 2",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/html",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{local_url}}/accounts/login/",
							"host": [
								"{{local_url}}"
							],
							"path": [
								"accounts",
								"login",
								""
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "html",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/html; charset=utf-8"
						},
						{
							"key": "Expires",
							"value": "Sat, 14 Jun 2025 08:11:22 GMT"
						},
						{
							"key": "Cache-Control",
							"value": "max-age=0, no-cache, no-store, must-revalidate, private"
						},
						{
							"key": "Vary",
							"value": "Cookie"
						},
						{
							"key": "X-Frame-Options",
							"value": "DENY"
						},
						{
							"key": "Content-Length",
							"value": "58066"
						},
						{
							"key": "X-Content-Type-Options",
							"value": "nosniff"
						},
						{
							"key": "Referrer-Policy",
							"value": "same-origin"
						},
						{
							"key": "Cross-Origin-Opener-Policy",
							"value": "same-origin"
						},
						{
							"key": "Set-Cookie",
							"value": "csrftoken=pS71uVLEU6GUXotyBOOShxFpiGnS3SJL; expires=Sat, 13 Jun 2026 08:11:22 GMT; Max-Age=31449600; Path=/; SameSite=Lax"
						},
						{
							"key": "Server",
							"value": "daphne"
						}
					],
					"cookie": [],
					"body": "<!DOCTYPE html>\n<html lang=\"en\">\n    <head>\n        <meta charset=\"UTF-8\">\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n        <title>Sign in - CollabForms</title>\n        <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css\" rel=\"stylesheet\">\n        <link href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css\" rel=\"stylesheet\">\n        <link href=\"https://fonts.googleapis.com/css2?family=Google+Sans:wght@300;400;500;600;700&family=Roboto:wght@300;400;500;600;700&display=swap\" rel=\"stylesheet\">\n        <style>\n        :root {\n            /* Google Forms exact color palette */\n            --primary-color: #1a73e8;\n            --primary-hover: #1557b0;\n            --secondary-color: #5f6368;\n            --text-primary: #202124;\n            --text-secondary: #5f6368;\n            --text-muted: #9aa0a6;\n            --border-color: #dadce0;\n            --border-focus: #4285f4;\n            --background-primary: #ffffff;\n            --background-secondary: #f1f3f4;\n            --background-tertiary: #e8eaed;\n            --surface-color: #ffffff;\n            --surface-raised: #ffffff;\n            --shadow-light: 0 1px 2px 0 rgba(60,64,67,.3), 0 1px 3px 1px rgba(60,64,67,.15);\n            --shadow-medium: 0 1px 3px 0 rgba(60,64,67,.3), 0 4px 8px 3px rgba(60,64,67,.15);\n            --shadow-heavy: 0 2px 6px 2px rgba(60,64,67,.15), 0 8px 24px 4px rgba(60,64,67,.15);\n            --success-color: #34a853;\n            --warning-color: #fbbc04;\n            --error-color: #ea4335;\n            --purple-accent: #9c27b0;\n            --forms-purple: #673ab7;\n        }\n        \n        * {\n            font-family: 'Google Sans', 'Roboto', -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif;\n        }\n        \n        body {\n            background-color: var(--background-secondary);\n            color: var(--text-primary);\n            line-height: 1.6;\n            font-size: 14px;\n            margin: 0;\n            padding: 0;\n        }\n        \n        /* Google Forms-style header */\n        .navbar {\n            background: var(--surface-color) !important;\n            border-bottom: 1px solid var(--border-color);\n            box-shadow: var(--shadow-light);\n            min-height: 64px;\n            padding: 0;\n        }\n        \n        .navbar-brand {\n            font-family: 'Google Sans', sans-serif;\n            font-weight: 500;\n            color: var(--text-primary) !important;\n            font-size: 22px;\n            padding: 0;\n            margin: 0;\n        }\n        \n        .navbar-brand i {\n            color: var(--forms-purple);\n            margin-right: 8px;\n        }\n        \n        /* Google Forms-style cards */\n        .form-card {\n            background: var(--surface-color);\n            border: 1px solid var(--border-color);\n            border-radius: 8px;\n            box-shadow: var(--shadow-light);\n            transition: all 0.2s cubic-bezier(0.4,0,0.2,1);\n            overflow: hidden;\n        }\n        \n        .form-card:hover {\n            box-shadow: var(--shadow-medium);\n        }\n        \n        .form-card-header {\n            border-top: 10px solid var(--forms-purple);\n            padding: 24px 24px 0 24px;\n            background: var(--surface-color);\n        }\n        \n        .form-card-body {\n            padding: 24px;\n        }\n        \n        /* Google Forms-style buttons */\n        .btn-google-primary {\n            background-color: var(--primary-color);\n            border: none;\n            color: white;\n            border-radius: 4px;\n            font-weight: 500;\n            font-size: 14px;\n            padding: 8px 24px;\n            height: 40px;\n            transition: all 0.2s cubic-bezier(0.4,0,0.2,1);\n            text-transform: none;\n            box-shadow: none;\n        }\n        \n        .btn-google-primary:hover {\n            background-color: var(--primary-hover);\n            color: white;\n            box-shadow: 0 1px 2px 0 rgba(60,64,67,.3), 0 1px 3px 1px rgba(60,64,67,.15);\n        }\n        \n        .btn-google-secondary {\n            background-color: transparent;\n            border: 1px solid var(--border-color);\n            color: var(--primary-color);\n            border-radius: 4px;\n            font-weight: 500;\n            font-size: 14px;\n            padding: 8px 24px;\n            height: 40px;\n            transition: all 0.2s cubic-bezier(0.4,0,0.2,1);\n            text-transform: none;\n        }\n        \n        .btn-google-secondary:hover {\n            background-color: rgba(26, 115, 232, 0.04);\n            border-color: var(--primary-color);\n            color: var(--primary-color);\n        }\n        \n        .btn-google-text {\n            background: transparent;\n            border: none;\n            color: var(--primary-color);\n            font-weight: 500;\n            font-size: 14px;\n            padding: 8px 16px;\n            border-radius: 4px;\n            transition: all 0.2s cubic-bezier(0.4,0,0.2,1);\n        }\n        \n        .btn-google-text:hover {\n            background-color: rgba(26, 115, 232, 0.04);\n            color: var(--primary-color);\n        }\n        \n        /* Google Forms-style form inputs */\n        .form-input-google {\n            border: none;\n            border-bottom: 1px solid var(--border-color);\n            border-radius: 4px 4px 0 0;\n            background-color: #f8f9fa;\n            padding: 16px 16px 6px 16px;\n            font-size: 16px;\n            line-height: 1.5;\n            transition: all 0.2s cubic-bezier(0.4,0,0.2,1);\n            width: 100%;\n        }\n        \n        .form-input-google:focus {\n            outline: none;\n            border-bottom: 2px solid var(--primary-color);\n            background-color: #fafbfc;\n            box-shadow: 0 2px 4px rgba(26, 115, 232, 0.1);\n        }\n        \n        .form-floating-google {\n            position: relative;\n        }\n        \n        .form-floating-google > .form-input-google {\n            padding-top: 20px;\n            padding-bottom: 4px;\n        }\n        \n        .form-floating-google > label {\n            position: absolute;\n            top: 0;\n            left: 16px;\n            padding-top: 16px;\n            color: var(--text-secondary);\n            font-size: 16px;\n            font-weight: 400;\n            transition: all 0.2s cubic-bezier(0.4,0,0.2,1);\n            pointer-events: none;\n            transform-origin: 0 0;\n        }\n        \n        .form-floating-google > .form-input-google:focus ~ label,\n        .form-floating-google > .form-input-google:not(:placeholder-shown) ~ label {\n            transform: translateY(-50%) scale(0.75);\n            color: var(--primary-color);\n            padding-top: 4px;\n        }\n        \n        /* User avatar */\n        .user-avatar {\n            width: 32px;\n            height: 32px;\n            border-radius: 50%;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            color: white;\n            font-weight: 500;\n            font-size: 14px;\n            background: linear-gradient(135deg, var(--primary-color), var(--forms-purple));\n        }\n        \n        /* Connection status */\n        .connection-status {\n            position: fixed;\n            bottom: 24px;\n            right: 24px;\n            z-index: 1050;\n            border-radius: 4px;\n            padding: 8px 16px;\n            font-size: 14px;\n            font-weight: 500;\n            box-shadow: var(--shadow-medium);\n        }\n        \n        .connection-connected {\n            background-color: var(--success-color);\n            color: white;\n        }\n        \n        .connection-connecting {\n            background-color: var(--warning-color);\n            color: var(--text-primary);\n        }\n        \n        .connection-disconnected {\n            background-color: var(--error-color);\n            color: white;\n        }\n        \n        /* Page layouts */\n        .page-container {\n            max-width: 768px;\n            margin: 0 auto;\n            padding: 0 16px;\n        }\n        \n        .page-container-wide {\n            max-width: 1200px;\n            margin: 0 auto;\n            padding: 0 16px;\n        }\n        \n        .auth-container {\n            min-height: 100vh;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n            padding: 24px;\n        }\n        \n        .auth-card {\n            background: var(--surface-color);\n            border-radius: 12px;\n            box-shadow: var(--shadow-heavy);\n            width: 100%;\n            max-width: 420px;\n            overflow: hidden;\n        }\n        \n        .auth-header {\n            text-align: center;\n            padding: 48px 48px 24px 48px;\n        }\n        \n        .auth-body {\n            padding: 0 48px 48px 48px;\n        }\n        \n        .auth-logo {\n            color: var(--forms-purple);\n            font-size: 48px;\n            margin-bottom: 24px;\n        }\n        \n        .auth-title {\n            font-size: 24px;\n            font-weight: 400;\n            color: var(--text-primary);\n            margin-bottom: 8px;\n        }\n        \n        .auth-subtitle {\n            font-size: 16px;\n            color: var(--text-secondary);\n            margin-bottom: 0;\n        }\n        \n        /* Dropdown menus */\n        .dropdown-menu {\n            border: 1px solid var(--border-color);\n            border-radius: 8px;\n            box-shadow: var(--shadow-medium);\n            padding: 8px 0;\n            min-width: 200px;\n        }\n        \n        .dropdown-item {\n            padding: 12px 16px;\n            font-size: 14px;\n            color: var(--text-primary);\n            border: none;\n            background: none;\n            transition: background-color 0.2s cubic-bezier(0.4,0,0.2,1);\n        }\n        \n        .dropdown-item:hover {\n            background-color: var(--background-tertiary);\n            color: var(--text-primary);\n        }\n        \n        .dropdown-divider {\n            margin: 8px 0;\n            border-top: 1px solid var(--border-color);\n        }\n        \n        /* Alert messages */\n        .alert {\n            border-radius: 4px;\n            border: none;\n            font-size: 14px;\n            padding: 16px;\n            margin-bottom: 16px;\n        }\n        \n        .alert-success {\n            background-color: #e8f5e8;\n            color: #1e7e34;\n        }\n        \n        .alert-warning {\n            background-color: #fff3cd;\n            color: #856404;\n        }\n        \n        .alert-danger {\n            background-color: #f8d7da;\n            color: #721c24;\n        }\n        \n        .alert-info {\n            background-color: #d1ecf1;\n            color: #0c5460;\n        }\n        \n        /* Loading animations */\n        .loading-spinner {\n            display: inline-block;\n            width: 16px;\n            height: 16px;\n            border: 2px solid var(--border-color);\n            border-radius: 50%;\n            border-top-color: var(--primary-color);\n            animation: spin 1s linear infinite;\n        }\n        \n        @keyframes spin {\n            to { transform: rotate(360deg); }\n        }\n        \n        .fade-in {\n            animation: fadeIn 0.3s cubic-bezier(0.4,0,0.2,1);\n        }\n        \n        @keyframes fadeIn {\n            from { opacity: 0; transform: translateY(8px); }\n            to { opacity: 1; transform: translateY(0); }\n        }\n        \n        /* Option builder styles */\n        .option-builder {\n            width: 100%;\n        }\n        \n        .option-item {\n            display: flex;\n            align-items: center;\n            gap: 8px;\n            margin-bottom: 8px;\n            padding: 8px;\n            border: 1px solid var(--border-color);\n            border-radius: 4px;\n            background-color: var(--surface-color);\n            transition: all 0.2s cubic-bezier(0.4,0,0.2,1);\n        }\n        \n        .option-item:hover {\n            border-color: var(--primary-color);\n        }\n        \n        .option-item .field-handle {\n            color: var(--text-muted);\n            cursor: grab;\n            padding: 4px;\n        }\n        \n        .option-item .field-handle:active {\n            cursor: grabbing;\n        }\n        \n        .option-input {\n            flex: 1;\n            border: none;\n            outline: none;\n            background: transparent;\n            font-size: 14px;\n            color: var(--text-primary);\n            padding: 4px 0;\n        }\n        \n        .option-input::placeholder {\n            color: var(--text-muted);\n        }\n        \n        .option-remove {\n            background: transparent;\n            border: none;\n            color: var(--text-muted);\n            padding: 4px;\n            border-radius: 3px;\n            transition: all 0.2s cubic-bezier(0.4,0,0.2,1);\n            cursor: pointer;\n        }\n        \n        .option-remove:hover {\n            background-color: var(--error-color);\n            color: white;\n        }\n        \n        .option-add {\n            display: flex;\n            align-items: center;\n            gap: 8px;\n            width: 100%;\n            background: transparent;\n            border: 1px dashed var(--border-color);\n            border-radius: 4px;\n            padding: 12px;\n            color: var(--primary-color);\n            font-size: 14px;\n            font-weight: 500;\n            transition: all 0.2s cubic-bezier(0.4,0,0.2,1);\n            cursor: pointer;\n            margin-top: 4px;\n        }\n        \n        .option-add:hover {\n            background-color: rgba(26, 115, 232, 0.04);\n            border-color: var(--primary-color);\n        }\n        \n        .option-add i {\n            font-size: 12px;\n        }\n        \n        /* Field type selector styles */\n        .field-type-grid {\n            display: grid;\n            grid-template-columns: repeat(auto-fit, minmax(140px, 1fr));\n            gap: 8px;\n            margin-bottom: 16px;\n        }\n        \n        .field-type-option {\n            display: flex;\n            flex-direction: column;\n            align-items: center;\n            gap: 6px;\n            padding: 16px 8px;\n            border: 1px solid var(--border-color);\n            border-radius: 6px;\n            background-color: var(--surface-color);\n            cursor: pointer;\n            transition: all 0.2s cubic-bezier(0.4,0,0.2,1);\n            text-align: center;\n            position: relative;\n            overflow: hidden;\n        }\n        \n        .field-type-option:hover {\n            border-color: var(--primary-color);\n            background-color: rgba(26, 115, 232, 0.04);\n        }\n        \n        .field-type-option.selected {\n            border-color: var(--primary-color);\n            background-color: rgba(26, 115, 232, 0.08);\n            color: var(--primary-color);\n        }\n        \n        .field-type-option i {\n            font-size: 18px;\n            color: var(--text-secondary);\n            transition: color 0.2s cubic-bezier(0.4,0,0.2,1);\n        }\n        \n        .field-type-option.selected i {\n            color: var(--primary-color);\n        }\n        \n        .field-type-option span {\n            font-size: 12px;\n            font-weight: 500;\n            color: var(--text-primary);\n        }\n        \n        /* Enhanced responsive design */\n        /* Enhanced responsive design for different screen sizes */\n        \n        /* Mobile First - Base styles for small devices */\n        @media (max-width: 575.98px) {\n            .page-container {\n                padding: 0 8px;\n                max-width: 100%;\n            }\n            \n            .page-container-wide {\n                padding: 0 8px;\n                max-width: 100%;\n            }\n            \n            .auth-container {\n                padding: 16px;\n                min-height: 100vh;\n            }\n            \n            .auth-header {\n                padding: 32px 20px 20px 20px;\n            }\n            \n            .auth-body {\n                padding: 0 20px 32px 20px;\n            }\n            \n            .form-group-google {\n                margin-bottom: 20px;\n            }\n            \n            .navbar-brand {\n                font-size: 18px;\n            }\n            \n            .form-card-body {\n                padding: 16px;\n            }\n            \n            .form-card-header {\n                padding: 16px 16px 0 16px;\n            }\n            \n            .field-type-grid {\n                grid-template-columns: repeat(2, 1fr);\n                gap: 6px;\n            }\n            \n            .field-type-option {\n                padding: 12px 6px;\n                min-height: 70px;\n            }\n            \n            .field-type-option i {\n                font-size: 16px;\n                margin-bottom: 4px;\n            }\n            \n            .field-type-option span {\n                font-size: 10px;\n                line-height: 1.2;\n            }\n            \n            .page-header .d-flex {\n                flex-direction: column;\n                align-items: stretch !important;\n                gap: 12px;\n            }\n            \n            .btn-group {\n                width: 100%;\n                flex-direction: column;\n            }\n            \n            .btn-group .btn {\n                flex: 1;\n                margin-left: 0;\n                margin-bottom: 4px;\n            }\n            \n            .option-item {\n                flex-wrap: wrap;\n                gap: 6px;\n            }\n            \n            .option-input-wrapper {\n                flex: 1;\n                min-width: 200px;\n                margin: 0;\n            }\n        }\n        \n        /* Small devices - tablets portrait */\n        @media (min-width: 576px) and (max-width: 767.98px) {\n            .page-container {\n                padding: 0 12px;\n                max-width: 540px;\n            }\n            \n            .page-container-wide {\n                padding: 0 12px;\n                max-width: 720px;\n            }\n            \n            .auth-container {\n                padding: 20px;\n            }\n            \n            .auth-header {\n                padding: 40px 28px 20px 28px;\n            }\n            \n            .auth-body {\n                padding: 0 28px 40px 28px;\n            }\n            \n            .form-group-google {\n                margin-bottom: 22px;\n            }\n            \n            .field-type-grid {\n                grid-template-columns: repeat(3, 1fr);\n                gap: 8px;\n            }\n            \n            .field-type-option {\n                padding: 14px 8px;\n                min-height: 80px;\n            }\n            \n            .field-type-option i {\n                font-size: 18px;\n                margin-bottom: 6px;\n            }\n            \n            .field-type-option span {\n                font-size: 11px;\n            }\n        }\n        \n        /* Medium devices - tablets landscape */\n        @media (min-width: 768px) and (max-width: 991.98px) {\n            .page-container {\n                padding: 0 16px;\n                max-width: 720px;\n            }\n            \n            .page-container-wide {\n                padding: 0 16px;\n                max-width: 960px;\n            }\n            \n            .form-card-body {\n                padding: 20px;\n            }\n            \n            .form-card-header {\n                padding: 20px 20px 0 20px;\n            }\n            \n            .field-type-grid {\n                grid-template-columns: repeat(4, 1fr);\n                gap: 8px;\n            }\n            \n            .field-type-option {\n                padding: 16px 10px;\n                min-height: 85px;\n            }\n            \n            .field-type-option i {\n                font-size: 20px;\n                margin-bottom: 8px;\n            }\n            \n            .field-type-option span {\n                font-size: 12px;\n            }\n        }\n        \n        /* Large devices - small laptops */\n        @media (min-width: 992px) and (max-width: 1199.98px) {\n            .page-container {\n                padding: 0 20px;\n                max-width: 960px;\n            }\n            \n            .page-container-wide {\n                padding: 0 20px;\n                max-width: 1140px;\n            }\n            \n            .field-type-grid {\n                grid-template-columns: repeat(4, 1fr);\n                gap: 10px;\n            }\n            \n            .field-type-option {\n                padding: 18px 12px;\n                min-height: 90px;\n            }\n            \n            .field-type-option i {\n                font-size: 22px;\n                margin-bottom: 8px;\n            }\n            \n            .field-type-option span {\n                font-size: 13px;\n            }\n        }\n        \n        /* Extra large devices - large laptops and desktops */\n        @media (min-width: 1200px) and (max-width: 1399.98px) {\n            .page-container {\n                padding: 0 24px;\n                max-width: 1140px;\n            }\n            \n            .page-container-wide {\n                padding: 0 24px;\n                max-width: 1320px;\n            }\n            \n            .field-type-grid {\n                grid-template-columns: repeat(4, 1fr);\n                gap: 12px;\n            }\n            \n            .field-type-option {\n                padding: 20px 14px;\n                min-height: 95px;\n            }\n            \n            .field-type-option i {\n                font-size: 24px;\n                margin-bottom: 10px;\n            }\n            \n            .field-type-option span {\n                font-size: 14px;\n            }\n        }\n        \n        /* Extra extra large devices - large monitors */\n        @media (min-width: 1400px) {\n            .page-container {\n                padding: 0 30px;\n                max-width: 1200px;\n            }\n            \n            .page-container-wide {\n                padding: 0 30px;\n                max-width: 1600px;\n            }\n            \n            .field-type-grid {\n                grid-template-columns: repeat(4, 1fr);\n                gap: 15px;\n            }\n            \n            .field-type-option {\n                padding: 22px 16px;\n                min-height: 100px;\n            }\n            \n            .field-type-option i {\n                font-size: 26px;\n                margin-bottom: 12px;\n            }\n            \n            .field-type-option span {\n                font-size: 15px;\n            }\n        }\n        \n        /* Laptop-specific fixes for alignment issues */\n        @media (min-width: 1024px) and (max-width: 1440px) and (orientation: landscape) {\n            /* Common laptop resolution fixes */\n            .row.g-4 {\n                --bs-gutter-x: 2rem;\n                --bs-gutter-y: 2rem;\n            }\n            \n            .col-xl-8, .col-lg-7 {\n                flex: 0 0 auto;\n                width: 66.66666667%;\n            }\n            \n            .col-xl-4, .col-lg-5 {\n                flex: 0 0 auto;\n                width: 33.33333333%;\n            }\n            \n            .sticky-form-panel {\n                position: sticky;\n                top: 24px;\n                height: fit-content;\n                max-height: calc(100vh - 48px);\n                overflow-y: auto;\n            }\n            \n            /* Better spacing for form elements */\n            .form-group-google {\n                margin-bottom: 1.5rem;\n            }\n            \n            .option-builder {\n                max-height: 300px;\n                overflow-y: auto;\n                border: 1px solid var(--border-color);\n                border-radius: 6px;\n                padding: 12px;\n            }\n            \n            /* Improved field item layout */\n            .field-item {\n                margin-bottom: 1rem;\n                padding: 1.25rem;\n            }\n            \n            .field-item .d-flex {\n                align-items: flex-start;\n                gap: 1rem;\n            }\n            \n            /* Better button alignment */\n            .d-flex.gap-2 {\n                gap: 0.75rem !important;\n            }\n            \n            .d-flex.gap-3 {\n                gap: 1rem !important;\n            }\n        }\n        \n        /* Ultra-wide screen optimizations */\n        @media (min-width: 1920px) {\n            .page-container-wide {\n                max-width: 1800px;\n            }\n            \n            .row.g-4 {\n                --bs-gutter-x: 3rem;\n            }\n            \n            .form-card {\n                box-shadow: var(--shadow-medium);\n            }\n        }\n        \n        /* Height-based responsive adjustments */\n        @media (max-height: 700px) and (min-width: 992px) {\n            .sticky-form-panel {\n                position: static;\n            }\n            \n            .form-card-body {\n                padding: 16px;\n            }\n            \n            .form-group-google {\n                margin-bottom: 1rem;\n            }\n        }\n        \n        /* High DPI screen adjustments */\n        @media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi) {\n            .form-card {\n                border-width: 0.5px;\n            }\n            \n            .option-item {\n                border-width: 0.5px;\n            }\n            \n            .field-type-option {\n                border-width: 0.5px;\n            }\n        }\n        \n        /* Additional utility classes for better alignment */\n        .status-indicator {\n            width: 8px;\n            height: 8px;\n            border-radius: 50%;\n            margin-right: 6px;\n            flex-shrink: 0;\n        }\n        \n        .status-online {\n            background-color: var(--success-color);\n        }\n        \n        .status-editing {\n            background-color: var(--warning-color);\n            animation: pulse 2s infinite;\n        }\n        \n        @keyframes pulse {\n            0% { opacity: 1; }\n            50% { opacity: 0.5; }\n            100% { opacity: 1; }\n        }\n        \n        /* Field handle for drag and drop */\n        .field-handle {\n            color: var(--text-muted);\n            cursor: grab;\n            padding: 4px;\n            transition: color 0.2s cubic-bezier(0.4,0,0.2,1);\n        }\n        \n        .field-handle:hover {\n            color: var(--text-secondary);\n        }\n        \n        .field-handle:active {\n            cursor: grabbing;\n        }\n        \n        /* Field item styles */\n        .field-item {\n            transition: all 0.2s cubic-bezier(0.4,0,0.2,1);\n        }\n        \n        .field-item:hover {\n            box-shadow: var(--shadow-light);\n        }\n        \n        .field-item.dragging {\n            opacity: 0.7;\n            transform: rotate(5deg);\n        }\n        \n        /* Better form input focus states */\n        .form-input-google:focus {\n            outline: none;\n            border-bottom: 2px solid var(--primary-color);\n            background-color: #fafbfc;\n            box-shadow: 0 2px 4px rgba(26, 115, 232, 0.1);\n        }\n        \n        /* Improved checkbox and radio styles */\n        .form-check-input:checked {\n            background-color: var(--primary-color);\n            border-color: var(--primary-color);\n        }\n        \n        .form-check-input:focus {\n            border-color: var(--primary-color);\n            outline: none;\n            box-shadow: 0 0 0 0.25rem rgba(26, 115, 232, 0.25);\n        }\n        \n        /* Page header improvements */\n        .page-header {\n            background-color: var(--surface-color);\n            border-bottom: 1px solid var(--border-color);\n            margin-bottom: 0;\n        }\n        \n        /* Better button spacing in groups */\n        .btn-group .btn,\n        .d-flex .btn + .btn {\n            margin-left: 8px;\n        }\n        \n        /* Better form field error states */\n        .form-input-google.is-invalid {\n            border-bottom-color: var(--error-color);\n        }\n        \n        .form-input-google.is-invalid:focus {\n            border-bottom-color: var(--error-color);\n            box-shadow: 0 2px 4px rgba(234, 67, 53, 0.1);\n        }\n        \n        /* Consistent border radius */\n        .rounded {\n            border-radius: 6px !important;\n        }\n        \n        .rounded-pill {\n            border-radius: 16px !important;\n        }\n        \n        /* Enhanced option builder styles */\n        .option-list {\n            margin-bottom: 12px;\n        }\n        \n        .option-drag-handle {\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            width: 24px;\n            height: 24px;\n            color: var(--text-muted);\n            cursor: grab;\n            border-radius: 3px;\n            transition: all 0.2s cubic-bezier(0.4,0,0.2,1);\n        }\n        \n        .option-drag-handle:hover {\n            background-color: var(--background-tertiary);\n            color: var(--text-secondary);\n        }\n        \n        .option-drag-handle:active {\n            cursor: grabbing;\n        }\n        \n        .option-input-wrapper {\n            flex: 1;\n            margin: 0 8px;\n        }\n        \n        .option-remove-placeholder {\n            width: 24px;\n            height: 24px;\n        }\n        \n        .option-dragging {\n            opacity: 0.5;\n            transform: rotate(2deg);\n        }\n        \n        .option-item:last-child .option-input {\n            border-bottom-color: transparent;\n        }\n        \n        .option-item .option-input:focus {\n            border-bottom-color: var(--primary-color);\n        }\n        \n        /* Field type option hover effects */\n        .field-type-option {\n            position: relative;\n            overflow: hidden;\n        }\n        \n        .field-type-option::before {\n            content: '';\n            position: absolute;\n            top: 0;\n            left: -100%;\n            width: 100%;\n            height: 100%;\n            background: linear-gradient(90deg, transparent, rgba(26, 115, 232, 0.1), transparent);\n            transition: left 0.5s ease;\n        }\n        \n        .field-type-option:hover::before {\n            left: 100%;\n        }\n        \n        /* Form validation styles */\n        .is-invalid .option-input {\n            border-bottom-color: var(--error-color);\n        }\n        \n        .invalid-feedback {\n            color: var(--error-color);\n            font-size: 12px;\n            margin-top: 4px;\n        }\n        \n        /* Loading state for option builder */\n        .option-builder.loading {\n            opacity: 0.6;\n            pointer-events: none;\n        }\n        \n        .option-builder.loading::after {\n            content: '';\n            position: absolute;\n            top: 50%;\n            left: 50%;\n            transform: translate(-50%, -50%);\n            width: 20px;\n            height: 20px;\n            border: 2px solid var(--border-color);\n            border-top-color: var(--primary-color);\n            border-radius: 50%;\n            animation: spin 1s linear infinite;\n        }\n        \n        /* Dashboard specific responsive improvements */\n        .dashboard-stats {\n            margin-bottom: 2rem;\n        }\n        \n        .dashboard-stats .form-card {\n            transition: all 0.3s cubic-bezier(0.4,0,0.2,1);\n        }\n        \n        .dashboard-stats .form-card:hover {\n            transform: translateY(-2px);\n            box-shadow: var(--shadow-medium);\n        }\n        \n        /* Forms grid responsive layout */\n        @media (min-width: 1200px) {\n            .forms-grid .col-xl-4 {\n                flex: 0 0 auto;\n                width: 33.333333%;\n            }\n        }\n        \n        @media (min-width: 992px) and (max-width: 1199.98px) {\n            .forms-grid .col-lg-6 {\n                flex: 0 0 auto;\n                width: 50%;\n            }\n        }\n        \n        @media (max-width: 991.98px) {\n            .forms-grid .col-md-12 {\n                flex: 0 0 auto;\n                width: 100%;\n            }\n        }\n        \n        /* Better button groups on mobile */\n        @media (max-width: 767.98px) {\n            .btn-group-mobile {\n                display: flex;\n                flex-direction: column;\n                gap: 8px;\n                width: 100%;\n            }\n            \n            .btn-group-mobile .btn {\n                width: 100%;\n                margin-left: 0;\n            }\n            \n            .page-header .d-flex {\n                flex-direction: column;\n                align-items: stretch !important;\n                gap: 16px;\n            }\n            \n            .page-header .flex-grow-1 {\n                text-align: center;\n            }\n        }\n        \n        /* Form card improvements for different screen sizes */\n        .form-item-card {\n            transition: all 0.2s cubic-bezier(0.4,0,0.2,1);\n            height: 100%;\n            display: flex;\n            flex-direction: column;\n        }\n        \n        .form-item-card:hover {\n            transform: translateY(-1px);\n            box-shadow: var(--shadow-light);\n        }\n        \n        .form-item-card .form-item-content {\n            flex: 1;\n            display: flex;\n            flex-direction: column;\n        }\n        \n        .form-item-card .form-item-footer {\n            margin-top: auto;\n            padding-top: 12px;\n        }\n        \n        /* Enhanced responsiveness for collaboration UI */\n        .collaboration-panel {\n            position: sticky;\n            top: 24px;\n            max-height: calc(100vh - 48px);\n            overflow-y: auto;\n        }\n        \n        @media (max-width: 991.98px) {\n            .collaboration-panel {\n                position: static;\n                max-height: none;\n            }\n        }\n        \n        /* Better form field spacing on different screen sizes */\n        @media (min-width: 768px) and (max-width: 1023.98px) {\n            .form-group-google {\n                margin-bottom: 1.25rem;\n            }\n            \n            .field-type-grid {\n                gap: 8px;\n            }\n            \n            .option-builder {\n                padding: 14px;\n            }\n        }\n        \n        /* Ultra-wide screen optimizations */\n        @media (min-width: 1600px) {\n            .page-container-wide {\n                max-width: 1500px;\n            }\n            \n            .forms-grid {\n                --bs-gutter-x: 2rem;\n            }\n            \n            .dashboard-stats {\n                --bs-gutter-x: 1.5rem;\n            }\n        }\n        \n        /* Print styles */\n        @media print {\n            .page-header,\n            .btn,\n            .dropdown,\n            .connection-status,\n            .navbar {\n                display: none !important;\n            }\n            \n            .form-card {\n                border: 1px solid #ddd !important;\n                box-shadow: none !important;\n                page-break-inside: avoid;\n            }\n            \n            .page-container,\n            .page-container-wide {\n                max-width: none !important;\n                padding: 0 !important;\n            }\n        }\n        \n        /* Google Forms-style form groups */\n        .form-group-google {\n            margin-bottom: 24px;\n            position: relative;\n        }\n        \n        .form-error {\n            color: var(--error-color);\n            font-size: 12px;\n            margin-top: 6px;\n            font-weight: 400;\n        }\n        \n        .form-help {\n            color: var(--text-muted);\n            font-size: 12px;\n            margin-top: 6px;\n            line-height: 1.4;\n        }\n    </style>\n    </head>\n    <body>\n        <nav class=\"navbar navbar-expand-lg\">\n            <div class=\"container-fluid px-4\">\n                <a class=\"navbar-brand d-flex align-items-center\" href=\"/forms/\">\n                    <i class=\"fas fa-poll-h me-2\"></i>\n                CollabForms\n                </a>\n                <div class=\"navbar-nav ms-auto\">\n                    <a class=\"btn btn-google-text me-2\" href=\"/accounts/login/\">\n                        <i class=\"fas fa-sign-in-alt me-1\"></i>Sign in\n                    </a>\n                    <a class=\"btn btn-google-primary\" href=\"/accounts/register/\">\n                        <i class=\"fas fa-user-plus me-1\"></i>Sign up\n                    </a>\n                </div>\n            </div>\n        </nav>\n        <main>\n            <div class=\"auth-container\">\n                <div class=\"auth-card\">\n                    <div class=\"auth-header\">\n                        <div class=\"auth-logo\">\n                            <i class=\"fas fa-poll-h\"></i>\n                        </div>\n                        <h1 class=\"auth-title\">Sign in</h1>\n                        <p class=\"auth-subtitle\">to continue to CollabForms</p>\n                    </div>\n                    <div class=\"auth-body\">\n                        <form method=\"post\" novalidate>\n                            <input type=\"hidden\" name=\"csrfmiddlewaretoken\" value=\"Y3kA7JGT3N5qFzDG2ebSP7065yLYeE6TdLhrruhnNJBasNW4tSPAWuvld4YG7mFu\">\n                            <div class=\"form-group-google\">\n                                <div class=\"form-floating-google\">\n                                    <input type=\"text\" \n                               class=\"form-input-google\" \n                               id=\"id_username\" \n                               name=\"username\" \n                               placeholder=\" \"\n                               value=\"\"\n                               required>\n                                    <label for=\"id_username\">Username</label>\n                                </div>\n                            </div>\n                            <div class=\"form-group-google\">\n                                <div class=\"form-floating-google\">\n                                    <input type=\"password\" \n                               class=\"form-input-google\" \n                               id=\"id_password\" \n                               name=\"password\" \n                               placeholder=\" \"\n                               required>\n                                    <label for=\"id_password\">Password</label>\n                                </div>\n                            </div>\n                            <div class=\"d-flex justify-content-between align-items-center mb-4 mt-2\">\n                                <a href=\"/accounts/register/\" class=\"btn-google-text p-0\">\n                        Create account\n                    </a>\n                                <button type=\"submit\" class=\"btn btn-google-primary\">\n                        Sign in\n                    </button>\n                            </div>\n                        </form>\n                        <div class=\"text-center mt-4\">\n                            <p class=\"text-muted small mb-0\">\n                    New to CollabForms? \n                    \n                                <a href=\"/accounts/register/\" class=\"text-decoration-none\">\n                        Create an account\n                    </a>\n                            </p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </main>\n        <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js\"></script>\n        <script>\n    // Google Forms-style form field rendering\n    function renderFormField(field, value = '', userEditing = null) {\n        const isLocked = userEditing && userEditing.id !== window.currentUserId;\n        const lockClass = isLocked ? 'field-locked' : '';\n        const lockIcon = isLocked ? `\n            <i class=\"fas fa-lock text-warning ms-2\" title=\"Being edited by ${userEditing.username}\"></i>` : '';\n        \n        let fieldHtml = `\n            <div class=\"form-card mb-3 fade-in\" data-field-id=\"${field.id}\">\n                <div class=\"form-card-body\">\n                    <div class=\"d-flex justify-content-between align-items-start mb-3\">\n                        <div>\n                            <label class=\"form-label fw-normal\">${field.label}</label>\n                            ${field.is_required ? '\n                            <span class=\"text-danger ms-1\">*</span>' : ''}\n                            ${lockIcon}\n                        </div>\n                    </div>\n        `;\n        \n        switch(field.field_type) {\n            case 'text':\n            case 'email':\n            case 'url':\n                fieldHtml += `\n                    <div class=\"form-floating-google\">\n                        <input type=\"${field.field_type}\" \n                               class=\"form-input-google ${lockClass}\" \n                               id=\"field_${field.id}\" \n                               name=\"field_${field.id}\" \n                               placeholder=\" \"\n                               value=\"${value}\"\n                               ${field.is_required ? 'required' : ''}\n                               ${isLocked ? 'disabled' : ''}>\n                        <label for=\"field_${field.id}\">Your answer</label>\n                    </div>\n                `;\n                break;\n                \n            case 'date':\n                fieldHtml += `\n                    <div class=\"form-floating-google\">\n                        <input type=\"date\" \n                               class=\"form-input-google ${lockClass}\" \n                               id=\"field_${field.id}\" \n                               name=\"field_${field.id}\" \n                               value=\"${value}\"\n                               ${field.is_required ? 'required' : ''}\n                               ${isLocked ? 'disabled' : ''}>\n                        <label for=\"field_${field.id}\">Select date</label>\n                    </div>\n                `;\n                break;\n                \n            case 'textarea':\n                fieldHtml += `\n                    <div class=\"form-floating-google\">\n                        <textarea class=\"form-input-google ${lockClass}\" \n                                  id=\"field_${field.id}\" \n                                  name=\"field_${field.id}\" \n                                  placeholder=\" \"\n                                  rows=\"3\"\n                                  style=\"min-height: 100px; resize: vertical;\"\n                                  ${field.is_required ? 'required' : ''}\n                                  ${isLocked ? 'disabled' : ''}>${value}</textarea>\n                        <label for=\"field_${field.id}\">Your answer</label>\n                    </div>\n                `;\n                break;\n                \n            case 'number':\n                fieldHtml += `\n                    <div class=\"form-floating-google\">\n                        <input type=\"number\" \n                               class=\"form-input-google ${lockClass}\" \n                               id=\"field_${field.id}\" \n                               name=\"field_${field.id}\" \n                               placeholder=\" \"\n                               value=\"${value}\"\n                               ${field.is_required ? 'required' : ''}\n                               ${isLocked ? 'disabled' : ''}>\n                        <label for=\"field_${field.id}\">Your answer</label>\n                    </div>\n                `;\n                break;\n                \n            case 'select':\n            case 'dropdown':\n                fieldHtml += `\n                    <select class=\"form-input-google ${lockClass}\" \n                            id=\"field_${field.id}\" \n                            name=\"field_${field.id}\"\n                            ${field.is_required ? 'required' : ''}\n                            ${isLocked ? 'disabled' : ''}>\n                        <option value=\"\" disabled ${!value ? 'selected' : ''}>Choose</option>\n                        ${field.options.map(option => \n                            `\n                        <option value=\"${option}\" ${value === option ? 'selected' : ''}>${option}</option>`\n                        ).join('')}\n                    </select>\n                `;\n                break;\n                \n            case 'radio':\n                fieldHtml += `\n                    <div class=\"d-grid gap-2\">\n                        ${field.options.map((option, index) => `\n                            \n                        <div class=\"form-check\">\n                            <input class=\"form-check-input\" \n                                       type=\"radio\" \n                                       name=\"field_${field.id}\" \n                                       id=\"field_${field.id}_${index}\" \n                                       value=\"${option}\"\n                                       ${value === option ? 'checked' : ''}\n                                       ${isLocked ? 'disabled' : ''}>\n                            <label class=\"form-check-label\" for=\"field_${field.id}_${index}\">\n                                    ${option}\n                                </label>\n                        </div>\n                        `).join('')}\n                    </div>\n                `;\n                break;\n                \n            case 'checkbox':\n                const selectedValues = Array.isArray(value) ? value : (value ? [value] : []);\n                fieldHtml += `\n                    <div class=\"d-grid gap-2\">\n                        ${field.options.map((option, index) => `\n                            \n                        <div class=\"form-check\">\n                            <input class=\"form-check-input\" \n                                       type=\"checkbox\" \n                                       name=\"field_${field.id}\" \n                                       id=\"field_${field.id}_${index}\" \n                                       value=\"${option}\"\n                                       ${selectedValues.includes(option) ? 'checked' : ''}\n                                       ${isLocked ? 'disabled' : ''}>\n                            <label class=\"form-check-label\" for=\"field_${field.id}_${index}\">\n                                    ${option}\n                                </label>\n                        </div>\n                        `).join('')}\n                    </div>\n                `;\n                break;\n        }\n        \n        fieldHtml += `\n                </div>\n            </div>\n        `;\n        \n        return fieldHtml;\n    }\n    \n    // Show user avatars in a Google-style way\n    function renderUserAvatar(user, isEditing = false) {\n        const statusClass = isEditing ? 'status-editing' : 'status-online';\n        return `\n            <div class=\"d-flex align-items-center mb-2\" data-user-id=\"${user.id}\">\n                <div class=\"user-avatar me-2\">${user.username.charAt(0).toUpperCase()}</div>\n                <div class=\"flex-grow-1\">\n                    <div class=\"d-flex align-items-center\">\n                        <span class=\"status-indicator ${statusClass}\"></span>\n                        <span class=\"small fw-medium\">${user.username}</span>\n                    </div>\n                    <div class=\"text-muted\" style=\"font-size: 11px;\">\n                        ${isEditing ? 'Currently editing' : 'Active'}\n                    </div>\n                </div>\n            </div>\n        `;\n    }\n    \n    // Mobile user avatar rendering\n    function renderMobileUserAvatar(user, isEditing = false) {\n        const statusClass = isEditing ? 'status-editing' : 'status-online';\n        return `\n            <div class=\"user-avatar\" \n                 data-user-id=\"${user.id}\" \n                 title=\"${user.username} - ${isEditing ? 'Currently editing' : 'Active'}\"\n                 style=\"position: relative;\">\n                ${user.username.charAt(0).toUpperCase()}\n                \n                <span class=\"status-indicator ${statusClass}\" \n                      style=\"position: absolute; bottom: -2px; right: -2px; border: 1px solid white;\"></span>\n            </div>\n        `;\n    }\n    \n    // Option builder functionality\n    window.optionBuilders = {};\n    \n    function createOptionBuilder(containerId, initialOptions = []) {\n        const container = document.getElementById(containerId);\n        if (!container) return;\n        \n        const options = initialOptions.length > 0 ? initialOptions : ['Option 1'];\n        let optionCounter = options.length;\n        \n        function renderOptions() {\n            container.innerHTML = `\n            <div class=\"option-builder\">\n                <div class=\"mb-3\">\n                    <label class=\"form-label small text-muted mb-2\">Options</label>\n                    <div class=\"option-list\" id=\"option-list-${containerId}\">\n                            ${options.map((option, index) => `\n                                \n                        <div class=\"option-item\" data-index=\"${index}\">\n                            <div class=\"option-drag-handle\">\n                                <i class=\"fas fa-grip-vertical\"></i>\n                            </div>\n                            <div class=\"option-input-wrapper\">\n                                <input type=\"text\" \n                                               class=\"option-input\" \n                                               value=\"${option}\" \n                                               placeholder=\"Enter option text...\"\n                                               onchange=\"updateOption('${containerId}', ${index}, this.value)\"\n                                               onkeydown=\"handleOptionKeydown(event, '${containerId}', ${index})\">\n                                    \n                            </div>\n                                    ${options.length > 1 ? `\n                            <button type=\"button\" \n                                                class=\"option-remove\" \n                                                onclick=\"removeOption('${containerId}', ${index})\"\n                                                title=\"Remove option\">\n                                <i class=\"fas fa-times\"></i>\n                            </button>\n                                    ` : `\n                            <div class=\"option-remove-placeholder\"></div>\n                                    `}\n                        </div>\n                            `).join('')}\n                    </div>\n                    <button type=\"button\" \n                                class=\"option-add\" \n                                onclick=\"addOption('${containerId}')\"\n                                title=\"Add new option\">\n                        <i class=\"fas fa-plus\"></i>\n                        <span>Add option</span>\n                    </button>\n                </div>\n            </div>\n            `;\n            \n            // Initialize drag and drop for options\n            initializeOptionSorting(containerId);\n        }\n        \n        window.updateOption = function(builderId, index, value) {\n            if (window.optionBuilders[builderId]) {\n                window.optionBuilders[builderId].options[index] = value;\n                window.optionBuilders[builderId].updateHiddenInput();\n            }\n        };\n        \n        window.removeOption = function(builderId, index) {\n            if (window.optionBuilders[builderId] && window.optionBuilders[builderId].options.length > 1) {\n                window.optionBuilders[builderId].options.splice(index, 1);\n                window.optionBuilders[builderId].renderOptions();\n                window.optionBuilders[builderId].updateHiddenInput();\n            }\n        };\n        \n        window.addOption = function(builderId) {\n            if (window.optionBuilders[builderId]) {\n                const builder = window.optionBuilders[builderId];\n                builder.optionCounter++;\n                builder.options.push(`Option ${builder.optionCounter}`);\n                builder.renderOptions();\n                \n                // Focus on the new input\n                setTimeout(() => {\n                    const inputs = document.querySelectorAll(`#${builderId} .option-input`);\n                    const newInput = inputs[inputs.length - 1];\n                    if (newInput) {\n                        newInput.focus();\n                        newInput.select();\n                    }\n                }, 100);\n                \n                builder.updateHiddenInput();\n            }\n        };\n        \n        window.handleOptionKeydown = function(event, builderId, index) {\n            if (event.key === 'Enter') {\n                event.preventDefault();\n                addOption(builderId);\n            } else if (event.key === 'Backspace' && event.target.value === '' && window.optionBuilders[builderId].options.length > 1) {\n                event.preventDefault();\n                removeOption(builderId, index);\n                // Focus on previous input if available\n                setTimeout(() => {\n                    const inputs = document.querySelectorAll(`#${builderId} .option-input`);\n                    const prevInput = inputs[Math.max(0, index - 1)];\n                    if (prevInput) {\n                        prevInput.focus();\n                    }\n                }, 100);\n            }\n        };\n        \n        function updateHiddenInput() {\n            const hiddenInput = document.querySelector('[name=\"options_text\"]');\n            if (hiddenInput) {\n                hiddenInput.value = options.filter(opt => opt.trim()).join('\\n');\n            }\n        }\n        \n        function initializeOptionSorting(builderId) {\n            const optionList = document.getElementById(`option-list-${builderId}`);\n            if (optionList && window.Sortable) {\n                new Sortable(optionList, {\n                    handle: '.option-drag-handle',\n                    animation: 150,\n                    ghostClass: 'option-dragging',\n                    onEnd: function(evt) {\n                        const builder = window.optionBuilders[builderId];\n                        if (builder) {\n                            // Reorder the options array\n                            const movedOption = builder.options.splice(evt.oldIndex, 1)[0];\n                            builder.options.splice(evt.newIndex, 0, movedOption);\n                            builder.updateHiddenInput();\n                        }\n                    }\n                });\n            }\n        }\n        \n        renderOptions();\n        updateHiddenInput();\n        \n        window.optionBuilders[containerId] = {\n            options,\n            optionCounter,\n            renderOptions,\n            updateHiddenInput\n        };\n    }\n    \n    // Field type selector functionality\n    function createFieldTypeSelector(containerId, selectedType = '') {\n        const container = document.getElementById(containerId);\n        if (!container) return;\n        \n        const fieldTypes = [\n            { value: 'text', label: 'Short answer', icon: 'fas fa-font', description: 'Single line text input' },\n            { value: 'textarea', label: 'Paragraph', icon: 'fas fa-align-left', description: 'Multi-line text input' },\n            { value: 'radio', label: 'Multiple choice', icon: 'fas fa-circle-dot', description: 'Select one option' },\n            { value: 'checkbox', label: 'Checkboxes', icon: 'fas fa-check-square', description: 'Select multiple options' },\n            { value: 'dropdown', label: 'Dropdown', icon: 'fas fa-caret-down', description: 'Select from dropdown list' },\n            { value: 'number', label: 'Number', icon: 'fas fa-hashtag', description: 'Numeric input' },\n            { value: 'email', label: 'Email', icon: 'fas fa-envelope', description: 'Email address input' },\n            { value: 'date', label: 'Date', icon: 'fas fa-calendar-alt', description: 'Date picker input' }\n        ];\n        \n        container.innerHTML = `\n            <div class=\"field-type-grid\">\n                ${fieldTypes.map(type => `\n                    \n                <div class=\"field-type-option ${selectedType === type.value ? 'selected' : ''}\" \n                         data-type=\"${type.value}\"\n                         onclick=\"selectFieldType('${type.value}')\"\n                         title=\"${type.description}\">\n                    <i class=\"${type.icon}\"></i>\n                    <span>${type.label}</span>\n                </div>\n                `).join('')}\n            </div>\n        `;\n        \n        window.selectFieldType = function(type) {\n            // Update visual selection\n            container.querySelectorAll('.field-type-option').forEach(option => {\n                option.classList.toggle('selected', option.dataset.type === type);\n            });\n            \n            // Update hidden select\n            const hiddenSelect = document.querySelector('[name=\"field_type\"]');\n            if (hiddenSelect) {\n                hiddenSelect.value = type;\n            }\n            \n            // Show/hide options builder based on field type\n            const optionsContainer = document.getElementById('options-builder');\n            const needsOptions = ['radio', 'checkbox', 'dropdown'].includes(type);\n            if (optionsContainer) {\n                optionsContainer.style.display = needsOptions ? 'block' : 'none';\n                \n                // Initialize or update option builder if needed\n                if (needsOptions) {\n                    const builderContainer = document.getElementById('options-container');\n                    if (builderContainer && !window.optionBuilders['options-container']) {\n                        createOptionBuilder('options-container');\n                    }\n                }\n            }\n        };\n        \n        // Auto-select first option if none selected\n        if (!selectedType) {\n            selectFieldType('text');\n        }\n    }\n        </script>\n    </body>\n</html>"
				}
			]
		},
		{
			"name": "Register CSRF Token",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Extract CSRF token from HTML\", function () {",
							"    const responseText = pm.response.text();",
							"    const csrfMatch = responseText.match(/name=['\"]csrfmiddlewaretoken['\"] value=['\"]([^'\"]*)['\"]/);",
							"    if (csrfMatch) {",
							"        pm.environment.set(\"register_csrf_token\", csrfMatch[1]);",
							"        console.log(\"CSRF Token set:\", csrfMatch[1]);",
							"    }",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "text/html",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{local_url}}/accounts/register/",
					"host": [
						"{{local_url}}"
					],
					"path": [
						"accounts",
						"register",
						""
					]
				}
			},
			"response": [
				{
					"name": "Sample Response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/html",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{local_url}}/accounts/register/",
							"host": [
								"{{local_url}}"
							],
							"path": [
								"accounts",
								"register",
								""
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "html",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/html; charset=utf-8"
						},
						{
							"key": "X-Frame-Options",
							"value": "DENY"
						},
						{
							"key": "Vary",
							"value": "Cookie"
						},
						{
							"key": "Content-Length",
							"value": "59950"
						},
						{
							"key": "X-Content-Type-Options",
							"value": "nosniff"
						},
						{
							"key": "Referrer-Policy",
							"value": "same-origin"
						},
						{
							"key": "Cross-Origin-Opener-Policy",
							"value": "same-origin"
						},
						{
							"key": "Set-Cookie",
							"value": "csrftoken=pS71uVLEU6GUXotyBOOShxFpiGnS3SJL; expires=Sat, 13 Jun 2026 08:08:28 GMT; Max-Age=31449600; Path=/; SameSite=Lax"
						},
						{
							"key": "Server",
							"value": "daphne"
						}
					],
					"cookie": [],
					"body": "<!DOCTYPE html>\n<html lang=\"en\">\n    <head>\n        <meta charset=\"UTF-8\">\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n        <title>Create account - CollabForms</title>\n        <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css\" rel=\"stylesheet\">\n        <link href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css\" rel=\"stylesheet\">\n        <link href=\"https://fonts.googleapis.com/css2?family=Google+Sans:wght@300;400;500;600;700&family=Roboto:wght@300;400;500;600;700&display=swap\" rel=\"stylesheet\">\n        <style>\n        :root {\n            /* Google Forms exact color palette */\n            --primary-color: #1a73e8;\n            --primary-hover: #1557b0;\n            --secondary-color: #5f6368;\n            --text-primary: #202124;\n            --text-secondary: #5f6368;\n            --text-muted: #9aa0a6;\n            --border-color: #dadce0;\n            --border-focus: #4285f4;\n            --background-primary: #ffffff;\n            --background-secondary: #f1f3f4;\n            --background-tertiary: #e8eaed;\n            --surface-color: #ffffff;\n            --surface-raised: #ffffff;\n            --shadow-light: 0 1px 2px 0 rgba(60,64,67,.3), 0 1px 3px 1px rgba(60,64,67,.15);\n            --shadow-medium: 0 1px 3px 0 rgba(60,64,67,.3), 0 4px 8px 3px rgba(60,64,67,.15);\n            --shadow-heavy: 0 2px 6px 2px rgba(60,64,67,.15), 0 8px 24px 4px rgba(60,64,67,.15);\n            --success-color: #34a853;\n            --warning-color: #fbbc04;\n            --error-color: #ea4335;\n            --purple-accent: #9c27b0;\n            --forms-purple: #673ab7;\n        }\n        \n        * {\n            font-family: 'Google Sans', 'Roboto', -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif;\n        }\n        \n        body {\n            background-color: var(--background-secondary);\n            color: var(--text-primary);\n            line-height: 1.6;\n            font-size: 14px;\n            margin: 0;\n            padding: 0;\n        }\n        \n        /* Google Forms-style header */\n        .navbar {\n            background: var(--surface-color) !important;\n            border-bottom: 1px solid var(--border-color);\n            box-shadow: var(--shadow-light);\n            min-height: 64px;\n            padding: 0;\n        }\n        \n        .navbar-brand {\n            font-family: 'Google Sans', sans-serif;\n            font-weight: 500;\n            color: var(--text-primary) !important;\n            font-size: 22px;\n            padding: 0;\n            margin: 0;\n        }\n        \n        .navbar-brand i {\n            color: var(--forms-purple);\n            margin-right: 8px;\n        }\n        \n        /* Google Forms-style cards */\n        .form-card {\n            background: var(--surface-color);\n            border: 1px solid var(--border-color);\n            border-radius: 8px;\n            box-shadow: var(--shadow-light);\n            transition: all 0.2s cubic-bezier(0.4,0,0.2,1);\n            overflow: hidden;\n        }\n        \n        .form-card:hover {\n            box-shadow: var(--shadow-medium);\n        }\n        \n        .form-card-header {\n            border-top: 10px solid var(--forms-purple);\n            padding: 24px 24px 0 24px;\n            background: var(--surface-color);\n        }\n        \n        .form-card-body {\n            padding: 24px;\n        }\n        \n        /* Google Forms-style buttons */\n        .btn-google-primary {\n            background-color: var(--primary-color);\n            border: none;\n            color: white;\n            border-radius: 4px;\n            font-weight: 500;\n            font-size: 14px;\n            padding: 8px 24px;\n            height: 40px;\n            transition: all 0.2s cubic-bezier(0.4,0,0.2,1);\n            text-transform: none;\n            box-shadow: none;\n        }\n        \n        .btn-google-primary:hover {\n            background-color: var(--primary-hover);\n            color: white;\n            box-shadow: 0 1px 2px 0 rgba(60,64,67,.3), 0 1px 3px 1px rgba(60,64,67,.15);\n        }\n        \n        .btn-google-secondary {\n            background-color: transparent;\n            border: 1px solid var(--border-color);\n            color: var(--primary-color);\n            border-radius: 4px;\n            font-weight: 500;\n            font-size: 14px;\n            padding: 8px 24px;\n            height: 40px;\n            transition: all 0.2s cubic-bezier(0.4,0,0.2,1);\n            text-transform: none;\n        }\n        \n        .btn-google-secondary:hover {\n            background-color: rgba(26, 115, 232, 0.04);\n            border-color: var(--primary-color);\n            color: var(--primary-color);\n        }\n        \n        .btn-google-text {\n            background: transparent;\n            border: none;\n            color: var(--primary-color);\n            font-weight: 500;\n            font-size: 14px;\n            padding: 8px 16px;\n            border-radius: 4px;\n            transition: all 0.2s cubic-bezier(0.4,0,0.2,1);\n        }\n        \n        .btn-google-text:hover {\n            background-color: rgba(26, 115, 232, 0.04);\n            color: var(--primary-color);\n        }\n        \n        /* Google Forms-style form inputs */\n        .form-input-google {\n            border: none;\n            border-bottom: 1px solid var(--border-color);\n            border-radius: 4px 4px 0 0;\n            background-color: #f8f9fa;\n            padding: 16px 16px 6px 16px;\n            font-size: 16px;\n            line-height: 1.5;\n            transition: all 0.2s cubic-bezier(0.4,0,0.2,1);\n            width: 100%;\n        }\n        \n        .form-input-google:focus {\n            outline: none;\n            border-bottom: 2px solid var(--primary-color);\n            background-color: #fafbfc;\n            box-shadow: 0 2px 4px rgba(26, 115, 232, 0.1);\n        }\n        \n        .form-floating-google {\n            position: relative;\n        }\n        \n        .form-floating-google > .form-input-google {\n            padding-top: 20px;\n            padding-bottom: 4px;\n        }\n        \n        .form-floating-google > label {\n            position: absolute;\n            top: 0;\n            left: 16px;\n            padding-top: 16px;\n            color: var(--text-secondary);\n            font-size: 16px;\n            font-weight: 400;\n            transition: all 0.2s cubic-bezier(0.4,0,0.2,1);\n            pointer-events: none;\n            transform-origin: 0 0;\n        }\n        \n        .form-floating-google > .form-input-google:focus ~ label,\n        .form-floating-google > .form-input-google:not(:placeholder-shown) ~ label {\n            transform: translateY(-50%) scale(0.75);\n            color: var(--primary-color);\n            padding-top: 4px;\n        }\n        \n        /* User avatar */\n        .user-avatar {\n            width: 32px;\n            height: 32px;\n            border-radius: 50%;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            color: white;\n            font-weight: 500;\n            font-size: 14px;\n            background: linear-gradient(135deg, var(--primary-color), var(--forms-purple));\n        }\n        \n        /* Connection status */\n        .connection-status {\n            position: fixed;\n            bottom: 24px;\n            right: 24px;\n            z-index: 1050;\n            border-radius: 4px;\n            padding: 8px 16px;\n            font-size: 14px;\n            font-weight: 500;\n            box-shadow: var(--shadow-medium);\n        }\n        \n        .connection-connected {\n            background-color: var(--success-color);\n            color: white;\n        }\n        \n        .connection-connecting {\n            background-color: var(--warning-color);\n            color: var(--text-primary);\n        }\n        \n        .connection-disconnected {\n            background-color: var(--error-color);\n            color: white;\n        }\n        \n        /* Page layouts */\n        .page-container {\n            max-width: 768px;\n            margin: 0 auto;\n            padding: 0 16px;\n        }\n        \n        .page-container-wide {\n            max-width: 1200px;\n            margin: 0 auto;\n            padding: 0 16px;\n        }\n        \n        .auth-container {\n            min-height: 100vh;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n            padding: 24px;\n        }\n        \n        .auth-card {\n            background: var(--surface-color);\n            border-radius: 12px;\n            box-shadow: var(--shadow-heavy);\n            width: 100%;\n            max-width: 420px;\n            overflow: hidden;\n        }\n        \n        .auth-header {\n            text-align: center;\n            padding: 48px 48px 24px 48px;\n        }\n        \n        .auth-body {\n            padding: 0 48px 48px 48px;\n        }\n        \n        .auth-logo {\n            color: var(--forms-purple);\n            font-size: 48px;\n            margin-bottom: 24px;\n        }\n        \n        .auth-title {\n            font-size: 24px;\n            font-weight: 400;\n            color: var(--text-primary);\n            margin-bottom: 8px;\n        }\n        \n        .auth-subtitle {\n            font-size: 16px;\n            color: var(--text-secondary);\n            margin-bottom: 0;\n        }\n        \n        /* Dropdown menus */\n        .dropdown-menu {\n            border: 1px solid var(--border-color);\n            border-radius: 8px;\n            box-shadow: var(--shadow-medium);\n            padding: 8px 0;\n            min-width: 200px;\n        }\n        \n        .dropdown-item {\n            padding: 12px 16px;\n            font-size: 14px;\n            color: var(--text-primary);\n            border: none;\n            background: none;\n            transition: background-color 0.2s cubic-bezier(0.4,0,0.2,1);\n        }\n        \n        .dropdown-item:hover {\n            background-color: var(--background-tertiary);\n            color: var(--text-primary);\n        }\n        \n        .dropdown-divider {\n            margin: 8px 0;\n            border-top: 1px solid var(--border-color);\n        }\n        \n        /* Alert messages */\n        .alert {\n            border-radius: 4px;\n            border: none;\n            font-size: 14px;\n            padding: 16px;\n            margin-bottom: 16px;\n        }\n        \n        .alert-success {\n            background-color: #e8f5e8;\n            color: #1e7e34;\n        }\n        \n        .alert-warning {\n            background-color: #fff3cd;\n            color: #856404;\n        }\n        \n        .alert-danger {\n            background-color: #f8d7da;\n            color: #721c24;\n        }\n        \n        .alert-info {\n            background-color: #d1ecf1;\n            color: #0c5460;\n        }\n        \n        /* Loading animations */\n        .loading-spinner {\n            display: inline-block;\n            width: 16px;\n            height: 16px;\n            border: 2px solid var(--border-color);\n            border-radius: 50%;\n            border-top-color: var(--primary-color);\n            animation: spin 1s linear infinite;\n        }\n        \n        @keyframes spin {\n            to { transform: rotate(360deg); }\n        }\n        \n        .fade-in {\n            animation: fadeIn 0.3s cubic-bezier(0.4,0,0.2,1);\n        }\n        \n        @keyframes fadeIn {\n            from { opacity: 0; transform: translateY(8px); }\n            to { opacity: 1; transform: translateY(0); }\n        }\n        \n        /* Option builder styles */\n        .option-builder {\n            width: 100%;\n        }\n        \n        .option-item {\n            display: flex;\n            align-items: center;\n            gap: 8px;\n            margin-bottom: 8px;\n            padding: 8px;\n            border: 1px solid var(--border-color);\n            border-radius: 4px;\n            background-color: var(--surface-color);\n            transition: all 0.2s cubic-bezier(0.4,0,0.2,1);\n        }\n        \n        .option-item:hover {\n            border-color: var(--primary-color);\n        }\n        \n        .option-item .field-handle {\n            color: var(--text-muted);\n            cursor: grab;\n            padding: 4px;\n        }\n        \n        .option-item .field-handle:active {\n            cursor: grabbing;\n        }\n        \n        .option-input {\n            flex: 1;\n            border: none;\n            outline: none;\n            background: transparent;\n            font-size: 14px;\n            color: var(--text-primary);\n            padding: 4px 0;\n        }\n        \n        .option-input::placeholder {\n            color: var(--text-muted);\n        }\n        \n        .option-remove {\n            background: transparent;\n            border: none;\n            color: var(--text-muted);\n            padding: 4px;\n            border-radius: 3px;\n            transition: all 0.2s cubic-bezier(0.4,0,0.2,1);\n            cursor: pointer;\n        }\n        \n        .option-remove:hover {\n            background-color: var(--error-color);\n            color: white;\n        }\n        \n        .option-add {\n            display: flex;\n            align-items: center;\n            gap: 8px;\n            width: 100%;\n            background: transparent;\n            border: 1px dashed var(--border-color);\n            border-radius: 4px;\n            padding: 12px;\n            color: var(--primary-color);\n            font-size: 14px;\n            font-weight: 500;\n            transition: all 0.2s cubic-bezier(0.4,0,0.2,1);\n            cursor: pointer;\n            margin-top: 4px;\n        }\n        \n        .option-add:hover {\n            background-color: rgba(26, 115, 232, 0.04);\n            border-color: var(--primary-color);\n        }\n        \n        .option-add i {\n            font-size: 12px;\n        }\n        \n        /* Field type selector styles */\n        .field-type-grid {\n            display: grid;\n            grid-template-columns: repeat(auto-fit, minmax(140px, 1fr));\n            gap: 8px;\n            margin-bottom: 16px;\n        }\n        \n        .field-type-option {\n            display: flex;\n            flex-direction: column;\n            align-items: center;\n            gap: 6px;\n            padding: 16px 8px;\n            border: 1px solid var(--border-color);\n            border-radius: 6px;\n            background-color: var(--surface-color);\n            cursor: pointer;\n            transition: all 0.2s cubic-bezier(0.4,0,0.2,1);\n            text-align: center;\n            position: relative;\n            overflow: hidden;\n        }\n        \n        .field-type-option:hover {\n            border-color: var(--primary-color);\n            background-color: rgba(26, 115, 232, 0.04);\n        }\n        \n        .field-type-option.selected {\n            border-color: var(--primary-color);\n            background-color: rgba(26, 115, 232, 0.08);\n            color: var(--primary-color);\n        }\n        \n        .field-type-option i {\n            font-size: 18px;\n            color: var(--text-secondary);\n            transition: color 0.2s cubic-bezier(0.4,0,0.2,1);\n        }\n        \n        .field-type-option.selected i {\n            color: var(--primary-color);\n        }\n        \n        .field-type-option span {\n            font-size: 12px;\n            font-weight: 500;\n            color: var(--text-primary);\n        }\n        \n        /* Enhanced responsive design */\n        /* Enhanced responsive design for different screen sizes */\n        \n        /* Mobile First - Base styles for small devices */\n        @media (max-width: 575.98px) {\n            .page-container {\n                padding: 0 8px;\n                max-width: 100%;\n            }\n            \n            .page-container-wide {\n                padding: 0 8px;\n                max-width: 100%;\n            }\n            \n            .auth-container {\n                padding: 16px;\n                min-height: 100vh;\n            }\n            \n            .auth-header {\n                padding: 32px 20px 20px 20px;\n            }\n            \n            .auth-body {\n                padding: 0 20px 32px 20px;\n            }\n            \n            .form-group-google {\n                margin-bottom: 20px;\n            }\n            \n            .navbar-brand {\n                font-size: 18px;\n            }\n            \n            .form-card-body {\n                padding: 16px;\n            }\n            \n            .form-card-header {\n                padding: 16px 16px 0 16px;\n            }\n            \n            .field-type-grid {\n                grid-template-columns: repeat(2, 1fr);\n                gap: 6px;\n            }\n            \n            .field-type-option {\n                padding: 12px 6px;\n                min-height: 70px;\n            }\n            \n            .field-type-option i {\n                font-size: 16px;\n                margin-bottom: 4px;\n            }\n            \n            .field-type-option span {\n                font-size: 10px;\n                line-height: 1.2;\n            }\n            \n            .page-header .d-flex {\n                flex-direction: column;\n                align-items: stretch !important;\n                gap: 12px;\n            }\n            \n            .btn-group {\n                width: 100%;\n                flex-direction: column;\n            }\n            \n            .btn-group .btn {\n                flex: 1;\n                margin-left: 0;\n                margin-bottom: 4px;\n            }\n            \n            .option-item {\n                flex-wrap: wrap;\n                gap: 6px;\n            }\n            \n            .option-input-wrapper {\n                flex: 1;\n                min-width: 200px;\n                margin: 0;\n            }\n        }\n        \n        /* Small devices - tablets portrait */\n        @media (min-width: 576px) and (max-width: 767.98px) {\n            .page-container {\n                padding: 0 12px;\n                max-width: 540px;\n            }\n            \n            .page-container-wide {\n                padding: 0 12px;\n                max-width: 720px;\n            }\n            \n            .auth-container {\n                padding: 20px;\n            }\n            \n            .auth-header {\n                padding: 40px 28px 20px 28px;\n            }\n            \n            .auth-body {\n                padding: 0 28px 40px 28px;\n            }\n            \n            .form-group-google {\n                margin-bottom: 22px;\n            }\n            \n            .field-type-grid {\n                grid-template-columns: repeat(3, 1fr);\n                gap: 8px;\n            }\n            \n            .field-type-option {\n                padding: 14px 8px;\n                min-height: 80px;\n            }\n            \n            .field-type-option i {\n                font-size: 18px;\n                margin-bottom: 6px;\n            }\n            \n            .field-type-option span {\n                font-size: 11px;\n            }\n        }\n        \n        /* Medium devices - tablets landscape */\n        @media (min-width: 768px) and (max-width: 991.98px) {\n            .page-container {\n                padding: 0 16px;\n                max-width: 720px;\n            }\n            \n            .page-container-wide {\n                padding: 0 16px;\n                max-width: 960px;\n            }\n            \n            .form-card-body {\n                padding: 20px;\n            }\n            \n            .form-card-header {\n                padding: 20px 20px 0 20px;\n            }\n            \n            .field-type-grid {\n                grid-template-columns: repeat(4, 1fr);\n                gap: 8px;\n            }\n            \n            .field-type-option {\n                padding: 16px 10px;\n                min-height: 85px;\n            }\n            \n            .field-type-option i {\n                font-size: 20px;\n                margin-bottom: 8px;\n            }\n            \n            .field-type-option span {\n                font-size: 12px;\n            }\n        }\n        \n        /* Large devices - small laptops */\n        @media (min-width: 992px) and (max-width: 1199.98px) {\n            .page-container {\n                padding: 0 20px;\n                max-width: 960px;\n            }\n            \n            .page-container-wide {\n                padding: 0 20px;\n                max-width: 1140px;\n            }\n            \n            .field-type-grid {\n                grid-template-columns: repeat(4, 1fr);\n                gap: 10px;\n            }\n            \n            .field-type-option {\n                padding: 18px 12px;\n                min-height: 90px;\n            }\n            \n            .field-type-option i {\n                font-size: 22px;\n                margin-bottom: 8px;\n            }\n            \n            .field-type-option span {\n                font-size: 13px;\n            }\n        }\n        \n        /* Extra large devices - large laptops and desktops */\n        @media (min-width: 1200px) and (max-width: 1399.98px) {\n            .page-container {\n                padding: 0 24px;\n                max-width: 1140px;\n            }\n            \n            .page-container-wide {\n                padding: 0 24px;\n                max-width: 1320px;\n            }\n            \n            .field-type-grid {\n                grid-template-columns: repeat(4, 1fr);\n                gap: 12px;\n            }\n            \n            .field-type-option {\n                padding: 20px 14px;\n                min-height: 95px;\n            }\n            \n            .field-type-option i {\n                font-size: 24px;\n                margin-bottom: 10px;\n            }\n            \n            .field-type-option span {\n                font-size: 14px;\n            }\n        }\n        \n        /* Extra extra large devices - large monitors */\n        @media (min-width: 1400px) {\n            .page-container {\n                padding: 0 30px;\n                max-width: 1200px;\n            }\n            \n            .page-container-wide {\n                padding: 0 30px;\n                max-width: 1600px;\n            }\n            \n            .field-type-grid {\n                grid-template-columns: repeat(4, 1fr);\n                gap: 15px;\n            }\n            \n            .field-type-option {\n                padding: 22px 16px;\n                min-height: 100px;\n            }\n            \n            .field-type-option i {\n                font-size: 26px;\n                margin-bottom: 12px;\n            }\n            \n            .field-type-option span {\n                font-size: 15px;\n            }\n        }\n        \n        /* Laptop-specific fixes for alignment issues */\n        @media (min-width: 1024px) and (max-width: 1440px) and (orientation: landscape) {\n            /* Common laptop resolution fixes */\n            .row.g-4 {\n                --bs-gutter-x: 2rem;\n                --bs-gutter-y: 2rem;\n            }\n            \n            .col-xl-8, .col-lg-7 {\n                flex: 0 0 auto;\n                width: 66.66666667%;\n            }\n            \n            .col-xl-4, .col-lg-5 {\n                flex: 0 0 auto;\n                width: 33.33333333%;\n            }\n            \n            .sticky-form-panel {\n                position: sticky;\n                top: 24px;\n                height: fit-content;\n                max-height: calc(100vh - 48px);\n                overflow-y: auto;\n            }\n            \n            /* Better spacing for form elements */\n            .form-group-google {\n                margin-bottom: 1.5rem;\n            }\n            \n            .option-builder {\n                max-height: 300px;\n                overflow-y: auto;\n                border: 1px solid var(--border-color);\n                border-radius: 6px;\n                padding: 12px;\n            }\n            \n            /* Improved field item layout */\n            .field-item {\n                margin-bottom: 1rem;\n                padding: 1.25rem;\n            }\n            \n            .field-item .d-flex {\n                align-items: flex-start;\n                gap: 1rem;\n            }\n            \n            /* Better button alignment */\n            .d-flex.gap-2 {\n                gap: 0.75rem !important;\n            }\n            \n            .d-flex.gap-3 {\n                gap: 1rem !important;\n            }\n        }\n        \n        /* Ultra-wide screen optimizations */\n        @media (min-width: 1920px) {\n            .page-container-wide {\n                max-width: 1800px;\n            }\n            \n            .row.g-4 {\n                --bs-gutter-x: 3rem;\n            }\n            \n            .form-card {\n                box-shadow: var(--shadow-medium);\n            }\n        }\n        \n        /* Height-based responsive adjustments */\n        @media (max-height: 700px) and (min-width: 992px) {\n            .sticky-form-panel {\n                position: static;\n            }\n            \n            .form-card-body {\n                padding: 16px;\n            }\n            \n            .form-group-google {\n                margin-bottom: 1rem;\n            }\n        }\n        \n        /* High DPI screen adjustments */\n        @media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi) {\n            .form-card {\n                border-width: 0.5px;\n            }\n            \n            .option-item {\n                border-width: 0.5px;\n            }\n            \n            .field-type-option {\n                border-width: 0.5px;\n            }\n        }\n        \n        /* Additional utility classes for better alignment */\n        .status-indicator {\n            width: 8px;\n            height: 8px;\n            border-radius: 50%;\n            margin-right: 6px;\n            flex-shrink: 0;\n        }\n        \n        .status-online {\n            background-color: var(--success-color);\n        }\n        \n        .status-editing {\n            background-color: var(--warning-color);\n            animation: pulse 2s infinite;\n        }\n        \n        @keyframes pulse {\n            0% { opacity: 1; }\n            50% { opacity: 0.5; }\n            100% { opacity: 1; }\n        }\n        \n        /* Field handle for drag and drop */\n        .field-handle {\n            color: var(--text-muted);\n            cursor: grab;\n            padding: 4px;\n            transition: color 0.2s cubic-bezier(0.4,0,0.2,1);\n        }\n        \n        .field-handle:hover {\n            color: var(--text-secondary);\n        }\n        \n        .field-handle:active {\n            cursor: grabbing;\n        }\n        \n        /* Field item styles */\n        .field-item {\n            transition: all 0.2s cubic-bezier(0.4,0,0.2,1);\n        }\n        \n        .field-item:hover {\n            box-shadow: var(--shadow-light);\n        }\n        \n        .field-item.dragging {\n            opacity: 0.7;\n            transform: rotate(5deg);\n        }\n        \n        /* Better form input focus states */\n        .form-input-google:focus {\n            outline: none;\n            border-bottom: 2px solid var(--primary-color);\n            background-color: #fafbfc;\n            box-shadow: 0 2px 4px rgba(26, 115, 232, 0.1);\n        }\n        \n        /* Improved checkbox and radio styles */\n        .form-check-input:checked {\n            background-color: var(--primary-color);\n            border-color: var(--primary-color);\n        }\n        \n        .form-check-input:focus {\n            border-color: var(--primary-color);\n            outline: none;\n            box-shadow: 0 0 0 0.25rem rgba(26, 115, 232, 0.25);\n        }\n        \n        /* Page header improvements */\n        .page-header {\n            background-color: var(--surface-color);\n            border-bottom: 1px solid var(--border-color);\n            margin-bottom: 0;\n        }\n        \n        /* Better button spacing in groups */\n        .btn-group .btn,\n        .d-flex .btn + .btn {\n            margin-left: 8px;\n        }\n        \n        /* Better form field error states */\n        .form-input-google.is-invalid {\n            border-bottom-color: var(--error-color);\n        }\n        \n        .form-input-google.is-invalid:focus {\n            border-bottom-color: var(--error-color);\n            box-shadow: 0 2px 4px rgba(234, 67, 53, 0.1);\n        }\n        \n        /* Consistent border radius */\n        .rounded {\n            border-radius: 6px !important;\n        }\n        \n        .rounded-pill {\n            border-radius: 16px !important;\n        }\n        \n        /* Enhanced option builder styles */\n        .option-list {\n            margin-bottom: 12px;\n        }\n        \n        .option-drag-handle {\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            width: 24px;\n            height: 24px;\n            color: var(--text-muted);\n            cursor: grab;\n            border-radius: 3px;\n            transition: all 0.2s cubic-bezier(0.4,0,0.2,1);\n        }\n        \n        .option-drag-handle:hover {\n            background-color: var(--background-tertiary);\n            color: var(--text-secondary);\n        }\n        \n        .option-drag-handle:active {\n            cursor: grabbing;\n        }\n        \n        .option-input-wrapper {\n            flex: 1;\n            margin: 0 8px;\n        }\n        \n        .option-remove-placeholder {\n            width: 24px;\n            height: 24px;\n        }\n        \n        .option-dragging {\n            opacity: 0.5;\n            transform: rotate(2deg);\n        }\n        \n        .option-item:last-child .option-input {\n            border-bottom-color: transparent;\n        }\n        \n        .option-item .option-input:focus {\n            border-bottom-color: var(--primary-color);\n        }\n        \n        /* Field type option hover effects */\n        .field-type-option {\n            position: relative;\n            overflow: hidden;\n        }\n        \n        .field-type-option::before {\n            content: '';\n            position: absolute;\n            top: 0;\n            left: -100%;\n            width: 100%;\n            height: 100%;\n            background: linear-gradient(90deg, transparent, rgba(26, 115, 232, 0.1), transparent);\n            transition: left 0.5s ease;\n        }\n        \n        .field-type-option:hover::before {\n            left: 100%;\n        }\n        \n        /* Form validation styles */\n        .is-invalid .option-input {\n            border-bottom-color: var(--error-color);\n        }\n        \n        .invalid-feedback {\n            color: var(--error-color);\n            font-size: 12px;\n            margin-top: 4px;\n        }\n        \n        /* Loading state for option builder */\n        .option-builder.loading {\n            opacity: 0.6;\n            pointer-events: none;\n        }\n        \n        .option-builder.loading::after {\n            content: '';\n            position: absolute;\n            top: 50%;\n            left: 50%;\n            transform: translate(-50%, -50%);\n            width: 20px;\n            height: 20px;\n            border: 2px solid var(--border-color);\n            border-top-color: var(--primary-color);\n            border-radius: 50%;\n            animation: spin 1s linear infinite;\n        }\n        \n        /* Dashboard specific responsive improvements */\n        .dashboard-stats {\n            margin-bottom: 2rem;\n        }\n        \n        .dashboard-stats .form-card {\n            transition: all 0.3s cubic-bezier(0.4,0,0.2,1);\n        }\n        \n        .dashboard-stats .form-card:hover {\n            transform: translateY(-2px);\n            box-shadow: var(--shadow-medium);\n        }\n        \n        /* Forms grid responsive layout */\n        @media (min-width: 1200px) {\n            .forms-grid .col-xl-4 {\n                flex: 0 0 auto;\n                width: 33.333333%;\n            }\n        }\n        \n        @media (min-width: 992px) and (max-width: 1199.98px) {\n            .forms-grid .col-lg-6 {\n                flex: 0 0 auto;\n                width: 50%;\n            }\n        }\n        \n        @media (max-width: 991.98px) {\n            .forms-grid .col-md-12 {\n                flex: 0 0 auto;\n                width: 100%;\n            }\n        }\n        \n        /* Better button groups on mobile */\n        @media (max-width: 767.98px) {\n            .btn-group-mobile {\n                display: flex;\n                flex-direction: column;\n                gap: 8px;\n                width: 100%;\n            }\n            \n            .btn-group-mobile .btn {\n                width: 100%;\n                margin-left: 0;\n            }\n            \n            .page-header .d-flex {\n                flex-direction: column;\n                align-items: stretch !important;\n                gap: 16px;\n            }\n            \n            .page-header .flex-grow-1 {\n                text-align: center;\n            }\n        }\n        \n        /* Form card improvements for different screen sizes */\n        .form-item-card {\n            transition: all 0.2s cubic-bezier(0.4,0,0.2,1);\n            height: 100%;\n            display: flex;\n            flex-direction: column;\n        }\n        \n        .form-item-card:hover {\n            transform: translateY(-1px);\n            box-shadow: var(--shadow-light);\n        }\n        \n        .form-item-card .form-item-content {\n            flex: 1;\n            display: flex;\n            flex-direction: column;\n        }\n        \n        .form-item-card .form-item-footer {\n            margin-top: auto;\n            padding-top: 12px;\n        }\n        \n        /* Enhanced responsiveness for collaboration UI */\n        .collaboration-panel {\n            position: sticky;\n            top: 24px;\n            max-height: calc(100vh - 48px);\n            overflow-y: auto;\n        }\n        \n        @media (max-width: 991.98px) {\n            .collaboration-panel {\n                position: static;\n                max-height: none;\n            }\n        }\n        \n        /* Better form field spacing on different screen sizes */\n        @media (min-width: 768px) and (max-width: 1023.98px) {\n            .form-group-google {\n                margin-bottom: 1.25rem;\n            }\n            \n            .field-type-grid {\n                gap: 8px;\n            }\n            \n            .option-builder {\n                padding: 14px;\n            }\n        }\n        \n        /* Ultra-wide screen optimizations */\n        @media (min-width: 1600px) {\n            .page-container-wide {\n                max-width: 1500px;\n            }\n            \n            .forms-grid {\n                --bs-gutter-x: 2rem;\n            }\n            \n            .dashboard-stats {\n                --bs-gutter-x: 1.5rem;\n            }\n        }\n        \n        /* Print styles */\n        @media print {\n            .page-header,\n            .btn,\n            .dropdown,\n            .connection-status,\n            .navbar {\n                display: none !important;\n            }\n            \n            .form-card {\n                border: 1px solid #ddd !important;\n                box-shadow: none !important;\n                page-break-inside: avoid;\n            }\n            \n            .page-container,\n            .page-container-wide {\n                max-width: none !important;\n                padding: 0 !important;\n            }\n        }\n        \n        /* Google Forms-style form groups */\n        .form-group-google {\n            margin-bottom: 24px;\n            position: relative;\n        }\n        \n        .form-error {\n            color: var(--error-color);\n            font-size: 12px;\n            margin-top: 6px;\n            font-weight: 400;\n        }\n        \n        .form-help {\n            color: var(--text-muted);\n            font-size: 12px;\n            margin-top: 6px;\n            line-height: 1.4;\n        }\n    </style>\n    </head>\n    <body>\n        <nav class=\"navbar navbar-expand-lg\">\n            <div class=\"container-fluid px-4\">\n                <a class=\"navbar-brand d-flex align-items-center\" href=\"/forms/\">\n                    <i class=\"fas fa-poll-h me-2\"></i>\n                CollabForms\n                </a>\n                <div class=\"navbar-nav ms-auto\">\n                    <a class=\"btn btn-google-text me-2\" href=\"/accounts/login/\">\n                        <i class=\"fas fa-sign-in-alt me-1\"></i>Sign in\n                    </a>\n                    <a class=\"btn btn-google-primary\" href=\"/accounts/register/\">\n                        <i class=\"fas fa-user-plus me-1\"></i>Sign up\n                    </a>\n                </div>\n            </div>\n        </nav>\n        <main>\n            <div class=\"auth-container\">\n                <div class=\"auth-card\">\n                    <div class=\"auth-header\">\n                        <div class=\"auth-logo\">\n                            <i class=\"fas fa-poll-h\"></i>\n                        </div>\n                        <h1 class=\"auth-title\">Create account</h1>\n                        <p class=\"auth-subtitle\">to get started with CollabForms</p>\n                    </div>\n                    <div class=\"auth-body\">\n                        <form method=\"post\" novalidate>\n                            <input type=\"hidden\" name=\"csrfmiddlewaretoken\" value=\"iHYz4KsDvOlAgOWYSt0QDpgOdDTMRMXHxpVqov37fKRk32fmj7EyKML3l96uKuwi\">\n                            <div class=\"form-group-google\">\n                                <div class=\"form-floating-google\">\n                                    <input type=\"text\" \n                               class=\"form-input-google\" \n                               id=\"id_username\" \n                               name=\"username\" \n                               placeholder=\" \"\n                               value=\"\"\n                               required>\n                                    <label for=\"id_username\">Username</label>\n                                </div>\n                            </div>\n                            <div class=\"form-group-google\">\n                                <div class=\"form-floating-google\">\n                                    <input type=\"email\" \n                               class=\"form-input-google\" \n                               id=\"id_email\" \n                               name=\"email\" \n                               placeholder=\" \"\n                               value=\"\"\n                               required>\n                                    <label for=\"id_email\">Email</label>\n                                </div>\n                            </div>\n                            <div class=\"form-group-google\">\n                                <div class=\"form-floating-google\">\n                                    <input type=\"password\" \n                               class=\"form-input-google\" \n                               id=\"id_password1\" \n                               name=\"password1\" \n                               placeholder=\" \"\n                               required>\n                                    <label for=\"id_password1\">Password</label>\n                                </div>\n                            </div>\n                            <div class=\"form-group-google\">\n                                <div class=\"form-floating-google\">\n                                    <input type=\"password\" \n                               class=\"form-input-google\" \n                               id=\"id_password2\" \n                               name=\"password2\" \n                               placeholder=\" \"\n                               required>\n                                    <label for=\"id_password2\">Confirm password</label>\n                                </div>\n                            </div>\n                            <div class=\"form-group-google\">\n                                <div class=\"form-floating-google\">\n                                    <select class=\"form-input-google\" \n                                id=\"id_role\" \n                                name=\"role\" \n                                required>\n                                        <option value=\"\" disabled selected></option>\n                                        <option value=\"admin\" >Admin</option>\n                                        <option value=\"user\" selected>User</option>\n                                    </select>\n                                    <label for=\"id_role\">Role</label>\n                                </div>\n                            </div>\n                            <div class=\"d-flex justify-content-between align-items-center mb-4 mt-2\">\n                                <a href=\"/accounts/login/\" class=\"btn-google-text p-0\">\n                        Sign in instead\n                    </a>\n                                <button type=\"submit\" class=\"btn btn-google-primary\">\n                        Create account\n                    </button>\n                            </div>\n                        </form>\n                        <div class=\"text-center mt-4\">\n                            <p class=\"text-muted small mb-0\">\n                    Already have an account? \n                    \n                                <a href=\"/accounts/login/\" class=\"text-decoration-none\">\n                        Sign in\n                    </a>\n                            </p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </main>\n        <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js\"></script>\n        <script>\n    // Google Forms-style form field rendering\n    function renderFormField(field, value = '', userEditing = null) {\n        const isLocked = userEditing && userEditing.id !== window.currentUserId;\n        const lockClass = isLocked ? 'field-locked' : '';\n        const lockIcon = isLocked ? `\n            <i class=\"fas fa-lock text-warning ms-2\" title=\"Being edited by ${userEditing.username}\"></i>` : '';\n        \n        let fieldHtml = `\n            <div class=\"form-card mb-3 fade-in\" data-field-id=\"${field.id}\">\n                <div class=\"form-card-body\">\n                    <div class=\"d-flex justify-content-between align-items-start mb-3\">\n                        <div>\n                            <label class=\"form-label fw-normal\">${field.label}</label>\n                            ${field.is_required ? '\n                            <span class=\"text-danger ms-1\">*</span>' : ''}\n                            ${lockIcon}\n                        </div>\n                    </div>\n        `;\n        \n        switch(field.field_type) {\n            case 'text':\n            case 'email':\n            case 'url':\n                fieldHtml += `\n                    <div class=\"form-floating-google\">\n                        <input type=\"${field.field_type}\" \n                               class=\"form-input-google ${lockClass}\" \n                               id=\"field_${field.id}\" \n                               name=\"field_${field.id}\" \n                               placeholder=\" \"\n                               value=\"${value}\"\n                               ${field.is_required ? 'required' : ''}\n                               ${isLocked ? 'disabled' : ''}>\n                        <label for=\"field_${field.id}\">Your answer</label>\n                    </div>\n                `;\n                break;\n                \n            case 'date':\n                fieldHtml += `\n                    <div class=\"form-floating-google\">\n                        <input type=\"date\" \n                               class=\"form-input-google ${lockClass}\" \n                               id=\"field_${field.id}\" \n                               name=\"field_${field.id}\" \n                               value=\"${value}\"\n                               ${field.is_required ? 'required' : ''}\n                               ${isLocked ? 'disabled' : ''}>\n                        <label for=\"field_${field.id}\">Select date</label>\n                    </div>\n                `;\n                break;\n                \n            case 'textarea':\n                fieldHtml += `\n                    <div class=\"form-floating-google\">\n                        <textarea class=\"form-input-google ${lockClass}\" \n                                  id=\"field_${field.id}\" \n                                  name=\"field_${field.id}\" \n                                  placeholder=\" \"\n                                  rows=\"3\"\n                                  style=\"min-height: 100px; resize: vertical;\"\n                                  ${field.is_required ? 'required' : ''}\n                                  ${isLocked ? 'disabled' : ''}>${value}</textarea>\n                        <label for=\"field_${field.id}\">Your answer</label>\n                    </div>\n                `;\n                break;\n                \n            case 'number':\n                fieldHtml += `\n                    <div class=\"form-floating-google\">\n                        <input type=\"number\" \n                               class=\"form-input-google ${lockClass}\" \n                               id=\"field_${field.id}\" \n                               name=\"field_${field.id}\" \n                               placeholder=\" \"\n                               value=\"${value}\"\n                               ${field.is_required ? 'required' : ''}\n                               ${isLocked ? 'disabled' : ''}>\n                        <label for=\"field_${field.id}\">Your answer</label>\n                    </div>\n                `;\n                break;\n                \n            case 'select':\n            case 'dropdown':\n                fieldHtml += `\n                    <select class=\"form-input-google ${lockClass}\" \n                            id=\"field_${field.id}\" \n                            name=\"field_${field.id}\"\n                            ${field.is_required ? 'required' : ''}\n                            ${isLocked ? 'disabled' : ''}>\n                        <option value=\"\" disabled ${!value ? 'selected' : ''}>Choose</option>\n                        ${field.options.map(option => \n                            `\n                        <option value=\"${option}\" ${value === option ? 'selected' : ''}>${option}</option>`\n                        ).join('')}\n                    </select>\n                `;\n                break;\n                \n            case 'radio':\n                fieldHtml += `\n                    <div class=\"d-grid gap-2\">\n                        ${field.options.map((option, index) => `\n                            \n                        <div class=\"form-check\">\n                            <input class=\"form-check-input\" \n                                       type=\"radio\" \n                                       name=\"field_${field.id}\" \n                                       id=\"field_${field.id}_${index}\" \n                                       value=\"${option}\"\n                                       ${value === option ? 'checked' : ''}\n                                       ${isLocked ? 'disabled' : ''}>\n                            <label class=\"form-check-label\" for=\"field_${field.id}_${index}\">\n                                    ${option}\n                                </label>\n                        </div>\n                        `).join('')}\n                    </div>\n                `;\n                break;\n                \n            case 'checkbox':\n                const selectedValues = Array.isArray(value) ? value : (value ? [value] : []);\n                fieldHtml += `\n                    <div class=\"d-grid gap-2\">\n                        ${field.options.map((option, index) => `\n                            \n                        <div class=\"form-check\">\n                            <input class=\"form-check-input\" \n                                       type=\"checkbox\" \n                                       name=\"field_${field.id}\" \n                                       id=\"field_${field.id}_${index}\" \n                                       value=\"${option}\"\n                                       ${selectedValues.includes(option) ? 'checked' : ''}\n                                       ${isLocked ? 'disabled' : ''}>\n                            <label class=\"form-check-label\" for=\"field_${field.id}_${index}\">\n                                    ${option}\n                                </label>\n                        </div>\n                        `).join('')}\n                    </div>\n                `;\n                break;\n        }\n        \n        fieldHtml += `\n                </div>\n            </div>\n        `;\n        \n        return fieldHtml;\n    }\n    \n    // Show user avatars in a Google-style way\n    function renderUserAvatar(user, isEditing = false) {\n        const statusClass = isEditing ? 'status-editing' : 'status-online';\n        return `\n            <div class=\"d-flex align-items-center mb-2\" data-user-id=\"${user.id}\">\n                <div class=\"user-avatar me-2\">${user.username.charAt(0).toUpperCase()}</div>\n                <div class=\"flex-grow-1\">\n                    <div class=\"d-flex align-items-center\">\n                        <span class=\"status-indicator ${statusClass}\"></span>\n                        <span class=\"small fw-medium\">${user.username}</span>\n                    </div>\n                    <div class=\"text-muted\" style=\"font-size: 11px;\">\n                        ${isEditing ? 'Currently editing' : 'Active'}\n                    </div>\n                </div>\n            </div>\n        `;\n    }\n    \n    // Mobile user avatar rendering\n    function renderMobileUserAvatar(user, isEditing = false) {\n        const statusClass = isEditing ? 'status-editing' : 'status-online';\n        return `\n            <div class=\"user-avatar\" \n                 data-user-id=\"${user.id}\" \n                 title=\"${user.username} - ${isEditing ? 'Currently editing' : 'Active'}\"\n                 style=\"position: relative;\">\n                ${user.username.charAt(0).toUpperCase()}\n                \n                <span class=\"status-indicator ${statusClass}\" \n                      style=\"position: absolute; bottom: -2px; right: -2px; border: 1px solid white;\"></span>\n            </div>\n        `;\n    }\n    \n    // Option builder functionality\n    window.optionBuilders = {};\n    \n    function createOptionBuilder(containerId, initialOptions = []) {\n        const container = document.getElementById(containerId);\n        if (!container) return;\n        \n        const options = initialOptions.length > 0 ? initialOptions : ['Option 1'];\n        let optionCounter = options.length;\n        \n        function renderOptions() {\n            container.innerHTML = `\n            <div class=\"option-builder\">\n                <div class=\"mb-3\">\n                    <label class=\"form-label small text-muted mb-2\">Options</label>\n                    <div class=\"option-list\" id=\"option-list-${containerId}\">\n                            ${options.map((option, index) => `\n                                \n                        <div class=\"option-item\" data-index=\"${index}\">\n                            <div class=\"option-drag-handle\">\n                                <i class=\"fas fa-grip-vertical\"></i>\n                            </div>\n                            <div class=\"option-input-wrapper\">\n                                <input type=\"text\" \n                                               class=\"option-input\" \n                                               value=\"${option}\" \n                                               placeholder=\"Enter option text...\"\n                                               onchange=\"updateOption('${containerId}', ${index}, this.value)\"\n                                               onkeydown=\"handleOptionKeydown(event, '${containerId}', ${index})\">\n                                    \n                            </div>\n                                    ${options.length > 1 ? `\n                            <button type=\"button\" \n                                                class=\"option-remove\" \n                                                onclick=\"removeOption('${containerId}', ${index})\"\n                                                title=\"Remove option\">\n                                <i class=\"fas fa-times\"></i>\n                            </button>\n                                    ` : `\n                            <div class=\"option-remove-placeholder\"></div>\n                                    `}\n                        </div>\n                            `).join('')}\n                    </div>\n                    <button type=\"button\" \n                                class=\"option-add\" \n                                onclick=\"addOption('${containerId}')\"\n                                title=\"Add new option\">\n                        <i class=\"fas fa-plus\"></i>\n                        <span>Add option</span>\n                    </button>\n                </div>\n            </div>\n            `;\n            \n            // Initialize drag and drop for options\n            initializeOptionSorting(containerId);\n        }\n        \n        window.updateOption = function(builderId, index, value) {\n            if (window.optionBuilders[builderId]) {\n                window.optionBuilders[builderId].options[index] = value;\n                window.optionBuilders[builderId].updateHiddenInput();\n            }\n        };\n        \n        window.removeOption = function(builderId, index) {\n            if (window.optionBuilders[builderId] && window.optionBuilders[builderId].options.length > 1) {\n                window.optionBuilders[builderId].options.splice(index, 1);\n                window.optionBuilders[builderId].renderOptions();\n                window.optionBuilders[builderId].updateHiddenInput();\n            }\n        };\n        \n        window.addOption = function(builderId) {\n            if (window.optionBuilders[builderId]) {\n                const builder = window.optionBuilders[builderId];\n                builder.optionCounter++;\n                builder.options.push(`Option ${builder.optionCounter}`);\n                builder.renderOptions();\n                \n                // Focus on the new input\n                setTimeout(() => {\n                    const inputs = document.querySelectorAll(`#${builderId} .option-input`);\n                    const newInput = inputs[inputs.length - 1];\n                    if (newInput) {\n                        newInput.focus();\n                        newInput.select();\n                    }\n                }, 100);\n                \n                builder.updateHiddenInput();\n            }\n        };\n        \n        window.handleOptionKeydown = function(event, builderId, index) {\n            if (event.key === 'Enter') {\n                event.preventDefault();\n                addOption(builderId);\n            } else if (event.key === 'Backspace' && event.target.value === '' && window.optionBuilders[builderId].options.length > 1) {\n                event.preventDefault();\n                removeOption(builderId, index);\n                // Focus on previous input if available\n                setTimeout(() => {\n                    const inputs = document.querySelectorAll(`#${builderId} .option-input`);\n                    const prevInput = inputs[Math.max(0, index - 1)];\n                    if (prevInput) {\n                        prevInput.focus();\n                    }\n                }, 100);\n            }\n        };\n        \n        function updateHiddenInput() {\n            const hiddenInput = document.querySelector('[name=\"options_text\"]');\n            if (hiddenInput) {\n                hiddenInput.value = options.filter(opt => opt.trim()).join('\\n');\n            }\n        }\n        \n        function initializeOptionSorting(builderId) {\n            const optionList = document.getElementById(`option-list-${builderId}`);\n            if (optionList && window.Sortable) {\n                new Sortable(optionList, {\n                    handle: '.option-drag-handle',\n                    animation: 150,\n                    ghostClass: 'option-dragging',\n                    onEnd: function(evt) {\n                        const builder = window.optionBuilders[builderId];\n                        if (builder) {\n                            // Reorder the options array\n                            const movedOption = builder.options.splice(evt.oldIndex, 1)[0];\n                            builder.options.splice(evt.newIndex, 0, movedOption);\n                            builder.updateHiddenInput();\n                        }\n                    }\n                });\n            }\n        }\n        \n        renderOptions();\n        updateHiddenInput();\n        \n        window.optionBuilders[containerId] = {\n            options,\n            optionCounter,\n            renderOptions,\n            updateHiddenInput\n        };\n    }\n    \n    // Field type selector functionality\n    function createFieldTypeSelector(containerId, selectedType = '') {\n        const container = document.getElementById(containerId);\n        if (!container) return;\n        \n        const fieldTypes = [\n            { value: 'text', label: 'Short answer', icon: 'fas fa-font', description: 'Single line text input' },\n            { value: 'textarea', label: 'Paragraph', icon: 'fas fa-align-left', description: 'Multi-line text input' },\n            { value: 'radio', label: 'Multiple choice', icon: 'fas fa-circle-dot', description: 'Select one option' },\n            { value: 'checkbox', label: 'Checkboxes', icon: 'fas fa-check-square', description: 'Select multiple options' },\n            { value: 'dropdown', label: 'Dropdown', icon: 'fas fa-caret-down', description: 'Select from dropdown list' },\n            { value: 'number', label: 'Number', icon: 'fas fa-hashtag', description: 'Numeric input' },\n            { value: 'email', label: 'Email', icon: 'fas fa-envelope', description: 'Email address input' },\n            { value: 'date', label: 'Date', icon: 'fas fa-calendar-alt', description: 'Date picker input' }\n        ];\n        \n        container.innerHTML = `\n            <div class=\"field-type-grid\">\n                ${fieldTypes.map(type => `\n                    \n                <div class=\"field-type-option ${selectedType === type.value ? 'selected' : ''}\" \n                         data-type=\"${type.value}\"\n                         onclick=\"selectFieldType('${type.value}')\"\n                         title=\"${type.description}\">\n                    <i class=\"${type.icon}\"></i>\n                    <span>${type.label}</span>\n                </div>\n                `).join('')}\n            </div>\n        `;\n        \n        window.selectFieldType = function(type) {\n            // Update visual selection\n            container.querySelectorAll('.field-type-option').forEach(option => {\n                option.classList.toggle('selected', option.dataset.type === type);\n            });\n            \n            // Update hidden select\n            const hiddenSelect = document.querySelector('[name=\"field_type\"]');\n            if (hiddenSelect) {\n                hiddenSelect.value = type;\n            }\n            \n            // Show/hide options builder based on field type\n            const optionsContainer = document.getElementById('options-builder');\n            const needsOptions = ['radio', 'checkbox', 'dropdown'].includes(type);\n            if (optionsContainer) {\n                optionsContainer.style.display = needsOptions ? 'block' : 'none';\n                \n                // Initialize or update option builder if needed\n                if (needsOptions) {\n                    const builderContainer = document.getElementById('options-container');\n                    if (builderContainer && !window.optionBuilders['options-container']) {\n                        createOptionBuilder('options-container');\n                    }\n                }\n            }\n        };\n        \n        // Auto-select first option if none selected\n        if (!selectedType) {\n            selectFieldType('text');\n        }\n    }\n        </script>\n    </body>\n</html>"
				},
				{
					"name": "Sample Response 2",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/html",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{local_url}}/accounts/register/",
							"host": [
								"{{local_url}}"
							],
							"path": [
								"accounts",
								"register",
								""
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "html",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/html; charset=utf-8"
						},
						{
							"key": "X-Frame-Options",
							"value": "DENY"
						},
						{
							"key": "Vary",
							"value": "Cookie"
						},
						{
							"key": "Content-Length",
							"value": "59950"
						},
						{
							"key": "X-Content-Type-Options",
							"value": "nosniff"
						},
						{
							"key": "Referrer-Policy",
							"value": "same-origin"
						},
						{
							"key": "Cross-Origin-Opener-Policy",
							"value": "same-origin"
						},
						{
							"key": "Set-Cookie",
							"value": "csrftoken=pS71uVLEU6GUXotyBOOShxFpiGnS3SJL; expires=Sat, 13 Jun 2026 08:11:41 GMT; Max-Age=31449600; Path=/; SameSite=Lax"
						},
						{
							"key": "Server",
							"value": "daphne"
						}
					],
					"cookie": [],
					"body": "<!DOCTYPE html>\n<html lang=\"en\">\n    <head>\n        <meta charset=\"UTF-8\">\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n        <title>Create account - CollabForms</title>\n        <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css\" rel=\"stylesheet\">\n        <link href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css\" rel=\"stylesheet\">\n        <link href=\"https://fonts.googleapis.com/css2?family=Google+Sans:wght@300;400;500;600;700&family=Roboto:wght@300;400;500;600;700&display=swap\" rel=\"stylesheet\">\n        <style>\n        :root {\n            /* Google Forms exact color palette */\n            --primary-color: #1a73e8;\n            --primary-hover: #1557b0;\n            --secondary-color: #5f6368;\n            --text-primary: #202124;\n            --text-secondary: #5f6368;\n            --text-muted: #9aa0a6;\n            --border-color: #dadce0;\n            --border-focus: #4285f4;\n            --background-primary: #ffffff;\n            --background-secondary: #f1f3f4;\n            --background-tertiary: #e8eaed;\n            --surface-color: #ffffff;\n            --surface-raised: #ffffff;\n            --shadow-light: 0 1px 2px 0 rgba(60,64,67,.3), 0 1px 3px 1px rgba(60,64,67,.15);\n            --shadow-medium: 0 1px 3px 0 rgba(60,64,67,.3), 0 4px 8px 3px rgba(60,64,67,.15);\n            --shadow-heavy: 0 2px 6px 2px rgba(60,64,67,.15), 0 8px 24px 4px rgba(60,64,67,.15);\n            --success-color: #34a853;\n            --warning-color: #fbbc04;\n            --error-color: #ea4335;\n            --purple-accent: #9c27b0;\n            --forms-purple: #673ab7;\n        }\n        \n        * {\n            font-family: 'Google Sans', 'Roboto', -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif;\n        }\n        \n        body {\n            background-color: var(--background-secondary);\n            color: var(--text-primary);\n            line-height: 1.6;\n            font-size: 14px;\n            margin: 0;\n            padding: 0;\n        }\n        \n        /* Google Forms-style header */\n        .navbar {\n            background: var(--surface-color) !important;\n            border-bottom: 1px solid var(--border-color);\n            box-shadow: var(--shadow-light);\n            min-height: 64px;\n            padding: 0;\n        }\n        \n        .navbar-brand {\n            font-family: 'Google Sans', sans-serif;\n            font-weight: 500;\n            color: var(--text-primary) !important;\n            font-size: 22px;\n            padding: 0;\n            margin: 0;\n        }\n        \n        .navbar-brand i {\n            color: var(--forms-purple);\n            margin-right: 8px;\n        }\n        \n        /* Google Forms-style cards */\n        .form-card {\n            background: var(--surface-color);\n            border: 1px solid var(--border-color);\n            border-radius: 8px;\n            box-shadow: var(--shadow-light);\n            transition: all 0.2s cubic-bezier(0.4,0,0.2,1);\n            overflow: hidden;\n        }\n        \n        .form-card:hover {\n            box-shadow: var(--shadow-medium);\n        }\n        \n        .form-card-header {\n            border-top: 10px solid var(--forms-purple);\n            padding: 24px 24px 0 24px;\n            background: var(--surface-color);\n        }\n        \n        .form-card-body {\n            padding: 24px;\n        }\n        \n        /* Google Forms-style buttons */\n        .btn-google-primary {\n            background-color: var(--primary-color);\n            border: none;\n            color: white;\n            border-radius: 4px;\n            font-weight: 500;\n            font-size: 14px;\n            padding: 8px 24px;\n            height: 40px;\n            transition: all 0.2s cubic-bezier(0.4,0,0.2,1);\n            text-transform: none;\n            box-shadow: none;\n        }\n        \n        .btn-google-primary:hover {\n            background-color: var(--primary-hover);\n            color: white;\n            box-shadow: 0 1px 2px 0 rgba(60,64,67,.3), 0 1px 3px 1px rgba(60,64,67,.15);\n        }\n        \n        .btn-google-secondary {\n            background-color: transparent;\n            border: 1px solid var(--border-color);\n            color: var(--primary-color);\n            border-radius: 4px;\n            font-weight: 500;\n            font-size: 14px;\n            padding: 8px 24px;\n            height: 40px;\n            transition: all 0.2s cubic-bezier(0.4,0,0.2,1);\n            text-transform: none;\n        }\n        \n        .btn-google-secondary:hover {\n            background-color: rgba(26, 115, 232, 0.04);\n            border-color: var(--primary-color);\n            color: var(--primary-color);\n        }\n        \n        .btn-google-text {\n            background: transparent;\n            border: none;\n            color: var(--primary-color);\n            font-weight: 500;\n            font-size: 14px;\n            padding: 8px 16px;\n            border-radius: 4px;\n            transition: all 0.2s cubic-bezier(0.4,0,0.2,1);\n        }\n        \n        .btn-google-text:hover {\n            background-color: rgba(26, 115, 232, 0.04);\n            color: var(--primary-color);\n        }\n        \n        /* Google Forms-style form inputs */\n        .form-input-google {\n            border: none;\n            border-bottom: 1px solid var(--border-color);\n            border-radius: 4px 4px 0 0;\n            background-color: #f8f9fa;\n            padding: 16px 16px 6px 16px;\n            font-size: 16px;\n            line-height: 1.5;\n            transition: all 0.2s cubic-bezier(0.4,0,0.2,1);\n            width: 100%;\n        }\n        \n        .form-input-google:focus {\n            outline: none;\n            border-bottom: 2px solid var(--primary-color);\n            background-color: #fafbfc;\n            box-shadow: 0 2px 4px rgba(26, 115, 232, 0.1);\n        }\n        \n        .form-floating-google {\n            position: relative;\n        }\n        \n        .form-floating-google > .form-input-google {\n            padding-top: 20px;\n            padding-bottom: 4px;\n        }\n        \n        .form-floating-google > label {\n            position: absolute;\n            top: 0;\n            left: 16px;\n            padding-top: 16px;\n            color: var(--text-secondary);\n            font-size: 16px;\n            font-weight: 400;\n            transition: all 0.2s cubic-bezier(0.4,0,0.2,1);\n            pointer-events: none;\n            transform-origin: 0 0;\n        }\n        \n        .form-floating-google > .form-input-google:focus ~ label,\n        .form-floating-google > .form-input-google:not(:placeholder-shown) ~ label {\n            transform: translateY(-50%) scale(0.75);\n            color: var(--primary-color);\n            padding-top: 4px;\n        }\n        \n        /* User avatar */\n        .user-avatar {\n            width: 32px;\n            height: 32px;\n            border-radius: 50%;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            color: white;\n            font-weight: 500;\n            font-size: 14px;\n            background: linear-gradient(135deg, var(--primary-color), var(--forms-purple));\n        }\n        \n        /* Connection status */\n        .connection-status {\n            position: fixed;\n            bottom: 24px;\n            right: 24px;\n            z-index: 1050;\n            border-radius: 4px;\n            padding: 8px 16px;\n            font-size: 14px;\n            font-weight: 500;\n            box-shadow: var(--shadow-medium);\n        }\n        \n        .connection-connected {\n            background-color: var(--success-color);\n            color: white;\n        }\n        \n        .connection-connecting {\n            background-color: var(--warning-color);\n            color: var(--text-primary);\n        }\n        \n        .connection-disconnected {\n            background-color: var(--error-color);\n            color: white;\n        }\n        \n        /* Page layouts */\n        .page-container {\n            max-width: 768px;\n            margin: 0 auto;\n            padding: 0 16px;\n        }\n        \n        .page-container-wide {\n            max-width: 1200px;\n            margin: 0 auto;\n            padding: 0 16px;\n        }\n        \n        .auth-container {\n            min-height: 100vh;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n            padding: 24px;\n        }\n        \n        .auth-card {\n            background: var(--surface-color);\n            border-radius: 12px;\n            box-shadow: var(--shadow-heavy);\n            width: 100%;\n            max-width: 420px;\n            overflow: hidden;\n        }\n        \n        .auth-header {\n            text-align: center;\n            padding: 48px 48px 24px 48px;\n        }\n        \n        .auth-body {\n            padding: 0 48px 48px 48px;\n        }\n        \n        .auth-logo {\n            color: var(--forms-purple);\n            font-size: 48px;\n            margin-bottom: 24px;\n        }\n        \n        .auth-title {\n            font-size: 24px;\n            font-weight: 400;\n            color: var(--text-primary);\n            margin-bottom: 8px;\n        }\n        \n        .auth-subtitle {\n            font-size: 16px;\n            color: var(--text-secondary);\n            margin-bottom: 0;\n        }\n        \n        /* Dropdown menus */\n        .dropdown-menu {\n            border: 1px solid var(--border-color);\n            border-radius: 8px;\n            box-shadow: var(--shadow-medium);\n            padding: 8px 0;\n            min-width: 200px;\n        }\n        \n        .dropdown-item {\n            padding: 12px 16px;\n            font-size: 14px;\n            color: var(--text-primary);\n            border: none;\n            background: none;\n            transition: background-color 0.2s cubic-bezier(0.4,0,0.2,1);\n        }\n        \n        .dropdown-item:hover {\n            background-color: var(--background-tertiary);\n            color: var(--text-primary);\n        }\n        \n        .dropdown-divider {\n            margin: 8px 0;\n            border-top: 1px solid var(--border-color);\n        }\n        \n        /* Alert messages */\n        .alert {\n            border-radius: 4px;\n            border: none;\n            font-size: 14px;\n            padding: 16px;\n            margin-bottom: 16px;\n        }\n        \n        .alert-success {\n            background-color: #e8f5e8;\n            color: #1e7e34;\n        }\n        \n        .alert-warning {\n            background-color: #fff3cd;\n            color: #856404;\n        }\n        \n        .alert-danger {\n            background-color: #f8d7da;\n            color: #721c24;\n        }\n        \n        .alert-info {\n            background-color: #d1ecf1;\n            color: #0c5460;\n        }\n        \n        /* Loading animations */\n        .loading-spinner {\n            display: inline-block;\n            width: 16px;\n            height: 16px;\n            border: 2px solid var(--border-color);\n            border-radius: 50%;\n            border-top-color: var(--primary-color);\n            animation: spin 1s linear infinite;\n        }\n        \n        @keyframes spin {\n            to { transform: rotate(360deg); }\n        }\n        \n        .fade-in {\n            animation: fadeIn 0.3s cubic-bezier(0.4,0,0.2,1);\n        }\n        \n        @keyframes fadeIn {\n            from { opacity: 0; transform: translateY(8px); }\n            to { opacity: 1; transform: translateY(0); }\n        }\n        \n        /* Option builder styles */\n        .option-builder {\n            width: 100%;\n        }\n        \n        .option-item {\n            display: flex;\n            align-items: center;\n            gap: 8px;\n            margin-bottom: 8px;\n            padding: 8px;\n            border: 1px solid var(--border-color);\n            border-radius: 4px;\n            background-color: var(--surface-color);\n            transition: all 0.2s cubic-bezier(0.4,0,0.2,1);\n        }\n        \n        .option-item:hover {\n            border-color: var(--primary-color);\n        }\n        \n        .option-item .field-handle {\n            color: var(--text-muted);\n            cursor: grab;\n            padding: 4px;\n        }\n        \n        .option-item .field-handle:active {\n            cursor: grabbing;\n        }\n        \n        .option-input {\n            flex: 1;\n            border: none;\n            outline: none;\n            background: transparent;\n            font-size: 14px;\n            color: var(--text-primary);\n            padding: 4px 0;\n        }\n        \n        .option-input::placeholder {\n            color: var(--text-muted);\n        }\n        \n        .option-remove {\n            background: transparent;\n            border: none;\n            color: var(--text-muted);\n            padding: 4px;\n            border-radius: 3px;\n            transition: all 0.2s cubic-bezier(0.4,0,0.2,1);\n            cursor: pointer;\n        }\n        \n        .option-remove:hover {\n            background-color: var(--error-color);\n            color: white;\n        }\n        \n        .option-add {\n            display: flex;\n            align-items: center;\n            gap: 8px;\n            width: 100%;\n            background: transparent;\n            border: 1px dashed var(--border-color);\n            border-radius: 4px;\n            padding: 12px;\n            color: var(--primary-color);\n            font-size: 14px;\n            font-weight: 500;\n            transition: all 0.2s cubic-bezier(0.4,0,0.2,1);\n            cursor: pointer;\n            margin-top: 4px;\n        }\n        \n        .option-add:hover {\n            background-color: rgba(26, 115, 232, 0.04);\n            border-color: var(--primary-color);\n        }\n        \n        .option-add i {\n            font-size: 12px;\n        }\n        \n        /* Field type selector styles */\n        .field-type-grid {\n            display: grid;\n            grid-template-columns: repeat(auto-fit, minmax(140px, 1fr));\n            gap: 8px;\n            margin-bottom: 16px;\n        }\n        \n        .field-type-option {\n            display: flex;\n            flex-direction: column;\n            align-items: center;\n            gap: 6px;\n            padding: 16px 8px;\n            border: 1px solid var(--border-color);\n            border-radius: 6px;\n            background-color: var(--surface-color);\n            cursor: pointer;\n            transition: all 0.2s cubic-bezier(0.4,0,0.2,1);\n            text-align: center;\n            position: relative;\n            overflow: hidden;\n        }\n        \n        .field-type-option:hover {\n            border-color: var(--primary-color);\n            background-color: rgba(26, 115, 232, 0.04);\n        }\n        \n        .field-type-option.selected {\n            border-color: var(--primary-color);\n            background-color: rgba(26, 115, 232, 0.08);\n            color: var(--primary-color);\n        }\n        \n        .field-type-option i {\n            font-size: 18px;\n            color: var(--text-secondary);\n            transition: color 0.2s cubic-bezier(0.4,0,0.2,1);\n        }\n        \n        .field-type-option.selected i {\n            color: var(--primary-color);\n        }\n        \n        .field-type-option span {\n            font-size: 12px;\n            font-weight: 500;\n            color: var(--text-primary);\n        }\n        \n        /* Enhanced responsive design */\n        /* Enhanced responsive design for different screen sizes */\n        \n        /* Mobile First - Base styles for small devices */\n        @media (max-width: 575.98px) {\n            .page-container {\n                padding: 0 8px;\n                max-width: 100%;\n            }\n            \n            .page-container-wide {\n                padding: 0 8px;\n                max-width: 100%;\n            }\n            \n            .auth-container {\n                padding: 16px;\n                min-height: 100vh;\n            }\n            \n            .auth-header {\n                padding: 32px 20px 20px 20px;\n            }\n            \n            .auth-body {\n                padding: 0 20px 32px 20px;\n            }\n            \n            .form-group-google {\n                margin-bottom: 20px;\n            }\n            \n            .navbar-brand {\n                font-size: 18px;\n            }\n            \n            .form-card-body {\n                padding: 16px;\n            }\n            \n            .form-card-header {\n                padding: 16px 16px 0 16px;\n            }\n            \n            .field-type-grid {\n                grid-template-columns: repeat(2, 1fr);\n                gap: 6px;\n            }\n            \n            .field-type-option {\n                padding: 12px 6px;\n                min-height: 70px;\n            }\n            \n            .field-type-option i {\n                font-size: 16px;\n                margin-bottom: 4px;\n            }\n            \n            .field-type-option span {\n                font-size: 10px;\n                line-height: 1.2;\n            }\n            \n            .page-header .d-flex {\n                flex-direction: column;\n                align-items: stretch !important;\n                gap: 12px;\n            }\n            \n            .btn-group {\n                width: 100%;\n                flex-direction: column;\n            }\n            \n            .btn-group .btn {\n                flex: 1;\n                margin-left: 0;\n                margin-bottom: 4px;\n            }\n            \n            .option-item {\n                flex-wrap: wrap;\n                gap: 6px;\n            }\n            \n            .option-input-wrapper {\n                flex: 1;\n                min-width: 200px;\n                margin: 0;\n            }\n        }\n        \n        /* Small devices - tablets portrait */\n        @media (min-width: 576px) and (max-width: 767.98px) {\n            .page-container {\n                padding: 0 12px;\n                max-width: 540px;\n            }\n            \n            .page-container-wide {\n                padding: 0 12px;\n                max-width: 720px;\n            }\n            \n            .auth-container {\n                padding: 20px;\n            }\n            \n            .auth-header {\n                padding: 40px 28px 20px 28px;\n            }\n            \n            .auth-body {\n                padding: 0 28px 40px 28px;\n            }\n            \n            .form-group-google {\n                margin-bottom: 22px;\n            }\n            \n            .field-type-grid {\n                grid-template-columns: repeat(3, 1fr);\n                gap: 8px;\n            }\n            \n            .field-type-option {\n                padding: 14px 8px;\n                min-height: 80px;\n            }\n            \n            .field-type-option i {\n                font-size: 18px;\n                margin-bottom: 6px;\n            }\n            \n            .field-type-option span {\n                font-size: 11px;\n            }\n        }\n        \n        /* Medium devices - tablets landscape */\n        @media (min-width: 768px) and (max-width: 991.98px) {\n            .page-container {\n                padding: 0 16px;\n                max-width: 720px;\n            }\n            \n            .page-container-wide {\n                padding: 0 16px;\n                max-width: 960px;\n            }\n            \n            .form-card-body {\n                padding: 20px;\n            }\n            \n            .form-card-header {\n                padding: 20px 20px 0 20px;\n            }\n            \n            .field-type-grid {\n                grid-template-columns: repeat(4, 1fr);\n                gap: 8px;\n            }\n            \n            .field-type-option {\n                padding: 16px 10px;\n                min-height: 85px;\n            }\n            \n            .field-type-option i {\n                font-size: 20px;\n                margin-bottom: 8px;\n            }\n            \n            .field-type-option span {\n                font-size: 12px;\n            }\n        }\n        \n        /* Large devices - small laptops */\n        @media (min-width: 992px) and (max-width: 1199.98px) {\n            .page-container {\n                padding: 0 20px;\n                max-width: 960px;\n            }\n            \n            .page-container-wide {\n                padding: 0 20px;\n                max-width: 1140px;\n            }\n            \n            .field-type-grid {\n                grid-template-columns: repeat(4, 1fr);\n                gap: 10px;\n            }\n            \n            .field-type-option {\n                padding: 18px 12px;\n                min-height: 90px;\n            }\n            \n            .field-type-option i {\n                font-size: 22px;\n                margin-bottom: 8px;\n            }\n            \n            .field-type-option span {\n                font-size: 13px;\n            }\n        }\n        \n        /* Extra large devices - large laptops and desktops */\n        @media (min-width: 1200px) and (max-width: 1399.98px) {\n            .page-container {\n                padding: 0 24px;\n                max-width: 1140px;\n            }\n            \n            .page-container-wide {\n                padding: 0 24px;\n                max-width: 1320px;\n            }\n            \n            .field-type-grid {\n                grid-template-columns: repeat(4, 1fr);\n                gap: 12px;\n            }\n            \n            .field-type-option {\n                padding: 20px 14px;\n                min-height: 95px;\n            }\n            \n            .field-type-option i {\n                font-size: 24px;\n                margin-bottom: 10px;\n            }\n            \n            .field-type-option span {\n                font-size: 14px;\n            }\n        }\n        \n        /* Extra extra large devices - large monitors */\n        @media (min-width: 1400px) {\n            .page-container {\n                padding: 0 30px;\n                max-width: 1200px;\n            }\n            \n            .page-container-wide {\n                padding: 0 30px;\n                max-width: 1600px;\n            }\n            \n            .field-type-grid {\n                grid-template-columns: repeat(4, 1fr);\n                gap: 15px;\n            }\n            \n            .field-type-option {\n                padding: 22px 16px;\n                min-height: 100px;\n            }\n            \n            .field-type-option i {\n                font-size: 26px;\n                margin-bottom: 12px;\n            }\n            \n            .field-type-option span {\n                font-size: 15px;\n            }\n        }\n        \n        /* Laptop-specific fixes for alignment issues */\n        @media (min-width: 1024px) and (max-width: 1440px) and (orientation: landscape) {\n            /* Common laptop resolution fixes */\n            .row.g-4 {\n                --bs-gutter-x: 2rem;\n                --bs-gutter-y: 2rem;\n            }\n            \n            .col-xl-8, .col-lg-7 {\n                flex: 0 0 auto;\n                width: 66.66666667%;\n            }\n            \n            .col-xl-4, .col-lg-5 {\n                flex: 0 0 auto;\n                width: 33.33333333%;\n            }\n            \n            .sticky-form-panel {\n                position: sticky;\n                top: 24px;\n                height: fit-content;\n                max-height: calc(100vh - 48px);\n                overflow-y: auto;\n            }\n            \n            /* Better spacing for form elements */\n            .form-group-google {\n                margin-bottom: 1.5rem;\n            }\n            \n            .option-builder {\n                max-height: 300px;\n                overflow-y: auto;\n                border: 1px solid var(--border-color);\n                border-radius: 6px;\n                padding: 12px;\n            }\n            \n            /* Improved field item layout */\n            .field-item {\n                margin-bottom: 1rem;\n                padding: 1.25rem;\n            }\n            \n            .field-item .d-flex {\n                align-items: flex-start;\n                gap: 1rem;\n            }\n            \n            /* Better button alignment */\n            .d-flex.gap-2 {\n                gap: 0.75rem !important;\n            }\n            \n            .d-flex.gap-3 {\n                gap: 1rem !important;\n            }\n        }\n        \n        /* Ultra-wide screen optimizations */\n        @media (min-width: 1920px) {\n            .page-container-wide {\n                max-width: 1800px;\n            }\n            \n            .row.g-4 {\n                --bs-gutter-x: 3rem;\n            }\n            \n            .form-card {\n                box-shadow: var(--shadow-medium);\n            }\n        }\n        \n        /* Height-based responsive adjustments */\n        @media (max-height: 700px) and (min-width: 992px) {\n            .sticky-form-panel {\n                position: static;\n            }\n            \n            .form-card-body {\n                padding: 16px;\n            }\n            \n            .form-group-google {\n                margin-bottom: 1rem;\n            }\n        }\n        \n        /* High DPI screen adjustments */\n        @media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi) {\n            .form-card {\n                border-width: 0.5px;\n            }\n            \n            .option-item {\n                border-width: 0.5px;\n            }\n            \n            .field-type-option {\n                border-width: 0.5px;\n            }\n        }\n        \n        /* Additional utility classes for better alignment */\n        .status-indicator {\n            width: 8px;\n            height: 8px;\n            border-radius: 50%;\n            margin-right: 6px;\n            flex-shrink: 0;\n        }\n        \n        .status-online {\n            background-color: var(--success-color);\n        }\n        \n        .status-editing {\n            background-color: var(--warning-color);\n            animation: pulse 2s infinite;\n        }\n        \n        @keyframes pulse {\n            0% { opacity: 1; }\n            50% { opacity: 0.5; }\n            100% { opacity: 1; }\n        }\n        \n        /* Field handle for drag and drop */\n        .field-handle {\n            color: var(--text-muted);\n            cursor: grab;\n            padding: 4px;\n            transition: color 0.2s cubic-bezier(0.4,0,0.2,1);\n        }\n        \n        .field-handle:hover {\n            color: var(--text-secondary);\n        }\n        \n        .field-handle:active {\n            cursor: grabbing;\n        }\n        \n        /* Field item styles */\n        .field-item {\n            transition: all 0.2s cubic-bezier(0.4,0,0.2,1);\n        }\n        \n        .field-item:hover {\n            box-shadow: var(--shadow-light);\n        }\n        \n        .field-item.dragging {\n            opacity: 0.7;\n            transform: rotate(5deg);\n        }\n        \n        /* Better form input focus states */\n        .form-input-google:focus {\n            outline: none;\n            border-bottom: 2px solid var(--primary-color);\n            background-color: #fafbfc;\n            box-shadow: 0 2px 4px rgba(26, 115, 232, 0.1);\n        }\n        \n        /* Improved checkbox and radio styles */\n        .form-check-input:checked {\n            background-color: var(--primary-color);\n            border-color: var(--primary-color);\n        }\n        \n        .form-check-input:focus {\n            border-color: var(--primary-color);\n            outline: none;\n            box-shadow: 0 0 0 0.25rem rgba(26, 115, 232, 0.25);\n        }\n        \n        /* Page header improvements */\n        .page-header {\n            background-color: var(--surface-color);\n            border-bottom: 1px solid var(--border-color);\n            margin-bottom: 0;\n        }\n        \n        /* Better button spacing in groups */\n        .btn-group .btn,\n        .d-flex .btn + .btn {\n            margin-left: 8px;\n        }\n        \n        /* Better form field error states */\n        .form-input-google.is-invalid {\n            border-bottom-color: var(--error-color);\n        }\n        \n        .form-input-google.is-invalid:focus {\n            border-bottom-color: var(--error-color);\n            box-shadow: 0 2px 4px rgba(234, 67, 53, 0.1);\n        }\n        \n        /* Consistent border radius */\n        .rounded {\n            border-radius: 6px !important;\n        }\n        \n        .rounded-pill {\n            border-radius: 16px !important;\n        }\n        \n        /* Enhanced option builder styles */\n        .option-list {\n            margin-bottom: 12px;\n        }\n        \n        .option-drag-handle {\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            width: 24px;\n            height: 24px;\n            color: var(--text-muted);\n            cursor: grab;\n            border-radius: 3px;\n            transition: all 0.2s cubic-bezier(0.4,0,0.2,1);\n        }\n        \n        .option-drag-handle:hover {\n            background-color: var(--background-tertiary);\n            color: var(--text-secondary);\n        }\n        \n        .option-drag-handle:active {\n            cursor: grabbing;\n        }\n        \n        .option-input-wrapper {\n            flex: 1;\n            margin: 0 8px;\n        }\n        \n        .option-remove-placeholder {\n            width: 24px;\n            height: 24px;\n        }\n        \n        .option-dragging {\n            opacity: 0.5;\n            transform: rotate(2deg);\n        }\n        \n        .option-item:last-child .option-input {\n            border-bottom-color: transparent;\n        }\n        \n        .option-item .option-input:focus {\n            border-bottom-color: var(--primary-color);\n        }\n        \n        /* Field type option hover effects */\n        .field-type-option {\n            position: relative;\n            overflow: hidden;\n        }\n        \n        .field-type-option::before {\n            content: '';\n            position: absolute;\n            top: 0;\n            left: -100%;\n            width: 100%;\n            height: 100%;\n            background: linear-gradient(90deg, transparent, rgba(26, 115, 232, 0.1), transparent);\n            transition: left 0.5s ease;\n        }\n        \n        .field-type-option:hover::before {\n            left: 100%;\n        }\n        \n        /* Form validation styles */\n        .is-invalid .option-input {\n            border-bottom-color: var(--error-color);\n        }\n        \n        .invalid-feedback {\n            color: var(--error-color);\n            font-size: 12px;\n            margin-top: 4px;\n        }\n        \n        /* Loading state for option builder */\n        .option-builder.loading {\n            opacity: 0.6;\n            pointer-events: none;\n        }\n        \n        .option-builder.loading::after {\n            content: '';\n            position: absolute;\n            top: 50%;\n            left: 50%;\n            transform: translate(-50%, -50%);\n            width: 20px;\n            height: 20px;\n            border: 2px solid var(--border-color);\n            border-top-color: var(--primary-color);\n            border-radius: 50%;\n            animation: spin 1s linear infinite;\n        }\n        \n        /* Dashboard specific responsive improvements */\n        .dashboard-stats {\n            margin-bottom: 2rem;\n        }\n        \n        .dashboard-stats .form-card {\n            transition: all 0.3s cubic-bezier(0.4,0,0.2,1);\n        }\n        \n        .dashboard-stats .form-card:hover {\n            transform: translateY(-2px);\n            box-shadow: var(--shadow-medium);\n        }\n        \n        /* Forms grid responsive layout */\n        @media (min-width: 1200px) {\n            .forms-grid .col-xl-4 {\n                flex: 0 0 auto;\n                width: 33.333333%;\n            }\n        }\n        \n        @media (min-width: 992px) and (max-width: 1199.98px) {\n            .forms-grid .col-lg-6 {\n                flex: 0 0 auto;\n                width: 50%;\n            }\n        }\n        \n        @media (max-width: 991.98px) {\n            .forms-grid .col-md-12 {\n                flex: 0 0 auto;\n                width: 100%;\n            }\n        }\n        \n        /* Better button groups on mobile */\n        @media (max-width: 767.98px) {\n            .btn-group-mobile {\n                display: flex;\n                flex-direction: column;\n                gap: 8px;\n                width: 100%;\n            }\n            \n            .btn-group-mobile .btn {\n                width: 100%;\n                margin-left: 0;\n            }\n            \n            .page-header .d-flex {\n                flex-direction: column;\n                align-items: stretch !important;\n                gap: 16px;\n            }\n            \n            .page-header .flex-grow-1 {\n                text-align: center;\n            }\n        }\n        \n        /* Form card improvements for different screen sizes */\n        .form-item-card {\n            transition: all 0.2s cubic-bezier(0.4,0,0.2,1);\n            height: 100%;\n            display: flex;\n            flex-direction: column;\n        }\n        \n        .form-item-card:hover {\n            transform: translateY(-1px);\n            box-shadow: var(--shadow-light);\n        }\n        \n        .form-item-card .form-item-content {\n            flex: 1;\n            display: flex;\n            flex-direction: column;\n        }\n        \n        .form-item-card .form-item-footer {\n            margin-top: auto;\n            padding-top: 12px;\n        }\n        \n        /* Enhanced responsiveness for collaboration UI */\n        .collaboration-panel {\n            position: sticky;\n            top: 24px;\n            max-height: calc(100vh - 48px);\n            overflow-y: auto;\n        }\n        \n        @media (max-width: 991.98px) {\n            .collaboration-panel {\n                position: static;\n                max-height: none;\n            }\n        }\n        \n        /* Better form field spacing on different screen sizes */\n        @media (min-width: 768px) and (max-width: 1023.98px) {\n            .form-group-google {\n                margin-bottom: 1.25rem;\n            }\n            \n            .field-type-grid {\n                gap: 8px;\n            }\n            \n            .option-builder {\n                padding: 14px;\n            }\n        }\n        \n        /* Ultra-wide screen optimizations */\n        @media (min-width: 1600px) {\n            .page-container-wide {\n                max-width: 1500px;\n            }\n            \n            .forms-grid {\n                --bs-gutter-x: 2rem;\n            }\n            \n            .dashboard-stats {\n                --bs-gutter-x: 1.5rem;\n            }\n        }\n        \n        /* Print styles */\n        @media print {\n            .page-header,\n            .btn,\n            .dropdown,\n            .connection-status,\n            .navbar {\n                display: none !important;\n            }\n            \n            .form-card {\n                border: 1px solid #ddd !important;\n                box-shadow: none !important;\n                page-break-inside: avoid;\n            }\n            \n            .page-container,\n            .page-container-wide {\n                max-width: none !important;\n                padding: 0 !important;\n            }\n        }\n        \n        /* Google Forms-style form groups */\n        .form-group-google {\n            margin-bottom: 24px;\n            position: relative;\n        }\n        \n        .form-error {\n            color: var(--error-color);\n            font-size: 12px;\n            margin-top: 6px;\n            font-weight: 400;\n        }\n        \n        .form-help {\n            color: var(--text-muted);\n            font-size: 12px;\n            margin-top: 6px;\n            line-height: 1.4;\n        }\n    </style>\n    </head>\n    <body>\n        <nav class=\"navbar navbar-expand-lg\">\n            <div class=\"container-fluid px-4\">\n                <a class=\"navbar-brand d-flex align-items-center\" href=\"/forms/\">\n                    <i class=\"fas fa-poll-h me-2\"></i>\n                CollabForms\n                </a>\n                <div class=\"navbar-nav ms-auto\">\n                    <a class=\"btn btn-google-text me-2\" href=\"/accounts/login/\">\n                        <i class=\"fas fa-sign-in-alt me-1\"></i>Sign in\n                    </a>\n                    <a class=\"btn btn-google-primary\" href=\"/accounts/register/\">\n                        <i class=\"fas fa-user-plus me-1\"></i>Sign up\n                    </a>\n                </div>\n            </div>\n        </nav>\n        <main>\n            <div class=\"auth-container\">\n                <div class=\"auth-card\">\n                    <div class=\"auth-header\">\n                        <div class=\"auth-logo\">\n                            <i class=\"fas fa-poll-h\"></i>\n                        </div>\n                        <h1 class=\"auth-title\">Create account</h1>\n                        <p class=\"auth-subtitle\">to get started with CollabForms</p>\n                    </div>\n                    <div class=\"auth-body\">\n                        <form method=\"post\" novalidate>\n                            <input type=\"hidden\" name=\"csrfmiddlewaretoken\" value=\"1nLKLHHUUCOkZGHkqI3LlzxzwKwBX9kDg5IB5sioEyk4MU0IRmHtsW2OEgJjQRTe\">\n                            <div class=\"form-group-google\">\n                                <div class=\"form-floating-google\">\n                                    <input type=\"text\" \n                               class=\"form-input-google\" \n                               id=\"id_username\" \n                               name=\"username\" \n                               placeholder=\" \"\n                               value=\"\"\n                               required>\n                                    <label for=\"id_username\">Username</label>\n                                </div>\n                            </div>\n                            <div class=\"form-group-google\">\n                                <div class=\"form-floating-google\">\n                                    <input type=\"email\" \n                               class=\"form-input-google\" \n                               id=\"id_email\" \n                               name=\"email\" \n                               placeholder=\" \"\n                               value=\"\"\n                               required>\n                                    <label for=\"id_email\">Email</label>\n                                </div>\n                            </div>\n                            <div class=\"form-group-google\">\n                                <div class=\"form-floating-google\">\n                                    <input type=\"password\" \n                               class=\"form-input-google\" \n                               id=\"id_password1\" \n                               name=\"password1\" \n                               placeholder=\" \"\n                               required>\n                                    <label for=\"id_password1\">Password</label>\n                                </div>\n                            </div>\n                            <div class=\"form-group-google\">\n                                <div class=\"form-floating-google\">\n                                    <input type=\"password\" \n                               class=\"form-input-google\" \n                               id=\"id_password2\" \n                               name=\"password2\" \n                               placeholder=\" \"\n                               required>\n                                    <label for=\"id_password2\">Confirm password</label>\n                                </div>\n                            </div>\n                            <div class=\"form-group-google\">\n                                <div class=\"form-floating-google\">\n                                    <select class=\"form-input-google\" \n                                id=\"id_role\" \n                                name=\"role\" \n                                required>\n                                        <option value=\"\" disabled selected></option>\n                                        <option value=\"admin\" >Admin</option>\n                                        <option value=\"user\" selected>User</option>\n                                    </select>\n                                    <label for=\"id_role\">Role</label>\n                                </div>\n                            </div>\n                            <div class=\"d-flex justify-content-between align-items-center mb-4 mt-2\">\n                                <a href=\"/accounts/login/\" class=\"btn-google-text p-0\">\n                        Sign in instead\n                    </a>\n                                <button type=\"submit\" class=\"btn btn-google-primary\">\n                        Create account\n                    </button>\n                            </div>\n                        </form>\n                        <div class=\"text-center mt-4\">\n                            <p class=\"text-muted small mb-0\">\n                    Already have an account? \n                    \n                                <a href=\"/accounts/login/\" class=\"text-decoration-none\">\n                        Sign in\n                    </a>\n                            </p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </main>\n        <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js\"></script>\n        <script>\n    // Google Forms-style form field rendering\n    function renderFormField(field, value = '', userEditing = null) {\n        const isLocked = userEditing && userEditing.id !== window.currentUserId;\n        const lockClass = isLocked ? 'field-locked' : '';\n        const lockIcon = isLocked ? `\n            <i class=\"fas fa-lock text-warning ms-2\" title=\"Being edited by ${userEditing.username}\"></i>` : '';\n        \n        let fieldHtml = `\n            <div class=\"form-card mb-3 fade-in\" data-field-id=\"${field.id}\">\n                <div class=\"form-card-body\">\n                    <div class=\"d-flex justify-content-between align-items-start mb-3\">\n                        <div>\n                            <label class=\"form-label fw-normal\">${field.label}</label>\n                            ${field.is_required ? '\n                            <span class=\"text-danger ms-1\">*</span>' : ''}\n                            ${lockIcon}\n                        </div>\n                    </div>\n        `;\n        \n        switch(field.field_type) {\n            case 'text':\n            case 'email':\n            case 'url':\n                fieldHtml += `\n                    <div class=\"form-floating-google\">\n                        <input type=\"${field.field_type}\" \n                               class=\"form-input-google ${lockClass}\" \n                               id=\"field_${field.id}\" \n                               name=\"field_${field.id}\" \n                               placeholder=\" \"\n                               value=\"${value}\"\n                               ${field.is_required ? 'required' : ''}\n                               ${isLocked ? 'disabled' : ''}>\n                        <label for=\"field_${field.id}\">Your answer</label>\n                    </div>\n                `;\n                break;\n                \n            case 'date':\n                fieldHtml += `\n                    <div class=\"form-floating-google\">\n                        <input type=\"date\" \n                               class=\"form-input-google ${lockClass}\" \n                               id=\"field_${field.id}\" \n                               name=\"field_${field.id}\" \n                               value=\"${value}\"\n                               ${field.is_required ? 'required' : ''}\n                               ${isLocked ? 'disabled' : ''}>\n                        <label for=\"field_${field.id}\">Select date</label>\n                    </div>\n                `;\n                break;\n                \n            case 'textarea':\n                fieldHtml += `\n                    <div class=\"form-floating-google\">\n                        <textarea class=\"form-input-google ${lockClass}\" \n                                  id=\"field_${field.id}\" \n                                  name=\"field_${field.id}\" \n                                  placeholder=\" \"\n                                  rows=\"3\"\n                                  style=\"min-height: 100px; resize: vertical;\"\n                                  ${field.is_required ? 'required' : ''}\n                                  ${isLocked ? 'disabled' : ''}>${value}</textarea>\n                        <label for=\"field_${field.id}\">Your answer</label>\n                    </div>\n                `;\n                break;\n                \n            case 'number':\n                fieldHtml += `\n                    <div class=\"form-floating-google\">\n                        <input type=\"number\" \n                               class=\"form-input-google ${lockClass}\" \n                               id=\"field_${field.id}\" \n                               name=\"field_${field.id}\" \n                               placeholder=\" \"\n                               value=\"${value}\"\n                               ${field.is_required ? 'required' : ''}\n                               ${isLocked ? 'disabled' : ''}>\n                        <label for=\"field_${field.id}\">Your answer</label>\n                    </div>\n                `;\n                break;\n                \n            case 'select':\n            case 'dropdown':\n                fieldHtml += `\n                    <select class=\"form-input-google ${lockClass}\" \n                            id=\"field_${field.id}\" \n                            name=\"field_${field.id}\"\n                            ${field.is_required ? 'required' : ''}\n                            ${isLocked ? 'disabled' : ''}>\n                        <option value=\"\" disabled ${!value ? 'selected' : ''}>Choose</option>\n                        ${field.options.map(option => \n                            `\n                        <option value=\"${option}\" ${value === option ? 'selected' : ''}>${option}</option>`\n                        ).join('')}\n                    </select>\n                `;\n                break;\n                \n            case 'radio':\n                fieldHtml += `\n                    <div class=\"d-grid gap-2\">\n                        ${field.options.map((option, index) => `\n                            \n                        <div class=\"form-check\">\n                            <input class=\"form-check-input\" \n                                       type=\"radio\" \n                                       name=\"field_${field.id}\" \n                                       id=\"field_${field.id}_${index}\" \n                                       value=\"${option}\"\n                                       ${value === option ? 'checked' : ''}\n                                       ${isLocked ? 'disabled' : ''}>\n                            <label class=\"form-check-label\" for=\"field_${field.id}_${index}\">\n                                    ${option}\n                                </label>\n                        </div>\n                        `).join('')}\n                    </div>\n                `;\n                break;\n                \n            case 'checkbox':\n                const selectedValues = Array.isArray(value) ? value : (value ? [value] : []);\n                fieldHtml += `\n                    <div class=\"d-grid gap-2\">\n                        ${field.options.map((option, index) => `\n                            \n                        <div class=\"form-check\">\n                            <input class=\"form-check-input\" \n                                       type=\"checkbox\" \n                                       name=\"field_${field.id}\" \n                                       id=\"field_${field.id}_${index}\" \n                                       value=\"${option}\"\n                                       ${selectedValues.includes(option) ? 'checked' : ''}\n                                       ${isLocked ? 'disabled' : ''}>\n                            <label class=\"form-check-label\" for=\"field_${field.id}_${index}\">\n                                    ${option}\n                                </label>\n                        </div>\n                        `).join('')}\n                    </div>\n                `;\n                break;\n        }\n        \n        fieldHtml += `\n                </div>\n            </div>\n        `;\n        \n        return fieldHtml;\n    }\n    \n    // Show user avatars in a Google-style way\n    function renderUserAvatar(user, isEditing = false) {\n        const statusClass = isEditing ? 'status-editing' : 'status-online';\n        return `\n            <div class=\"d-flex align-items-center mb-2\" data-user-id=\"${user.id}\">\n                <div class=\"user-avatar me-2\">${user.username.charAt(0).toUpperCase()}</div>\n                <div class=\"flex-grow-1\">\n                    <div class=\"d-flex align-items-center\">\n                        <span class=\"status-indicator ${statusClass}\"></span>\n                        <span class=\"small fw-medium\">${user.username}</span>\n                    </div>\n                    <div class=\"text-muted\" style=\"font-size: 11px;\">\n                        ${isEditing ? 'Currently editing' : 'Active'}\n                    </div>\n                </div>\n            </div>\n        `;\n    }\n    \n    // Mobile user avatar rendering\n    function renderMobileUserAvatar(user, isEditing = false) {\n        const statusClass = isEditing ? 'status-editing' : 'status-online';\n        return `\n            <div class=\"user-avatar\" \n                 data-user-id=\"${user.id}\" \n                 title=\"${user.username} - ${isEditing ? 'Currently editing' : 'Active'}\"\n                 style=\"position: relative;\">\n                ${user.username.charAt(0).toUpperCase()}\n                \n                <span class=\"status-indicator ${statusClass}\" \n                      style=\"position: absolute; bottom: -2px; right: -2px; border: 1px solid white;\"></span>\n            </div>\n        `;\n    }\n    \n    // Option builder functionality\n    window.optionBuilders = {};\n    \n    function createOptionBuilder(containerId, initialOptions = []) {\n        const container = document.getElementById(containerId);\n        if (!container) return;\n        \n        const options = initialOptions.length > 0 ? initialOptions : ['Option 1'];\n        let optionCounter = options.length;\n        \n        function renderOptions() {\n            container.innerHTML = `\n            <div class=\"option-builder\">\n                <div class=\"mb-3\">\n                    <label class=\"form-label small text-muted mb-2\">Options</label>\n                    <div class=\"option-list\" id=\"option-list-${containerId}\">\n                            ${options.map((option, index) => `\n                                \n                        <div class=\"option-item\" data-index=\"${index}\">\n                            <div class=\"option-drag-handle\">\n                                <i class=\"fas fa-grip-vertical\"></i>\n                            </div>\n                            <div class=\"option-input-wrapper\">\n                                <input type=\"text\" \n                                               class=\"option-input\" \n                                               value=\"${option}\" \n                                               placeholder=\"Enter option text...\"\n                                               onchange=\"updateOption('${containerId}', ${index}, this.value)\"\n                                               onkeydown=\"handleOptionKeydown(event, '${containerId}', ${index})\">\n                                    \n                            </div>\n                                    ${options.length > 1 ? `\n                            <button type=\"button\" \n                                                class=\"option-remove\" \n                                                onclick=\"removeOption('${containerId}', ${index})\"\n                                                title=\"Remove option\">\n                                <i class=\"fas fa-times\"></i>\n                            </button>\n                                    ` : `\n                            <div class=\"option-remove-placeholder\"></div>\n                                    `}\n                        </div>\n                            `).join('')}\n                    </div>\n                    <button type=\"button\" \n                                class=\"option-add\" \n                                onclick=\"addOption('${containerId}')\"\n                                title=\"Add new option\">\n                        <i class=\"fas fa-plus\"></i>\n                        <span>Add option</span>\n                    </button>\n                </div>\n            </div>\n            `;\n            \n            // Initialize drag and drop for options\n            initializeOptionSorting(containerId);\n        }\n        \n        window.updateOption = function(builderId, index, value) {\n            if (window.optionBuilders[builderId]) {\n                window.optionBuilders[builderId].options[index] = value;\n                window.optionBuilders[builderId].updateHiddenInput();\n            }\n        };\n        \n        window.removeOption = function(builderId, index) {\n            if (window.optionBuilders[builderId] && window.optionBuilders[builderId].options.length > 1) {\n                window.optionBuilders[builderId].options.splice(index, 1);\n                window.optionBuilders[builderId].renderOptions();\n                window.optionBuilders[builderId].updateHiddenInput();\n            }\n        };\n        \n        window.addOption = function(builderId) {\n            if (window.optionBuilders[builderId]) {\n                const builder = window.optionBuilders[builderId];\n                builder.optionCounter++;\n                builder.options.push(`Option ${builder.optionCounter}`);\n                builder.renderOptions();\n                \n                // Focus on the new input\n                setTimeout(() => {\n                    const inputs = document.querySelectorAll(`#${builderId} .option-input`);\n                    const newInput = inputs[inputs.length - 1];\n                    if (newInput) {\n                        newInput.focus();\n                        newInput.select();\n                    }\n                }, 100);\n                \n                builder.updateHiddenInput();\n            }\n        };\n        \n        window.handleOptionKeydown = function(event, builderId, index) {\n            if (event.key === 'Enter') {\n                event.preventDefault();\n                addOption(builderId);\n            } else if (event.key === 'Backspace' && event.target.value === '' && window.optionBuilders[builderId].options.length > 1) {\n                event.preventDefault();\n                removeOption(builderId, index);\n                // Focus on previous input if available\n                setTimeout(() => {\n                    const inputs = document.querySelectorAll(`#${builderId} .option-input`);\n                    const prevInput = inputs[Math.max(0, index - 1)];\n                    if (prevInput) {\n                        prevInput.focus();\n                    }\n                }, 100);\n            }\n        };\n        \n        function updateHiddenInput() {\n            const hiddenInput = document.querySelector('[name=\"options_text\"]');\n            if (hiddenInput) {\n                hiddenInput.value = options.filter(opt => opt.trim()).join('\\n');\n            }\n        }\n        \n        function initializeOptionSorting(builderId) {\n            const optionList = document.getElementById(`option-list-${builderId}`);\n            if (optionList && window.Sortable) {\n                new Sortable(optionList, {\n                    handle: '.option-drag-handle',\n                    animation: 150,\n                    ghostClass: 'option-dragging',\n                    onEnd: function(evt) {\n                        const builder = window.optionBuilders[builderId];\n                        if (builder) {\n                            // Reorder the options array\n                            const movedOption = builder.options.splice(evt.oldIndex, 1)[0];\n                            builder.options.splice(evt.newIndex, 0, movedOption);\n                            builder.updateHiddenInput();\n                        }\n                    }\n                });\n            }\n        }\n        \n        renderOptions();\n        updateHiddenInput();\n        \n        window.optionBuilders[containerId] = {\n            options,\n            optionCounter,\n            renderOptions,\n            updateHiddenInput\n        };\n    }\n    \n    // Field type selector functionality\n    function createFieldTypeSelector(containerId, selectedType = '') {\n        const container = document.getElementById(containerId);\n        if (!container) return;\n        \n        const fieldTypes = [\n            { value: 'text', label: 'Short answer', icon: 'fas fa-font', description: 'Single line text input' },\n            { value: 'textarea', label: 'Paragraph', icon: 'fas fa-align-left', description: 'Multi-line text input' },\n            { value: 'radio', label: 'Multiple choice', icon: 'fas fa-circle-dot', description: 'Select one option' },\n            { value: 'checkbox', label: 'Checkboxes', icon: 'fas fa-check-square', description: 'Select multiple options' },\n            { value: 'dropdown', label: 'Dropdown', icon: 'fas fa-caret-down', description: 'Select from dropdown list' },\n            { value: 'number', label: 'Number', icon: 'fas fa-hashtag', description: 'Numeric input' },\n            { value: 'email', label: 'Email', icon: 'fas fa-envelope', description: 'Email address input' },\n            { value: 'date', label: 'Date', icon: 'fas fa-calendar-alt', description: 'Date picker input' }\n        ];\n        \n        container.innerHTML = `\n            <div class=\"field-type-grid\">\n                ${fieldTypes.map(type => `\n                    \n                <div class=\"field-type-option ${selectedType === type.value ? 'selected' : ''}\" \n                         data-type=\"${type.value}\"\n                         onclick=\"selectFieldType('${type.value}')\"\n                         title=\"${type.description}\">\n                    <i class=\"${type.icon}\"></i>\n                    <span>${type.label}</span>\n                </div>\n                `).join('')}\n            </div>\n        `;\n        \n        window.selectFieldType = function(type) {\n            // Update visual selection\n            container.querySelectorAll('.field-type-option').forEach(option => {\n                option.classList.toggle('selected', option.dataset.type === type);\n            });\n            \n            // Update hidden select\n            const hiddenSelect = document.querySelector('[name=\"field_type\"]');\n            if (hiddenSelect) {\n                hiddenSelect.value = type;\n            }\n            \n            // Show/hide options builder based on field type\n            const optionsContainer = document.getElementById('options-builder');\n            const needsOptions = ['radio', 'checkbox', 'dropdown'].includes(type);\n            if (optionsContainer) {\n                optionsContainer.style.display = needsOptions ? 'block' : 'none';\n                \n                // Initialize or update option builder if needed\n                if (needsOptions) {\n                    const builderContainer = document.getElementById('options-container');\n                    if (builderContainer && !window.optionBuilders['options-container']) {\n                        createOptionBuilder('options-container');\n                    }\n                }\n            }\n        };\n        \n        // Auto-select first option if none selected\n        if (!selectedType) {\n            selectFieldType('text');\n        }\n    }\n        </script>\n    </body>\n</html>"
				}
			]
		},
		{
			"name": "Login",
			"request": {
				"method": "GET",
				"header": []
			},
			"response": [
				{
					"name": "Test User 1",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"type": "text"
							},
							{
								"key": "X-CSRFToken",
								"value": "{{csrf_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "username",
									"value": "testuser1",
									"type": "text"
								},
								{
									"key": "password",
									"value": "testpass123",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{local_url}}/accounts/login/",
							"host": [
								"{{local_url}}"
							],
							"path": [
								"accounts",
								"login",
								""
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "html",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/html; charset=utf-8"
						},
						{
							"key": "Expires",
							"value": "Sat, 14 Jun 2025 08:17:38 GMT"
						},
						{
							"key": "Cache-Control",
							"value": "max-age=0, no-cache, no-store, must-revalidate, private"
						},
						{
							"key": "Vary",
							"value": "Cookie"
						},
						{
							"key": "X-Frame-Options",
							"value": "DENY"
						},
						{
							"key": "Content-Length",
							"value": "58387"
						},
						{
							"key": "X-Content-Type-Options",
							"value": "nosniff"
						},
						{
							"key": "Referrer-Policy",
							"value": "same-origin"
						},
						{
							"key": "Cross-Origin-Opener-Policy",
							"value": "same-origin"
						},
						{
							"key": "Set-Cookie",
							"value": "csrftoken=pS71uVLEU6GUXotyBOOShxFpiGnS3SJL; expires=Sat, 13 Jun 2026 08:17:38 GMT; Max-Age=31449600; Path=/; SameSite=Lax"
						},
						{
							"key": "Server",
							"value": "daphne"
						}
					],
					"cookie": [],
					"body": "<!DOCTYPE html>\n<html lang=\"en\">\n    <head>\n        <meta charset=\"UTF-8\">\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n        <title>Sign in - CollabForms</title>\n        <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css\" rel=\"stylesheet\">\n        <link href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css\" rel=\"stylesheet\">\n        <link href=\"https://fonts.googleapis.com/css2?family=Google+Sans:wght@300;400;500;600;700&family=Roboto:wght@300;400;500;600;700&display=swap\" rel=\"stylesheet\">\n        <style>\n        :root {\n            /* Google Forms exact color palette */\n            --primary-color: #1a73e8;\n            --primary-hover: #1557b0;\n            --secondary-color: #5f6368;\n            --text-primary: #202124;\n            --text-secondary: #5f6368;\n            --text-muted: #9aa0a6;\n            --border-color: #dadce0;\n            --border-focus: #4285f4;\n            --background-primary: #ffffff;\n            --background-secondary: #f1f3f4;\n            --background-tertiary: #e8eaed;\n            --surface-color: #ffffff;\n            --surface-raised: #ffffff;\n            --shadow-light: 0 1px 2px 0 rgba(60,64,67,.3), 0 1px 3px 1px rgba(60,64,67,.15);\n            --shadow-medium: 0 1px 3px 0 rgba(60,64,67,.3), 0 4px 8px 3px rgba(60,64,67,.15);\n            --shadow-heavy: 0 2px 6px 2px rgba(60,64,67,.15), 0 8px 24px 4px rgba(60,64,67,.15);\n            --success-color: #34a853;\n            --warning-color: #fbbc04;\n            --error-color: #ea4335;\n            --purple-accent: #9c27b0;\n            --forms-purple: #673ab7;\n        }\n        \n        * {\n            font-family: 'Google Sans', 'Roboto', -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif;\n        }\n        \n        body {\n            background-color: var(--background-secondary);\n            color: var(--text-primary);\n            line-height: 1.6;\n            font-size: 14px;\n            margin: 0;\n            padding: 0;\n        }\n        \n        /* Google Forms-style header */\n        .navbar {\n            background: var(--surface-color) !important;\n            border-bottom: 1px solid var(--border-color);\n            box-shadow: var(--shadow-light);\n            min-height: 64px;\n            padding: 0;\n        }\n        \n        .navbar-brand {\n            font-family: 'Google Sans', sans-serif;\n            font-weight: 500;\n            color: var(--text-primary) !important;\n            font-size: 22px;\n            padding: 0;\n            margin: 0;\n        }\n        \n        .navbar-brand i {\n            color: var(--forms-purple);\n            margin-right: 8px;\n        }\n        \n        /* Google Forms-style cards */\n        .form-card {\n            background: var(--surface-color);\n            border: 1px solid var(--border-color);\n            border-radius: 8px;\n            box-shadow: var(--shadow-light);\n            transition: all 0.2s cubic-bezier(0.4,0,0.2,1);\n            overflow: hidden;\n        }\n        \n        .form-card:hover {\n            box-shadow: var(--shadow-medium);\n        }\n        \n        .form-card-header {\n            border-top: 10px solid var(--forms-purple);\n            padding: 24px 24px 0 24px;\n            background: var(--surface-color);\n        }\n        \n        .form-card-body {\n            padding: 24px;\n        }\n        \n        /* Google Forms-style buttons */\n        .btn-google-primary {\n            background-color: var(--primary-color);\n            border: none;\n            color: white;\n            border-radius: 4px;\n            font-weight: 500;\n            font-size: 14px;\n            padding: 8px 24px;\n            height: 40px;\n            transition: all 0.2s cubic-bezier(0.4,0,0.2,1);\n            text-transform: none;\n            box-shadow: none;\n        }\n        \n        .btn-google-primary:hover {\n            background-color: var(--primary-hover);\n            color: white;\n            box-shadow: 0 1px 2px 0 rgba(60,64,67,.3), 0 1px 3px 1px rgba(60,64,67,.15);\n        }\n        \n        .btn-google-secondary {\n            background-color: transparent;\n            border: 1px solid var(--border-color);\n            color: var(--primary-color);\n            border-radius: 4px;\n            font-weight: 500;\n            font-size: 14px;\n            padding: 8px 24px;\n            height: 40px;\n            transition: all 0.2s cubic-bezier(0.4,0,0.2,1);\n            text-transform: none;\n        }\n        \n        .btn-google-secondary:hover {\n            background-color: rgba(26, 115, 232, 0.04);\n            border-color: var(--primary-color);\n            color: var(--primary-color);\n        }\n        \n        .btn-google-text {\n            background: transparent;\n            border: none;\n            color: var(--primary-color);\n            font-weight: 500;\n            font-size: 14px;\n            padding: 8px 16px;\n            border-radius: 4px;\n            transition: all 0.2s cubic-bezier(0.4,0,0.2,1);\n        }\n        \n        .btn-google-text:hover {\n            background-color: rgba(26, 115, 232, 0.04);\n            color: var(--primary-color);\n        }\n        \n        /* Google Forms-style form inputs */\n        .form-input-google {\n            border: none;\n            border-bottom: 1px solid var(--border-color);\n            border-radius: 4px 4px 0 0;\n            background-color: #f8f9fa;\n            padding: 16px 16px 6px 16px;\n            font-size: 16px;\n            line-height: 1.5;\n            transition: all 0.2s cubic-bezier(0.4,0,0.2,1);\n            width: 100%;\n        }\n        \n        .form-input-google:focus {\n            outline: none;\n            border-bottom: 2px solid var(--primary-color);\n            background-color: #fafbfc;\n            box-shadow: 0 2px 4px rgba(26, 115, 232, 0.1);\n        }\n        \n        .form-floating-google {\n            position: relative;\n        }\n        \n        .form-floating-google > .form-input-google {\n            padding-top: 20px;\n            padding-bottom: 4px;\n        }\n        \n        .form-floating-google > label {\n            position: absolute;\n            top: 0;\n            left: 16px;\n            padding-top: 16px;\n            color: var(--text-secondary);\n            font-size: 16px;\n            font-weight: 400;\n            transition: all 0.2s cubic-bezier(0.4,0,0.2,1);\n            pointer-events: none;\n            transform-origin: 0 0;\n        }\n        \n        .form-floating-google > .form-input-google:focus ~ label,\n        .form-floating-google > .form-input-google:not(:placeholder-shown) ~ label {\n            transform: translateY(-50%) scale(0.75);\n            color: var(--primary-color);\n            padding-top: 4px;\n        }\n        \n        /* User avatar */\n        .user-avatar {\n            width: 32px;\n            height: 32px;\n            border-radius: 50%;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            color: white;\n            font-weight: 500;\n            font-size: 14px;\n            background: linear-gradient(135deg, var(--primary-color), var(--forms-purple));\n        }\n        \n        /* Connection status */\n        .connection-status {\n            position: fixed;\n            bottom: 24px;\n            right: 24px;\n            z-index: 1050;\n            border-radius: 4px;\n            padding: 8px 16px;\n            font-size: 14px;\n            font-weight: 500;\n            box-shadow: var(--shadow-medium);\n        }\n        \n        .connection-connected {\n            background-color: var(--success-color);\n            color: white;\n        }\n        \n        .connection-connecting {\n            background-color: var(--warning-color);\n            color: var(--text-primary);\n        }\n        \n        .connection-disconnected {\n            background-color: var(--error-color);\n            color: white;\n        }\n        \n        /* Page layouts */\n        .page-container {\n            max-width: 768px;\n            margin: 0 auto;\n            padding: 0 16px;\n        }\n        \n        .page-container-wide {\n            max-width: 1200px;\n            margin: 0 auto;\n            padding: 0 16px;\n        }\n        \n        .auth-container {\n            min-height: 100vh;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n            padding: 24px;\n        }\n        \n        .auth-card {\n            background: var(--surface-color);\n            border-radius: 12px;\n            box-shadow: var(--shadow-heavy);\n            width: 100%;\n            max-width: 420px;\n            overflow: hidden;\n        }\n        \n        .auth-header {\n            text-align: center;\n            padding: 48px 48px 24px 48px;\n        }\n        \n        .auth-body {\n            padding: 0 48px 48px 48px;\n        }\n        \n        .auth-logo {\n            color: var(--forms-purple);\n            font-size: 48px;\n            margin-bottom: 24px;\n        }\n        \n        .auth-title {\n            font-size: 24px;\n            font-weight: 400;\n            color: var(--text-primary);\n            margin-bottom: 8px;\n        }\n        \n        .auth-subtitle {\n            font-size: 16px;\n            color: var(--text-secondary);\n            margin-bottom: 0;\n        }\n        \n        /* Dropdown menus */\n        .dropdown-menu {\n            border: 1px solid var(--border-color);\n            border-radius: 8px;\n            box-shadow: var(--shadow-medium);\n            padding: 8px 0;\n            min-width: 200px;\n        }\n        \n        .dropdown-item {\n            padding: 12px 16px;\n            font-size: 14px;\n            color: var(--text-primary);\n            border: none;\n            background: none;\n            transition: background-color 0.2s cubic-bezier(0.4,0,0.2,1);\n        }\n        \n        .dropdown-item:hover {\n            background-color: var(--background-tertiary);\n            color: var(--text-primary);\n        }\n        \n        .dropdown-divider {\n            margin: 8px 0;\n            border-top: 1px solid var(--border-color);\n        }\n        \n        /* Alert messages */\n        .alert {\n            border-radius: 4px;\n            border: none;\n            font-size: 14px;\n            padding: 16px;\n            margin-bottom: 16px;\n        }\n        \n        .alert-success {\n            background-color: #e8f5e8;\n            color: #1e7e34;\n        }\n        \n        .alert-warning {\n            background-color: #fff3cd;\n            color: #856404;\n        }\n        \n        .alert-danger {\n            background-color: #f8d7da;\n            color: #721c24;\n        }\n        \n        .alert-info {\n            background-color: #d1ecf1;\n            color: #0c5460;\n        }\n        \n        /* Loading animations */\n        .loading-spinner {\n            display: inline-block;\n            width: 16px;\n            height: 16px;\n            border: 2px solid var(--border-color);\n            border-radius: 50%;\n            border-top-color: var(--primary-color);\n            animation: spin 1s linear infinite;\n        }\n        \n        @keyframes spin {\n            to { transform: rotate(360deg); }\n        }\n        \n        .fade-in {\n            animation: fadeIn 0.3s cubic-bezier(0.4,0,0.2,1);\n        }\n        \n        @keyframes fadeIn {\n            from { opacity: 0; transform: translateY(8px); }\n            to { opacity: 1; transform: translateY(0); }\n        }\n        \n        /* Option builder styles */\n        .option-builder {\n            width: 100%;\n        }\n        \n        .option-item {\n            display: flex;\n            align-items: center;\n            gap: 8px;\n            margin-bottom: 8px;\n            padding: 8px;\n            border: 1px solid var(--border-color);\n            border-radius: 4px;\n            background-color: var(--surface-color);\n            transition: all 0.2s cubic-bezier(0.4,0,0.2,1);\n        }\n        \n        .option-item:hover {\n            border-color: var(--primary-color);\n        }\n        \n        .option-item .field-handle {\n            color: var(--text-muted);\n            cursor: grab;\n            padding: 4px;\n        }\n        \n        .option-item .field-handle:active {\n            cursor: grabbing;\n        }\n        \n        .option-input {\n            flex: 1;\n            border: none;\n            outline: none;\n            background: transparent;\n            font-size: 14px;\n            color: var(--text-primary);\n            padding: 4px 0;\n        }\n        \n        .option-input::placeholder {\n            color: var(--text-muted);\n        }\n        \n        .option-remove {\n            background: transparent;\n            border: none;\n            color: var(--text-muted);\n            padding: 4px;\n            border-radius: 3px;\n            transition: all 0.2s cubic-bezier(0.4,0,0.2,1);\n            cursor: pointer;\n        }\n        \n        .option-remove:hover {\n            background-color: var(--error-color);\n            color: white;\n        }\n        \n        .option-add {\n            display: flex;\n            align-items: center;\n            gap: 8px;\n            width: 100%;\n            background: transparent;\n            border: 1px dashed var(--border-color);\n            border-radius: 4px;\n            padding: 12px;\n            color: var(--primary-color);\n            font-size: 14px;\n            font-weight: 500;\n            transition: all 0.2s cubic-bezier(0.4,0,0.2,1);\n            cursor: pointer;\n            margin-top: 4px;\n        }\n        \n        .option-add:hover {\n            background-color: rgba(26, 115, 232, 0.04);\n            border-color: var(--primary-color);\n        }\n        \n        .option-add i {\n            font-size: 12px;\n        }\n        \n        /* Field type selector styles */\n        .field-type-grid {\n            display: grid;\n            grid-template-columns: repeat(auto-fit, minmax(140px, 1fr));\n            gap: 8px;\n            margin-bottom: 16px;\n        }\n        \n        .field-type-option {\n            display: flex;\n            flex-direction: column;\n            align-items: center;\n            gap: 6px;\n            padding: 16px 8px;\n            border: 1px solid var(--border-color);\n            border-radius: 6px;\n            background-color: var(--surface-color);\n            cursor: pointer;\n            transition: all 0.2s cubic-bezier(0.4,0,0.2,1);\n            text-align: center;\n            position: relative;\n            overflow: hidden;\n        }\n        \n        .field-type-option:hover {\n            border-color: var(--primary-color);\n            background-color: rgba(26, 115, 232, 0.04);\n        }\n        \n        .field-type-option.selected {\n            border-color: var(--primary-color);\n            background-color: rgba(26, 115, 232, 0.08);\n            color: var(--primary-color);\n        }\n        \n        .field-type-option i {\n            font-size: 18px;\n            color: var(--text-secondary);\n            transition: color 0.2s cubic-bezier(0.4,0,0.2,1);\n        }\n        \n        .field-type-option.selected i {\n            color: var(--primary-color);\n        }\n        \n        .field-type-option span {\n            font-size: 12px;\n            font-weight: 500;\n            color: var(--text-primary);\n        }\n        \n        /* Enhanced responsive design */\n        /* Enhanced responsive design for different screen sizes */\n        \n        /* Mobile First - Base styles for small devices */\n        @media (max-width: 575.98px) {\n            .page-container {\n                padding: 0 8px;\n                max-width: 100%;\n            }\n            \n            .page-container-wide {\n                padding: 0 8px;\n                max-width: 100%;\n            }\n            \n            .auth-container {\n                padding: 16px;\n                min-height: 100vh;\n            }\n            \n            .auth-header {\n                padding: 32px 20px 20px 20px;\n            }\n            \n            .auth-body {\n                padding: 0 20px 32px 20px;\n            }\n            \n            .form-group-google {\n                margin-bottom: 20px;\n            }\n            \n            .navbar-brand {\n                font-size: 18px;\n            }\n            \n            .form-card-body {\n                padding: 16px;\n            }\n            \n            .form-card-header {\n                padding: 16px 16px 0 16px;\n            }\n            \n            .field-type-grid {\n                grid-template-columns: repeat(2, 1fr);\n                gap: 6px;\n            }\n            \n            .field-type-option {\n                padding: 12px 6px;\n                min-height: 70px;\n            }\n            \n            .field-type-option i {\n                font-size: 16px;\n                margin-bottom: 4px;\n            }\n            \n            .field-type-option span {\n                font-size: 10px;\n                line-height: 1.2;\n            }\n            \n            .page-header .d-flex {\n                flex-direction: column;\n                align-items: stretch !important;\n                gap: 12px;\n            }\n            \n            .btn-group {\n                width: 100%;\n                flex-direction: column;\n            }\n            \n            .btn-group .btn {\n                flex: 1;\n                margin-left: 0;\n                margin-bottom: 4px;\n            }\n            \n            .option-item {\n                flex-wrap: wrap;\n                gap: 6px;\n            }\n            \n            .option-input-wrapper {\n                flex: 1;\n                min-width: 200px;\n                margin: 0;\n            }\n        }\n        \n        /* Small devices - tablets portrait */\n        @media (min-width: 576px) and (max-width: 767.98px) {\n            .page-container {\n                padding: 0 12px;\n                max-width: 540px;\n            }\n            \n            .page-container-wide {\n                padding: 0 12px;\n                max-width: 720px;\n            }\n            \n            .auth-container {\n                padding: 20px;\n            }\n            \n            .auth-header {\n                padding: 40px 28px 20px 28px;\n            }\n            \n            .auth-body {\n                padding: 0 28px 40px 28px;\n            }\n            \n            .form-group-google {\n                margin-bottom: 22px;\n            }\n            \n            .field-type-grid {\n                grid-template-columns: repeat(3, 1fr);\n                gap: 8px;\n            }\n            \n            .field-type-option {\n                padding: 14px 8px;\n                min-height: 80px;\n            }\n            \n            .field-type-option i {\n                font-size: 18px;\n                margin-bottom: 6px;\n            }\n            \n            .field-type-option span {\n                font-size: 11px;\n            }\n        }\n        \n        /* Medium devices - tablets landscape */\n        @media (min-width: 768px) and (max-width: 991.98px) {\n            .page-container {\n                padding: 0 16px;\n                max-width: 720px;\n            }\n            \n            .page-container-wide {\n                padding: 0 16px;\n                max-width: 960px;\n            }\n            \n            .form-card-body {\n                padding: 20px;\n            }\n            \n            .form-card-header {\n                padding: 20px 20px 0 20px;\n            }\n            \n            .field-type-grid {\n                grid-template-columns: repeat(4, 1fr);\n                gap: 8px;\n            }\n            \n            .field-type-option {\n                padding: 16px 10px;\n                min-height: 85px;\n            }\n            \n            .field-type-option i {\n                font-size: 20px;\n                margin-bottom: 8px;\n            }\n            \n            .field-type-option span {\n                font-size: 12px;\n            }\n        }\n        \n        /* Large devices - small laptops */\n        @media (min-width: 992px) and (max-width: 1199.98px) {\n            .page-container {\n                padding: 0 20px;\n                max-width: 960px;\n            }\n            \n            .page-container-wide {\n                padding: 0 20px;\n                max-width: 1140px;\n            }\n            \n            .field-type-grid {\n                grid-template-columns: repeat(4, 1fr);\n                gap: 10px;\n            }\n            \n            .field-type-option {\n                padding: 18px 12px;\n                min-height: 90px;\n            }\n            \n            .field-type-option i {\n                font-size: 22px;\n                margin-bottom: 8px;\n            }\n            \n            .field-type-option span {\n                font-size: 13px;\n            }\n        }\n        \n        /* Extra large devices - large laptops and desktops */\n        @media (min-width: 1200px) and (max-width: 1399.98px) {\n            .page-container {\n                padding: 0 24px;\n                max-width: 1140px;\n            }\n            \n            .page-container-wide {\n                padding: 0 24px;\n                max-width: 1320px;\n            }\n            \n            .field-type-grid {\n                grid-template-columns: repeat(4, 1fr);\n                gap: 12px;\n            }\n            \n            .field-type-option {\n                padding: 20px 14px;\n                min-height: 95px;\n            }\n            \n            .field-type-option i {\n                font-size: 24px;\n                margin-bottom: 10px;\n            }\n            \n            .field-type-option span {\n                font-size: 14px;\n            }\n        }\n        \n        /* Extra extra large devices - large monitors */\n        @media (min-width: 1400px) {\n            .page-container {\n                padding: 0 30px;\n                max-width: 1200px;\n            }\n            \n            .page-container-wide {\n                padding: 0 30px;\n                max-width: 1600px;\n            }\n            \n            .field-type-grid {\n                grid-template-columns: repeat(4, 1fr);\n                gap: 15px;\n            }\n            \n            .field-type-option {\n                padding: 22px 16px;\n                min-height: 100px;\n            }\n            \n            .field-type-option i {\n                font-size: 26px;\n                margin-bottom: 12px;\n            }\n            \n            .field-type-option span {\n                font-size: 15px;\n            }\n        }\n        \n        /* Laptop-specific fixes for alignment issues */\n        @media (min-width: 1024px) and (max-width: 1440px) and (orientation: landscape) {\n            /* Common laptop resolution fixes */\n            .row.g-4 {\n                --bs-gutter-x: 2rem;\n                --bs-gutter-y: 2rem;\n            }\n            \n            .col-xl-8, .col-lg-7 {\n                flex: 0 0 auto;\n                width: 66.66666667%;\n            }\n            \n            .col-xl-4, .col-lg-5 {\n                flex: 0 0 auto;\n                width: 33.33333333%;\n            }\n            \n            .sticky-form-panel {\n                position: sticky;\n                top: 24px;\n                height: fit-content;\n                max-height: calc(100vh - 48px);\n                overflow-y: auto;\n            }\n            \n            /* Better spacing for form elements */\n            .form-group-google {\n                margin-bottom: 1.5rem;\n            }\n            \n            .option-builder {\n                max-height: 300px;\n                overflow-y: auto;\n                border: 1px solid var(--border-color);\n                border-radius: 6px;\n                padding: 12px;\n            }\n            \n            /* Improved field item layout */\n            .field-item {\n                margin-bottom: 1rem;\n                padding: 1.25rem;\n            }\n            \n            .field-item .d-flex {\n                align-items: flex-start;\n                gap: 1rem;\n            }\n            \n            /* Better button alignment */\n            .d-flex.gap-2 {\n                gap: 0.75rem !important;\n            }\n            \n            .d-flex.gap-3 {\n                gap: 1rem !important;\n            }\n        }\n        \n        /* Ultra-wide screen optimizations */\n        @media (min-width: 1920px) {\n            .page-container-wide {\n                max-width: 1800px;\n            }\n            \n            .row.g-4 {\n                --bs-gutter-x: 3rem;\n            }\n            \n            .form-card {\n                box-shadow: var(--shadow-medium);\n            }\n        }\n        \n        /* Height-based responsive adjustments */\n        @media (max-height: 700px) and (min-width: 992px) {\n            .sticky-form-panel {\n                position: static;\n            }\n            \n            .form-card-body {\n                padding: 16px;\n            }\n            \n            .form-group-google {\n                margin-bottom: 1rem;\n            }\n        }\n        \n        /* High DPI screen adjustments */\n        @media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi) {\n            .form-card {\n                border-width: 0.5px;\n            }\n            \n            .option-item {\n                border-width: 0.5px;\n            }\n            \n            .field-type-option {\n                border-width: 0.5px;\n            }\n        }\n        \n        /* Additional utility classes for better alignment */\n        .status-indicator {\n            width: 8px;\n            height: 8px;\n            border-radius: 50%;\n            margin-right: 6px;\n            flex-shrink: 0;\n        }\n        \n        .status-online {\n            background-color: var(--success-color);\n        }\n        \n        .status-editing {\n            background-color: var(--warning-color);\n            animation: pulse 2s infinite;\n        }\n        \n        @keyframes pulse {\n            0% { opacity: 1; }\n            50% { opacity: 0.5; }\n            100% { opacity: 1; }\n        }\n        \n        /* Field handle for drag and drop */\n        .field-handle {\n            color: var(--text-muted);\n            cursor: grab;\n            padding: 4px;\n            transition: color 0.2s cubic-bezier(0.4,0,0.2,1);\n        }\n        \n        .field-handle:hover {\n            color: var(--text-secondary);\n        }\n        \n        .field-handle:active {\n            cursor: grabbing;\n        }\n        \n        /* Field item styles */\n        .field-item {\n            transition: all 0.2s cubic-bezier(0.4,0,0.2,1);\n        }\n        \n        .field-item:hover {\n            box-shadow: var(--shadow-light);\n        }\n        \n        .field-item.dragging {\n            opacity: 0.7;\n            transform: rotate(5deg);\n        }\n        \n        /* Better form input focus states */\n        .form-input-google:focus {\n            outline: none;\n            border-bottom: 2px solid var(--primary-color);\n            background-color: #fafbfc;\n            box-shadow: 0 2px 4px rgba(26, 115, 232, 0.1);\n        }\n        \n        /* Improved checkbox and radio styles */\n        .form-check-input:checked {\n            background-color: var(--primary-color);\n            border-color: var(--primary-color);\n        }\n        \n        .form-check-input:focus {\n            border-color: var(--primary-color);\n            outline: none;\n            box-shadow: 0 0 0 0.25rem rgba(26, 115, 232, 0.25);\n        }\n        \n        /* Page header improvements */\n        .page-header {\n            background-color: var(--surface-color);\n            border-bottom: 1px solid var(--border-color);\n            margin-bottom: 0;\n        }\n        \n        /* Better button spacing in groups */\n        .btn-group .btn,\n        .d-flex .btn + .btn {\n            margin-left: 8px;\n        }\n        \n        /* Better form field error states */\n        .form-input-google.is-invalid {\n            border-bottom-color: var(--error-color);\n        }\n        \n        .form-input-google.is-invalid:focus {\n            border-bottom-color: var(--error-color);\n            box-shadow: 0 2px 4px rgba(234, 67, 53, 0.1);\n        }\n        \n        /* Consistent border radius */\n        .rounded {\n            border-radius: 6px !important;\n        }\n        \n        .rounded-pill {\n            border-radius: 16px !important;\n        }\n        \n        /* Enhanced option builder styles */\n        .option-list {\n            margin-bottom: 12px;\n        }\n        \n        .option-drag-handle {\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            width: 24px;\n            height: 24px;\n            color: var(--text-muted);\n            cursor: grab;\n            border-radius: 3px;\n            transition: all 0.2s cubic-bezier(0.4,0,0.2,1);\n        }\n        \n        .option-drag-handle:hover {\n            background-color: var(--background-tertiary);\n            color: var(--text-secondary);\n        }\n        \n        .option-drag-handle:active {\n            cursor: grabbing;\n        }\n        \n        .option-input-wrapper {\n            flex: 1;\n            margin: 0 8px;\n        }\n        \n        .option-remove-placeholder {\n            width: 24px;\n            height: 24px;\n        }\n        \n        .option-dragging {\n            opacity: 0.5;\n            transform: rotate(2deg);\n        }\n        \n        .option-item:last-child .option-input {\n            border-bottom-color: transparent;\n        }\n        \n        .option-item .option-input:focus {\n            border-bottom-color: var(--primary-color);\n        }\n        \n        /* Field type option hover effects */\n        .field-type-option {\n            position: relative;\n            overflow: hidden;\n        }\n        \n        .field-type-option::before {\n            content: '';\n            position: absolute;\n            top: 0;\n            left: -100%;\n            width: 100%;\n            height: 100%;\n            background: linear-gradient(90deg, transparent, rgba(26, 115, 232, 0.1), transparent);\n            transition: left 0.5s ease;\n        }\n        \n        .field-type-option:hover::before {\n            left: 100%;\n        }\n        \n        /* Form validation styles */\n        .is-invalid .option-input {\n            border-bottom-color: var(--error-color);\n        }\n        \n        .invalid-feedback {\n            color: var(--error-color);\n            font-size: 12px;\n            margin-top: 4px;\n        }\n        \n        /* Loading state for option builder */\n        .option-builder.loading {\n            opacity: 0.6;\n            pointer-events: none;\n        }\n        \n        .option-builder.loading::after {\n            content: '';\n            position: absolute;\n            top: 50%;\n            left: 50%;\n            transform: translate(-50%, -50%);\n            width: 20px;\n            height: 20px;\n            border: 2px solid var(--border-color);\n            border-top-color: var(--primary-color);\n            border-radius: 50%;\n            animation: spin 1s linear infinite;\n        }\n        \n        /* Dashboard specific responsive improvements */\n        .dashboard-stats {\n            margin-bottom: 2rem;\n        }\n        \n        .dashboard-stats .form-card {\n            transition: all 0.3s cubic-bezier(0.4,0,0.2,1);\n        }\n        \n        .dashboard-stats .form-card:hover {\n            transform: translateY(-2px);\n            box-shadow: var(--shadow-medium);\n        }\n        \n        /* Forms grid responsive layout */\n        @media (min-width: 1200px) {\n            .forms-grid .col-xl-4 {\n                flex: 0 0 auto;\n                width: 33.333333%;\n            }\n        }\n        \n        @media (min-width: 992px) and (max-width: 1199.98px) {\n            .forms-grid .col-lg-6 {\n                flex: 0 0 auto;\n                width: 50%;\n            }\n        }\n        \n        @media (max-width: 991.98px) {\n            .forms-grid .col-md-12 {\n                flex: 0 0 auto;\n                width: 100%;\n            }\n        }\n        \n        /* Better button groups on mobile */\n        @media (max-width: 767.98px) {\n            .btn-group-mobile {\n                display: flex;\n                flex-direction: column;\n                gap: 8px;\n                width: 100%;\n            }\n            \n            .btn-group-mobile .btn {\n                width: 100%;\n                margin-left: 0;\n            }\n            \n            .page-header .d-flex {\n                flex-direction: column;\n                align-items: stretch !important;\n                gap: 16px;\n            }\n            \n            .page-header .flex-grow-1 {\n                text-align: center;\n            }\n        }\n        \n        /* Form card improvements for different screen sizes */\n        .form-item-card {\n            transition: all 0.2s cubic-bezier(0.4,0,0.2,1);\n            height: 100%;\n            display: flex;\n            flex-direction: column;\n        }\n        \n        .form-item-card:hover {\n            transform: translateY(-1px);\n            box-shadow: var(--shadow-light);\n        }\n        \n        .form-item-card .form-item-content {\n            flex: 1;\n            display: flex;\n            flex-direction: column;\n        }\n        \n        .form-item-card .form-item-footer {\n            margin-top: auto;\n            padding-top: 12px;\n        }\n        \n        /* Enhanced responsiveness for collaboration UI */\n        .collaboration-panel {\n            position: sticky;\n            top: 24px;\n            max-height: calc(100vh - 48px);\n            overflow-y: auto;\n        }\n        \n        @media (max-width: 991.98px) {\n            .collaboration-panel {\n                position: static;\n                max-height: none;\n            }\n        }\n        \n        /* Better form field spacing on different screen sizes */\n        @media (min-width: 768px) and (max-width: 1023.98px) {\n            .form-group-google {\n                margin-bottom: 1.25rem;\n            }\n            \n            .field-type-grid {\n                gap: 8px;\n            }\n            \n            .option-builder {\n                padding: 14px;\n            }\n        }\n        \n        /* Ultra-wide screen optimizations */\n        @media (min-width: 1600px) {\n            .page-container-wide {\n                max-width: 1500px;\n            }\n            \n            .forms-grid {\n                --bs-gutter-x: 2rem;\n            }\n            \n            .dashboard-stats {\n                --bs-gutter-x: 1.5rem;\n            }\n        }\n        \n        /* Print styles */\n        @media print {\n            .page-header,\n            .btn,\n            .dropdown,\n            .connection-status,\n            .navbar {\n                display: none !important;\n            }\n            \n            .form-card {\n                border: 1px solid #ddd !important;\n                box-shadow: none !important;\n                page-break-inside: avoid;\n            }\n            \n            .page-container,\n            .page-container-wide {\n                max-width: none !important;\n                padding: 0 !important;\n            }\n        }\n        \n        /* Google Forms-style form groups */\n        .form-group-google {\n            margin-bottom: 24px;\n            position: relative;\n        }\n        \n        .form-error {\n            color: var(--error-color);\n            font-size: 12px;\n            margin-top: 6px;\n            font-weight: 400;\n        }\n        \n        .form-help {\n            color: var(--text-muted);\n            font-size: 12px;\n            margin-top: 6px;\n            line-height: 1.4;\n        }\n    </style>\n    </head>\n    <body>\n        <nav class=\"navbar navbar-expand-lg\">\n            <div class=\"container-fluid px-4\">\n                <a class=\"navbar-brand d-flex align-items-center\" href=\"/forms/\">\n                    <i class=\"fas fa-poll-h me-2\"></i>\n                CollabForms\n                </a>\n                <div class=\"navbar-nav ms-auto\">\n                    <a class=\"btn btn-google-text me-2\" href=\"/accounts/login/\">\n                        <i class=\"fas fa-sign-in-alt me-1\"></i>Sign in\n                    </a>\n                    <a class=\"btn btn-google-primary\" href=\"/accounts/register/\">\n                        <i class=\"fas fa-user-plus me-1\"></i>Sign up\n                    </a>\n                </div>\n            </div>\n        </nav>\n        <main>\n            <div class=\"auth-container\">\n                <div class=\"auth-card\">\n                    <div class=\"auth-header\">\n                        <div class=\"auth-logo\">\n                            <i class=\"fas fa-poll-h\"></i>\n                        </div>\n                        <h1 class=\"auth-title\">Sign in</h1>\n                        <p class=\"auth-subtitle\">to continue to CollabForms</p>\n                    </div>\n                    <div class=\"auth-body\">\n                        <div class=\"alert alert-danger mb-4\">\n                            <div>Please enter a correct username and password. Note that both fields may be case-sensitive.</div>\n                        </div>\n                        <form method=\"post\" novalidate>\n                            <input type=\"hidden\" name=\"csrfmiddlewaretoken\" value=\"8eG20NNz0DdijLwWobLB7tWxFGPBOSlJnWDTkyo3KzJ26ZPkPPpjeQrMNc2jHAUk\">\n                            <div class=\"form-group-google\">\n                                <div class=\"form-floating-google\">\n                                    <input type=\"text\" \n                               class=\"form-input-google\" \n                               id=\"id_username\" \n                               name=\"username\" \n                               placeholder=\" \"\n                               value=\"testuser1\"\n                               required>\n                                    <label for=\"id_username\">Username</label>\n                                </div>\n                            </div>\n                            <div class=\"form-group-google\">\n                                <div class=\"form-floating-google\">\n                                    <input type=\"password\" \n                               class=\"form-input-google\" \n                               id=\"id_password\" \n                               name=\"password\" \n                               placeholder=\" \"\n                               required>\n                                    <label for=\"id_password\">Password</label>\n                                </div>\n                            </div>\n                            <div class=\"d-flex justify-content-between align-items-center mb-4 mt-2\">\n                                <a href=\"/accounts/register/\" class=\"btn-google-text p-0\">\n                        Create account\n                    </a>\n                                <button type=\"submit\" class=\"btn btn-google-primary\">\n                        Sign in\n                    </button>\n                            </div>\n                        </form>\n                        <div class=\"text-center mt-4\">\n                            <p class=\"text-muted small mb-0\">\n                    New to CollabForms? \n                    \n                                <a href=\"/accounts/register/\" class=\"text-decoration-none\">\n                        Create an account\n                    </a>\n                            </p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </main>\n        <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js\"></script>\n        <script>\n    // Google Forms-style form field rendering\n    function renderFormField(field, value = '', userEditing = null) {\n        const isLocked = userEditing && userEditing.id !== window.currentUserId;\n        const lockClass = isLocked ? 'field-locked' : '';\n        const lockIcon = isLocked ? `\n            <i class=\"fas fa-lock text-warning ms-2\" title=\"Being edited by ${userEditing.username}\"></i>` : '';\n        \n        let fieldHtml = `\n            <div class=\"form-card mb-3 fade-in\" data-field-id=\"${field.id}\">\n                <div class=\"form-card-body\">\n                    <div class=\"d-flex justify-content-between align-items-start mb-3\">\n                        <div>\n                            <label class=\"form-label fw-normal\">${field.label}</label>\n                            ${field.is_required ? '\n                            <span class=\"text-danger ms-1\">*</span>' : ''}\n                            ${lockIcon}\n                        </div>\n                    </div>\n        `;\n        \n        switch(field.field_type) {\n            case 'text':\n            case 'email':\n            case 'url':\n                fieldHtml += `\n                    <div class=\"form-floating-google\">\n                        <input type=\"${field.field_type}\" \n                               class=\"form-input-google ${lockClass}\" \n                               id=\"field_${field.id}\" \n                               name=\"field_${field.id}\" \n                               placeholder=\" \"\n                               value=\"${value}\"\n                               ${field.is_required ? 'required' : ''}\n                               ${isLocked ? 'disabled' : ''}>\n                        <label for=\"field_${field.id}\">Your answer</label>\n                    </div>\n                `;\n                break;\n                \n            case 'date':\n                fieldHtml += `\n                    <div class=\"form-floating-google\">\n                        <input type=\"date\" \n                               class=\"form-input-google ${lockClass}\" \n                               id=\"field_${field.id}\" \n                               name=\"field_${field.id}\" \n                               value=\"${value}\"\n                               ${field.is_required ? 'required' : ''}\n                               ${isLocked ? 'disabled' : ''}>\n                        <label for=\"field_${field.id}\">Select date</label>\n                    </div>\n                `;\n                break;\n                \n            case 'textarea':\n                fieldHtml += `\n                    <div class=\"form-floating-google\">\n                        <textarea class=\"form-input-google ${lockClass}\" \n                                  id=\"field_${field.id}\" \n                                  name=\"field_${field.id}\" \n                                  placeholder=\" \"\n                                  rows=\"3\"\n                                  style=\"min-height: 100px; resize: vertical;\"\n                                  ${field.is_required ? 'required' : ''}\n                                  ${isLocked ? 'disabled' : ''}>${value}</textarea>\n                        <label for=\"field_${field.id}\">Your answer</label>\n                    </div>\n                `;\n                break;\n                \n            case 'number':\n                fieldHtml += `\n                    <div class=\"form-floating-google\">\n                        <input type=\"number\" \n                               class=\"form-input-google ${lockClass}\" \n                               id=\"field_${field.id}\" \n                               name=\"field_${field.id}\" \n                               placeholder=\" \"\n                               value=\"${value}\"\n                               ${field.is_required ? 'required' : ''}\n                               ${isLocked ? 'disabled' : ''}>\n                        <label for=\"field_${field.id}\">Your answer</label>\n                    </div>\n                `;\n                break;\n                \n            case 'select':\n            case 'dropdown':\n                fieldHtml += `\n                    <select class=\"form-input-google ${lockClass}\" \n                            id=\"field_${field.id}\" \n                            name=\"field_${field.id}\"\n                            ${field.is_required ? 'required' : ''}\n                            ${isLocked ? 'disabled' : ''}>\n                        <option value=\"\" disabled ${!value ? 'selected' : ''}>Choose</option>\n                        ${field.options.map(option => \n                            `\n                        <option value=\"${option}\" ${value === option ? 'selected' : ''}>${option}</option>`\n                        ).join('')}\n                    </select>\n                `;\n                break;\n                \n            case 'radio':\n                fieldHtml += `\n                    <div class=\"d-grid gap-2\">\n                        ${field.options.map((option, index) => `\n                            \n                        <div class=\"form-check\">\n                            <input class=\"form-check-input\" \n                                       type=\"radio\" \n                                       name=\"field_${field.id}\" \n                                       id=\"field_${field.id}_${index}\" \n                                       value=\"${option}\"\n                                       ${value === option ? 'checked' : ''}\n                                       ${isLocked ? 'disabled' : ''}>\n                            <label class=\"form-check-label\" for=\"field_${field.id}_${index}\">\n                                    ${option}\n                                </label>\n                        </div>\n                        `).join('')}\n                    </div>\n                `;\n                break;\n                \n            case 'checkbox':\n                const selectedValues = Array.isArray(value) ? value : (value ? [value] : []);\n                fieldHtml += `\n                    <div class=\"d-grid gap-2\">\n                        ${field.options.map((option, index) => `\n                            \n                        <div class=\"form-check\">\n                            <input class=\"form-check-input\" \n                                       type=\"checkbox\" \n                                       name=\"field_${field.id}\" \n                                       id=\"field_${field.id}_${index}\" \n                                       value=\"${option}\"\n                                       ${selectedValues.includes(option) ? 'checked' : ''}\n                                       ${isLocked ? 'disabled' : ''}>\n                            <label class=\"form-check-label\" for=\"field_${field.id}_${index}\">\n                                    ${option}\n                                </label>\n                        </div>\n                        `).join('')}\n                    </div>\n                `;\n                break;\n        }\n        \n        fieldHtml += `\n                </div>\n            </div>\n        `;\n        \n        return fieldHtml;\n    }\n    \n    // Show user avatars in a Google-style way\n    function renderUserAvatar(user, isEditing = false) {\n        const statusClass = isEditing ? 'status-editing' : 'status-online';\n        return `\n            <div class=\"d-flex align-items-center mb-2\" data-user-id=\"${user.id}\">\n                <div class=\"user-avatar me-2\">${user.username.charAt(0).toUpperCase()}</div>\n                <div class=\"flex-grow-1\">\n                    <div class=\"d-flex align-items-center\">\n                        <span class=\"status-indicator ${statusClass}\"></span>\n                        <span class=\"small fw-medium\">${user.username}</span>\n                    </div>\n                    <div class=\"text-muted\" style=\"font-size: 11px;\">\n                        ${isEditing ? 'Currently editing' : 'Active'}\n                    </div>\n                </div>\n            </div>\n        `;\n    }\n    \n    // Mobile user avatar rendering\n    function renderMobileUserAvatar(user, isEditing = false) {\n        const statusClass = isEditing ? 'status-editing' : 'status-online';\n        return `\n            <div class=\"user-avatar\" \n                 data-user-id=\"${user.id}\" \n                 title=\"${user.username} - ${isEditing ? 'Currently editing' : 'Active'}\"\n                 style=\"position: relative;\">\n                ${user.username.charAt(0).toUpperCase()}\n                \n                <span class=\"status-indicator ${statusClass}\" \n                      style=\"position: absolute; bottom: -2px; right: -2px; border: 1px solid white;\"></span>\n            </div>\n        `;\n    }\n    \n    // Option builder functionality\n    window.optionBuilders = {};\n    \n    function createOptionBuilder(containerId, initialOptions = []) {\n        const container = document.getElementById(containerId);\n        if (!container) return;\n        \n        const options = initialOptions.length > 0 ? initialOptions : ['Option 1'];\n        let optionCounter = options.length;\n        \n        function renderOptions() {\n            container.innerHTML = `\n            <div class=\"option-builder\">\n                <div class=\"mb-3\">\n                    <label class=\"form-label small text-muted mb-2\">Options</label>\n                    <div class=\"option-list\" id=\"option-list-${containerId}\">\n                            ${options.map((option, index) => `\n                                \n                        <div class=\"option-item\" data-index=\"${index}\">\n                            <div class=\"option-drag-handle\">\n                                <i class=\"fas fa-grip-vertical\"></i>\n                            </div>\n                            <div class=\"option-input-wrapper\">\n                                <input type=\"text\" \n                                               class=\"option-input\" \n                                               value=\"${option}\" \n                                               placeholder=\"Enter option text...\"\n                                               onchange=\"updateOption('${containerId}', ${index}, this.value)\"\n                                               onkeydown=\"handleOptionKeydown(event, '${containerId}', ${index})\">\n                                    \n                            </div>\n                                    ${options.length > 1 ? `\n                            <button type=\"button\" \n                                                class=\"option-remove\" \n                                                onclick=\"removeOption('${containerId}', ${index})\"\n                                                title=\"Remove option\">\n                                <i class=\"fas fa-times\"></i>\n                            </button>\n                                    ` : `\n                            <div class=\"option-remove-placeholder\"></div>\n                                    `}\n                        </div>\n                            `).join('')}\n                    </div>\n                    <button type=\"button\" \n                                class=\"option-add\" \n                                onclick=\"addOption('${containerId}')\"\n                                title=\"Add new option\">\n                        <i class=\"fas fa-plus\"></i>\n                        <span>Add option</span>\n                    </button>\n                </div>\n            </div>\n            `;\n            \n            // Initialize drag and drop for options\n            initializeOptionSorting(containerId);\n        }\n        \n        window.updateOption = function(builderId, index, value) {\n            if (window.optionBuilders[builderId]) {\n                window.optionBuilders[builderId].options[index] = value;\n                window.optionBuilders[builderId].updateHiddenInput();\n            }\n        };\n        \n        window.removeOption = function(builderId, index) {\n            if (window.optionBuilders[builderId] && window.optionBuilders[builderId].options.length > 1) {\n                window.optionBuilders[builderId].options.splice(index, 1);\n                window.optionBuilders[builderId].renderOptions();\n                window.optionBuilders[builderId].updateHiddenInput();\n            }\n        };\n        \n        window.addOption = function(builderId) {\n            if (window.optionBuilders[builderId]) {\n                const builder = window.optionBuilders[builderId];\n                builder.optionCounter++;\n                builder.options.push(`Option ${builder.optionCounter}`);\n                builder.renderOptions();\n                \n                // Focus on the new input\n                setTimeout(() => {\n                    const inputs = document.querySelectorAll(`#${builderId} .option-input`);\n                    const newInput = inputs[inputs.length - 1];\n                    if (newInput) {\n                        newInput.focus();\n                        newInput.select();\n                    }\n                }, 100);\n                \n                builder.updateHiddenInput();\n            }\n        };\n        \n        window.handleOptionKeydown = function(event, builderId, index) {\n            if (event.key === 'Enter') {\n                event.preventDefault();\n                addOption(builderId);\n            } else if (event.key === 'Backspace' && event.target.value === '' && window.optionBuilders[builderId].options.length > 1) {\n                event.preventDefault();\n                removeOption(builderId, index);\n                // Focus on previous input if available\n                setTimeout(() => {\n                    const inputs = document.querySelectorAll(`#${builderId} .option-input`);\n                    const prevInput = inputs[Math.max(0, index - 1)];\n                    if (prevInput) {\n                        prevInput.focus();\n                    }\n                }, 100);\n            }\n        };\n        \n        function updateHiddenInput() {\n            const hiddenInput = document.querySelector('[name=\"options_text\"]');\n            if (hiddenInput) {\n                hiddenInput.value = options.filter(opt => opt.trim()).join('\\n');\n            }\n        }\n        \n        function initializeOptionSorting(builderId) {\n            const optionList = document.getElementById(`option-list-${builderId}`);\n            if (optionList && window.Sortable) {\n                new Sortable(optionList, {\n                    handle: '.option-drag-handle',\n                    animation: 150,\n                    ghostClass: 'option-dragging',\n                    onEnd: function(evt) {\n                        const builder = window.optionBuilders[builderId];\n                        if (builder) {\n                            // Reorder the options array\n                            const movedOption = builder.options.splice(evt.oldIndex, 1)[0];\n                            builder.options.splice(evt.newIndex, 0, movedOption);\n                            builder.updateHiddenInput();\n                        }\n                    }\n                });\n            }\n        }\n        \n        renderOptions();\n        updateHiddenInput();\n        \n        window.optionBuilders[containerId] = {\n            options,\n            optionCounter,\n            renderOptions,\n            updateHiddenInput\n        };\n    }\n    \n    // Field type selector functionality\n    function createFieldTypeSelector(containerId, selectedType = '') {\n        const container = document.getElementById(containerId);\n        if (!container) return;\n        \n        const fieldTypes = [\n            { value: 'text', label: 'Short answer', icon: 'fas fa-font', description: 'Single line text input' },\n            { value: 'textarea', label: 'Paragraph', icon: 'fas fa-align-left', description: 'Multi-line text input' },\n            { value: 'radio', label: 'Multiple choice', icon: 'fas fa-circle-dot', description: 'Select one option' },\n            { value: 'checkbox', label: 'Checkboxes', icon: 'fas fa-check-square', description: 'Select multiple options' },\n            { value: 'dropdown', label: 'Dropdown', icon: 'fas fa-caret-down', description: 'Select from dropdown list' },\n            { value: 'number', label: 'Number', icon: 'fas fa-hashtag', description: 'Numeric input' },\n            { value: 'email', label: 'Email', icon: 'fas fa-envelope', description: 'Email address input' },\n            { value: 'date', label: 'Date', icon: 'fas fa-calendar-alt', description: 'Date picker input' }\n        ];\n        \n        container.innerHTML = `\n            <div class=\"field-type-grid\">\n                ${fieldTypes.map(type => `\n                    \n                <div class=\"field-type-option ${selectedType === type.value ? 'selected' : ''}\" \n                         data-type=\"${type.value}\"\n                         onclick=\"selectFieldType('${type.value}')\"\n                         title=\"${type.description}\">\n                    <i class=\"${type.icon}\"></i>\n                    <span>${type.label}</span>\n                </div>\n                `).join('')}\n            </div>\n        `;\n        \n        window.selectFieldType = function(type) {\n            // Update visual selection\n            container.querySelectorAll('.field-type-option').forEach(option => {\n                option.classList.toggle('selected', option.dataset.type === type);\n            });\n            \n            // Update hidden select\n            const hiddenSelect = document.querySelector('[name=\"field_type\"]');\n            if (hiddenSelect) {\n                hiddenSelect.value = type;\n            }\n            \n            // Show/hide options builder based on field type\n            const optionsContainer = document.getElementById('options-builder');\n            const needsOptions = ['radio', 'checkbox', 'dropdown'].includes(type);\n            if (optionsContainer) {\n                optionsContainer.style.display = needsOptions ? 'block' : 'none';\n                \n                // Initialize or update option builder if needed\n                if (needsOptions) {\n                    const builderContainer = document.getElementById('options-container');\n                    if (builderContainer && !window.optionBuilders['options-container']) {\n                        createOptionBuilder('options-container');\n                    }\n                }\n            }\n        };\n        \n        // Auto-select first option if none selected\n        if (!selectedType) {\n            selectFieldType('text');\n        }\n    }\n        </script>\n    </body>\n</html>"
				}
			]
		},
		{
			"name": "Register",
			"request": {
				"method": "GET",
				"header": []
			},
			"response": [
				{
					"name": "Test User 1",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "X-CSRFToken",
								"value": "{{csrf_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"testuser1\",\n    \"email\": \"test@example.com\",\n    \"password1\": \"testpass123\",\n    \"password2\": \"testpass123\",\n    \"role\": \"user\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{local_url}}/accounts/register/",
							"host": [
								"{{local_url}}"
							],
							"path": [
								"accounts",
								"register",
								""
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "html",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/html; charset=utf-8"
						},
						{
							"key": "X-Frame-Options",
							"value": "DENY"
						},
						{
							"key": "Vary",
							"value": "Cookie"
						},
						{
							"key": "Content-Length",
							"value": "61218"
						},
						{
							"key": "X-Content-Type-Options",
							"value": "nosniff"
						},
						{
							"key": "Referrer-Policy",
							"value": "same-origin"
						},
						{
							"key": "Cross-Origin-Opener-Policy",
							"value": "same-origin"
						},
						{
							"key": "Set-Cookie",
							"value": "csrftoken=pS71uVLEU6GUXotyBOOShxFpiGnS3SJL; expires=Sat, 13 Jun 2026 08:15:40 GMT; Max-Age=31449600; Path=/; SameSite=Lax"
						},
						{
							"key": "Server",
							"value": "daphne"
						}
					],
					"cookie": [],
					"body": "<!DOCTYPE html>\n<html lang=\"en\">\n    <head>\n        <meta charset=\"UTF-8\">\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n        <title>Create account - CollabForms</title>\n        <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css\" rel=\"stylesheet\">\n        <link href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css\" rel=\"stylesheet\">\n        <link href=\"https://fonts.googleapis.com/css2?family=Google+Sans:wght@300;400;500;600;700&family=Roboto:wght@300;400;500;600;700&display=swap\" rel=\"stylesheet\">\n        <style>\n        :root {\n            /* Google Forms exact color palette */\n            --primary-color: #1a73e8;\n            --primary-hover: #1557b0;\n            --secondary-color: #5f6368;\n            --text-primary: #202124;\n            --text-secondary: #5f6368;\n            --text-muted: #9aa0a6;\n            --border-color: #dadce0;\n            --border-focus: #4285f4;\n            --background-primary: #ffffff;\n            --background-secondary: #f1f3f4;\n            --background-tertiary: #e8eaed;\n            --surface-color: #ffffff;\n            --surface-raised: #ffffff;\n            --shadow-light: 0 1px 2px 0 rgba(60,64,67,.3), 0 1px 3px 1px rgba(60,64,67,.15);\n            --shadow-medium: 0 1px 3px 0 rgba(60,64,67,.3), 0 4px 8px 3px rgba(60,64,67,.15);\n            --shadow-heavy: 0 2px 6px 2px rgba(60,64,67,.15), 0 8px 24px 4px rgba(60,64,67,.15);\n            --success-color: #34a853;\n            --warning-color: #fbbc04;\n            --error-color: #ea4335;\n            --purple-accent: #9c27b0;\n            --forms-purple: #673ab7;\n        }\n        \n        * {\n            font-family: 'Google Sans', 'Roboto', -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif;\n        }\n        \n        body {\n            background-color: var(--background-secondary);\n            color: var(--text-primary);\n            line-height: 1.6;\n            font-size: 14px;\n            margin: 0;\n            padding: 0;\n        }\n        \n        /* Google Forms-style header */\n        .navbar {\n            background: var(--surface-color) !important;\n            border-bottom: 1px solid var(--border-color);\n            box-shadow: var(--shadow-light);\n            min-height: 64px;\n            padding: 0;\n        }\n        \n        .navbar-brand {\n            font-family: 'Google Sans', sans-serif;\n            font-weight: 500;\n            color: var(--text-primary) !important;\n            font-size: 22px;\n            padding: 0;\n            margin: 0;\n        }\n        \n        .navbar-brand i {\n            color: var(--forms-purple);\n            margin-right: 8px;\n        }\n        \n        /* Google Forms-style cards */\n        .form-card {\n            background: var(--surface-color);\n            border: 1px solid var(--border-color);\n            border-radius: 8px;\n            box-shadow: var(--shadow-light);\n            transition: all 0.2s cubic-bezier(0.4,0,0.2,1);\n            overflow: hidden;\n        }\n        \n        .form-card:hover {\n            box-shadow: var(--shadow-medium);\n        }\n        \n        .form-card-header {\n            border-top: 10px solid var(--forms-purple);\n            padding: 24px 24px 0 24px;\n            background: var(--surface-color);\n        }\n        \n        .form-card-body {\n            padding: 24px;\n        }\n        \n        /* Google Forms-style buttons */\n        .btn-google-primary {\n            background-color: var(--primary-color);\n            border: none;\n            color: white;\n            border-radius: 4px;\n            font-weight: 500;\n            font-size: 14px;\n            padding: 8px 24px;\n            height: 40px;\n            transition: all 0.2s cubic-bezier(0.4,0,0.2,1);\n            text-transform: none;\n            box-shadow: none;\n        }\n        \n        .btn-google-primary:hover {\n            background-color: var(--primary-hover);\n            color: white;\n            box-shadow: 0 1px 2px 0 rgba(60,64,67,.3), 0 1px 3px 1px rgba(60,64,67,.15);\n        }\n        \n        .btn-google-secondary {\n            background-color: transparent;\n            border: 1px solid var(--border-color);\n            color: var(--primary-color);\n            border-radius: 4px;\n            font-weight: 500;\n            font-size: 14px;\n            padding: 8px 24px;\n            height: 40px;\n            transition: all 0.2s cubic-bezier(0.4,0,0.2,1);\n            text-transform: none;\n        }\n        \n        .btn-google-secondary:hover {\n            background-color: rgba(26, 115, 232, 0.04);\n            border-color: var(--primary-color);\n            color: var(--primary-color);\n        }\n        \n        .btn-google-text {\n            background: transparent;\n            border: none;\n            color: var(--primary-color);\n            font-weight: 500;\n            font-size: 14px;\n            padding: 8px 16px;\n            border-radius: 4px;\n            transition: all 0.2s cubic-bezier(0.4,0,0.2,1);\n        }\n        \n        .btn-google-text:hover {\n            background-color: rgba(26, 115, 232, 0.04);\n            color: var(--primary-color);\n        }\n        \n        /* Google Forms-style form inputs */\n        .form-input-google {\n            border: none;\n            border-bottom: 1px solid var(--border-color);\n            border-radius: 4px 4px 0 0;\n            background-color: #f8f9fa;\n            padding: 16px 16px 6px 16px;\n            font-size: 16px;\n            line-height: 1.5;\n            transition: all 0.2s cubic-bezier(0.4,0,0.2,1);\n            width: 100%;\n        }\n        \n        .form-input-google:focus {\n            outline: none;\n            border-bottom: 2px solid var(--primary-color);\n            background-color: #fafbfc;\n            box-shadow: 0 2px 4px rgba(26, 115, 232, 0.1);\n        }\n        \n        .form-floating-google {\n            position: relative;\n        }\n        \n        .form-floating-google > .form-input-google {\n            padding-top: 20px;\n            padding-bottom: 4px;\n        }\n        \n        .form-floating-google > label {\n            position: absolute;\n            top: 0;\n            left: 16px;\n            padding-top: 16px;\n            color: var(--text-secondary);\n            font-size: 16px;\n            font-weight: 400;\n            transition: all 0.2s cubic-bezier(0.4,0,0.2,1);\n            pointer-events: none;\n            transform-origin: 0 0;\n        }\n        \n        .form-floating-google > .form-input-google:focus ~ label,\n        .form-floating-google > .form-input-google:not(:placeholder-shown) ~ label {\n            transform: translateY(-50%) scale(0.75);\n            color: var(--primary-color);\n            padding-top: 4px;\n        }\n        \n        /* User avatar */\n        .user-avatar {\n            width: 32px;\n            height: 32px;\n            border-radius: 50%;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            color: white;\n            font-weight: 500;\n            font-size: 14px;\n            background: linear-gradient(135deg, var(--primary-color), var(--forms-purple));\n        }\n        \n        /* Connection status */\n        .connection-status {\n            position: fixed;\n            bottom: 24px;\n            right: 24px;\n            z-index: 1050;\n            border-radius: 4px;\n            padding: 8px 16px;\n            font-size: 14px;\n            font-weight: 500;\n            box-shadow: var(--shadow-medium);\n        }\n        \n        .connection-connected {\n            background-color: var(--success-color);\n            color: white;\n        }\n        \n        .connection-connecting {\n            background-color: var(--warning-color);\n            color: var(--text-primary);\n        }\n        \n        .connection-disconnected {\n            background-color: var(--error-color);\n            color: white;\n        }\n        \n        /* Page layouts */\n        .page-container {\n            max-width: 768px;\n            margin: 0 auto;\n            padding: 0 16px;\n        }\n        \n        .page-container-wide {\n            max-width: 1200px;\n            margin: 0 auto;\n            padding: 0 16px;\n        }\n        \n        .auth-container {\n            min-height: 100vh;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n            padding: 24px;\n        }\n        \n        .auth-card {\n            background: var(--surface-color);\n            border-radius: 12px;\n            box-shadow: var(--shadow-heavy);\n            width: 100%;\n            max-width: 420px;\n            overflow: hidden;\n        }\n        \n        .auth-header {\n            text-align: center;\n            padding: 48px 48px 24px 48px;\n        }\n        \n        .auth-body {\n            padding: 0 48px 48px 48px;\n        }\n        \n        .auth-logo {\n            color: var(--forms-purple);\n            font-size: 48px;\n            margin-bottom: 24px;\n        }\n        \n        .auth-title {\n            font-size: 24px;\n            font-weight: 400;\n            color: var(--text-primary);\n            margin-bottom: 8px;\n        }\n        \n        .auth-subtitle {\n            font-size: 16px;\n            color: var(--text-secondary);\n            margin-bottom: 0;\n        }\n        \n        /* Dropdown menus */\n        .dropdown-menu {\n            border: 1px solid var(--border-color);\n            border-radius: 8px;\n            box-shadow: var(--shadow-medium);\n            padding: 8px 0;\n            min-width: 200px;\n        }\n        \n        .dropdown-item {\n            padding: 12px 16px;\n            font-size: 14px;\n            color: var(--text-primary);\n            border: none;\n            background: none;\n            transition: background-color 0.2s cubic-bezier(0.4,0,0.2,1);\n        }\n        \n        .dropdown-item:hover {\n            background-color: var(--background-tertiary);\n            color: var(--text-primary);\n        }\n        \n        .dropdown-divider {\n            margin: 8px 0;\n            border-top: 1px solid var(--border-color);\n        }\n        \n        /* Alert messages */\n        .alert {\n            border-radius: 4px;\n            border: none;\n            font-size: 14px;\n            padding: 16px;\n            margin-bottom: 16px;\n        }\n        \n        .alert-success {\n            background-color: #e8f5e8;\n            color: #1e7e34;\n        }\n        \n        .alert-warning {\n            background-color: #fff3cd;\n            color: #856404;\n        }\n        \n        .alert-danger {\n            background-color: #f8d7da;\n            color: #721c24;\n        }\n        \n        .alert-info {\n            background-color: #d1ecf1;\n            color: #0c5460;\n        }\n        \n        /* Loading animations */\n        .loading-spinner {\n            display: inline-block;\n            width: 16px;\n            height: 16px;\n            border: 2px solid var(--border-color);\n            border-radius: 50%;\n            border-top-color: var(--primary-color);\n            animation: spin 1s linear infinite;\n        }\n        \n        @keyframes spin {\n            to { transform: rotate(360deg); }\n        }\n        \n        .fade-in {\n            animation: fadeIn 0.3s cubic-bezier(0.4,0,0.2,1);\n        }\n        \n        @keyframes fadeIn {\n            from { opacity: 0; transform: translateY(8px); }\n            to { opacity: 1; transform: translateY(0); }\n        }\n        \n        /* Option builder styles */\n        .option-builder {\n            width: 100%;\n        }\n        \n        .option-item {\n            display: flex;\n            align-items: center;\n            gap: 8px;\n            margin-bottom: 8px;\n            padding: 8px;\n            border: 1px solid var(--border-color);\n            border-radius: 4px;\n            background-color: var(--surface-color);\n            transition: all 0.2s cubic-bezier(0.4,0,0.2,1);\n        }\n        \n        .option-item:hover {\n            border-color: var(--primary-color);\n        }\n        \n        .option-item .field-handle {\n            color: var(--text-muted);\n            cursor: grab;\n            padding: 4px;\n        }\n        \n        .option-item .field-handle:active {\n            cursor: grabbing;\n        }\n        \n        .option-input {\n            flex: 1;\n            border: none;\n            outline: none;\n            background: transparent;\n            font-size: 14px;\n            color: var(--text-primary);\n            padding: 4px 0;\n        }\n        \n        .option-input::placeholder {\n            color: var(--text-muted);\n        }\n        \n        .option-remove {\n            background: transparent;\n            border: none;\n            color: var(--text-muted);\n            padding: 4px;\n            border-radius: 3px;\n            transition: all 0.2s cubic-bezier(0.4,0,0.2,1);\n            cursor: pointer;\n        }\n        \n        .option-remove:hover {\n            background-color: var(--error-color);\n            color: white;\n        }\n        \n        .option-add {\n            display: flex;\n            align-items: center;\n            gap: 8px;\n            width: 100%;\n            background: transparent;\n            border: 1px dashed var(--border-color);\n            border-radius: 4px;\n            padding: 12px;\n            color: var(--primary-color);\n            font-size: 14px;\n            font-weight: 500;\n            transition: all 0.2s cubic-bezier(0.4,0,0.2,1);\n            cursor: pointer;\n            margin-top: 4px;\n        }\n        \n        .option-add:hover {\n            background-color: rgba(26, 115, 232, 0.04);\n            border-color: var(--primary-color);\n        }\n        \n        .option-add i {\n            font-size: 12px;\n        }\n        \n        /* Field type selector styles */\n        .field-type-grid {\n            display: grid;\n            grid-template-columns: repeat(auto-fit, minmax(140px, 1fr));\n            gap: 8px;\n            margin-bottom: 16px;\n        }\n        \n        .field-type-option {\n            display: flex;\n            flex-direction: column;\n            align-items: center;\n            gap: 6px;\n            padding: 16px 8px;\n            border: 1px solid var(--border-color);\n            border-radius: 6px;\n            background-color: var(--surface-color);\n            cursor: pointer;\n            transition: all 0.2s cubic-bezier(0.4,0,0.2,1);\n            text-align: center;\n            position: relative;\n            overflow: hidden;\n        }\n        \n        .field-type-option:hover {\n            border-color: var(--primary-color);\n            background-color: rgba(26, 115, 232, 0.04);\n        }\n        \n        .field-type-option.selected {\n            border-color: var(--primary-color);\n            background-color: rgba(26, 115, 232, 0.08);\n            color: var(--primary-color);\n        }\n        \n        .field-type-option i {\n            font-size: 18px;\n            color: var(--text-secondary);\n            transition: color 0.2s cubic-bezier(0.4,0,0.2,1);\n        }\n        \n        .field-type-option.selected i {\n            color: var(--primary-color);\n        }\n        \n        .field-type-option span {\n            font-size: 12px;\n            font-weight: 500;\n            color: var(--text-primary);\n        }\n        \n        /* Enhanced responsive design */\n        /* Enhanced responsive design for different screen sizes */\n        \n        /* Mobile First - Base styles for small devices */\n        @media (max-width: 575.98px) {\n            .page-container {\n                padding: 0 8px;\n                max-width: 100%;\n            }\n            \n            .page-container-wide {\n                padding: 0 8px;\n                max-width: 100%;\n            }\n            \n            .auth-container {\n                padding: 16px;\n                min-height: 100vh;\n            }\n            \n            .auth-header {\n                padding: 32px 20px 20px 20px;\n            }\n            \n            .auth-body {\n                padding: 0 20px 32px 20px;\n            }\n            \n            .form-group-google {\n                margin-bottom: 20px;\n            }\n            \n            .navbar-brand {\n                font-size: 18px;\n            }\n            \n            .form-card-body {\n                padding: 16px;\n            }\n            \n            .form-card-header {\n                padding: 16px 16px 0 16px;\n            }\n            \n            .field-type-grid {\n                grid-template-columns: repeat(2, 1fr);\n                gap: 6px;\n            }\n            \n            .field-type-option {\n                padding: 12px 6px;\n                min-height: 70px;\n            }\n            \n            .field-type-option i {\n                font-size: 16px;\n                margin-bottom: 4px;\n            }\n            \n            .field-type-option span {\n                font-size: 10px;\n                line-height: 1.2;\n            }\n            \n            .page-header .d-flex {\n                flex-direction: column;\n                align-items: stretch !important;\n                gap: 12px;\n            }\n            \n            .btn-group {\n                width: 100%;\n                flex-direction: column;\n            }\n            \n            .btn-group .btn {\n                flex: 1;\n                margin-left: 0;\n                margin-bottom: 4px;\n            }\n            \n            .option-item {\n                flex-wrap: wrap;\n                gap: 6px;\n            }\n            \n            .option-input-wrapper {\n                flex: 1;\n                min-width: 200px;\n                margin: 0;\n            }\n        }\n        \n        /* Small devices - tablets portrait */\n        @media (min-width: 576px) and (max-width: 767.98px) {\n            .page-container {\n                padding: 0 12px;\n                max-width: 540px;\n            }\n            \n            .page-container-wide {\n                padding: 0 12px;\n                max-width: 720px;\n            }\n            \n            .auth-container {\n                padding: 20px;\n            }\n            \n            .auth-header {\n                padding: 40px 28px 20px 28px;\n            }\n            \n            .auth-body {\n                padding: 0 28px 40px 28px;\n            }\n            \n            .form-group-google {\n                margin-bottom: 22px;\n            }\n            \n            .field-type-grid {\n                grid-template-columns: repeat(3, 1fr);\n                gap: 8px;\n            }\n            \n            .field-type-option {\n                padding: 14px 8px;\n                min-height: 80px;\n            }\n            \n            .field-type-option i {\n                font-size: 18px;\n                margin-bottom: 6px;\n            }\n            \n            .field-type-option span {\n                font-size: 11px;\n            }\n        }\n        \n        /* Medium devices - tablets landscape */\n        @media (min-width: 768px) and (max-width: 991.98px) {\n            .page-container {\n                padding: 0 16px;\n                max-width: 720px;\n            }\n            \n            .page-container-wide {\n                padding: 0 16px;\n                max-width: 960px;\n            }\n            \n            .form-card-body {\n                padding: 20px;\n            }\n            \n            .form-card-header {\n                padding: 20px 20px 0 20px;\n            }\n            \n            .field-type-grid {\n                grid-template-columns: repeat(4, 1fr);\n                gap: 8px;\n            }\n            \n            .field-type-option {\n                padding: 16px 10px;\n                min-height: 85px;\n            }\n            \n            .field-type-option i {\n                font-size: 20px;\n                margin-bottom: 8px;\n            }\n            \n            .field-type-option span {\n                font-size: 12px;\n            }\n        }\n        \n        /* Large devices - small laptops */\n        @media (min-width: 992px) and (max-width: 1199.98px) {\n            .page-container {\n                padding: 0 20px;\n                max-width: 960px;\n            }\n            \n            .page-container-wide {\n                padding: 0 20px;\n                max-width: 1140px;\n            }\n            \n            .field-type-grid {\n                grid-template-columns: repeat(4, 1fr);\n                gap: 10px;\n            }\n            \n            .field-type-option {\n                padding: 18px 12px;\n                min-height: 90px;\n            }\n            \n            .field-type-option i {\n                font-size: 22px;\n                margin-bottom: 8px;\n            }\n            \n            .field-type-option span {\n                font-size: 13px;\n            }\n        }\n        \n        /* Extra large devices - large laptops and desktops */\n        @media (min-width: 1200px) and (max-width: 1399.98px) {\n            .page-container {\n                padding: 0 24px;\n                max-width: 1140px;\n            }\n            \n            .page-container-wide {\n                padding: 0 24px;\n                max-width: 1320px;\n            }\n            \n            .field-type-grid {\n                grid-template-columns: repeat(4, 1fr);\n                gap: 12px;\n            }\n            \n            .field-type-option {\n                padding: 20px 14px;\n                min-height: 95px;\n            }\n            \n            .field-type-option i {\n                font-size: 24px;\n                margin-bottom: 10px;\n            }\n            \n            .field-type-option span {\n                font-size: 14px;\n            }\n        }\n        \n        /* Extra extra large devices - large monitors */\n        @media (min-width: 1400px) {\n            .page-container {\n                padding: 0 30px;\n                max-width: 1200px;\n            }\n            \n            .page-container-wide {\n                padding: 0 30px;\n                max-width: 1600px;\n            }\n            \n            .field-type-grid {\n                grid-template-columns: repeat(4, 1fr);\n                gap: 15px;\n            }\n            \n            .field-type-option {\n                padding: 22px 16px;\n                min-height: 100px;\n            }\n            \n            .field-type-option i {\n                font-size: 26px;\n                margin-bottom: 12px;\n            }\n            \n            .field-type-option span {\n                font-size: 15px;\n            }\n        }\n        \n        /* Laptop-specific fixes for alignment issues */\n        @media (min-width: 1024px) and (max-width: 1440px) and (orientation: landscape) {\n            /* Common laptop resolution fixes */\n            .row.g-4 {\n                --bs-gutter-x: 2rem;\n                --bs-gutter-y: 2rem;\n            }\n            \n            .col-xl-8, .col-lg-7 {\n                flex: 0 0 auto;\n                width: 66.66666667%;\n            }\n            \n            .col-xl-4, .col-lg-5 {\n                flex: 0 0 auto;\n                width: 33.33333333%;\n            }\n            \n            .sticky-form-panel {\n                position: sticky;\n                top: 24px;\n                height: fit-content;\n                max-height: calc(100vh - 48px);\n                overflow-y: auto;\n            }\n            \n            /* Better spacing for form elements */\n            .form-group-google {\n                margin-bottom: 1.5rem;\n            }\n            \n            .option-builder {\n                max-height: 300px;\n                overflow-y: auto;\n                border: 1px solid var(--border-color);\n                border-radius: 6px;\n                padding: 12px;\n            }\n            \n            /* Improved field item layout */\n            .field-item {\n                margin-bottom: 1rem;\n                padding: 1.25rem;\n            }\n            \n            .field-item .d-flex {\n                align-items: flex-start;\n                gap: 1rem;\n            }\n            \n            /* Better button alignment */\n            .d-flex.gap-2 {\n                gap: 0.75rem !important;\n            }\n            \n            .d-flex.gap-3 {\n                gap: 1rem !important;\n            }\n        }\n        \n        /* Ultra-wide screen optimizations */\n        @media (min-width: 1920px) {\n            .page-container-wide {\n                max-width: 1800px;\n            }\n            \n            .row.g-4 {\n                --bs-gutter-x: 3rem;\n            }\n            \n            .form-card {\n                box-shadow: var(--shadow-medium);\n            }\n        }\n        \n        /* Height-based responsive adjustments */\n        @media (max-height: 700px) and (min-width: 992px) {\n            .sticky-form-panel {\n                position: static;\n            }\n            \n            .form-card-body {\n                padding: 16px;\n            }\n            \n            .form-group-google {\n                margin-bottom: 1rem;\n            }\n        }\n        \n        /* High DPI screen adjustments */\n        @media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi) {\n            .form-card {\n                border-width: 0.5px;\n            }\n            \n            .option-item {\n                border-width: 0.5px;\n            }\n            \n            .field-type-option {\n                border-width: 0.5px;\n            }\n        }\n        \n        /* Additional utility classes for better alignment */\n        .status-indicator {\n            width: 8px;\n            height: 8px;\n            border-radius: 50%;\n            margin-right: 6px;\n            flex-shrink: 0;\n        }\n        \n        .status-online {\n            background-color: var(--success-color);\n        }\n        \n        .status-editing {\n            background-color: var(--warning-color);\n            animation: pulse 2s infinite;\n        }\n        \n        @keyframes pulse {\n            0% { opacity: 1; }\n            50% { opacity: 0.5; }\n            100% { opacity: 1; }\n        }\n        \n        /* Field handle for drag and drop */\n        .field-handle {\n            color: var(--text-muted);\n            cursor: grab;\n            padding: 4px;\n            transition: color 0.2s cubic-bezier(0.4,0,0.2,1);\n        }\n        \n        .field-handle:hover {\n            color: var(--text-secondary);\n        }\n        \n        .field-handle:active {\n            cursor: grabbing;\n        }\n        \n        /* Field item styles */\n        .field-item {\n            transition: all 0.2s cubic-bezier(0.4,0,0.2,1);\n        }\n        \n        .field-item:hover {\n            box-shadow: var(--shadow-light);\n        }\n        \n        .field-item.dragging {\n            opacity: 0.7;\n            transform: rotate(5deg);\n        }\n        \n        /* Better form input focus states */\n        .form-input-google:focus {\n            outline: none;\n            border-bottom: 2px solid var(--primary-color);\n            background-color: #fafbfc;\n            box-shadow: 0 2px 4px rgba(26, 115, 232, 0.1);\n        }\n        \n        /* Improved checkbox and radio styles */\n        .form-check-input:checked {\n            background-color: var(--primary-color);\n            border-color: var(--primary-color);\n        }\n        \n        .form-check-input:focus {\n            border-color: var(--primary-color);\n            outline: none;\n            box-shadow: 0 0 0 0.25rem rgba(26, 115, 232, 0.25);\n        }\n        \n        /* Page header improvements */\n        .page-header {\n            background-color: var(--surface-color);\n            border-bottom: 1px solid var(--border-color);\n            margin-bottom: 0;\n        }\n        \n        /* Better button spacing in groups */\n        .btn-group .btn,\n        .d-flex .btn + .btn {\n            margin-left: 8px;\n        }\n        \n        /* Better form field error states */\n        .form-input-google.is-invalid {\n            border-bottom-color: var(--error-color);\n        }\n        \n        .form-input-google.is-invalid:focus {\n            border-bottom-color: var(--error-color);\n            box-shadow: 0 2px 4px rgba(234, 67, 53, 0.1);\n        }\n        \n        /* Consistent border radius */\n        .rounded {\n            border-radius: 6px !important;\n        }\n        \n        .rounded-pill {\n            border-radius: 16px !important;\n        }\n        \n        /* Enhanced option builder styles */\n        .option-list {\n            margin-bottom: 12px;\n        }\n        \n        .option-drag-handle {\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            width: 24px;\n            height: 24px;\n            color: var(--text-muted);\n            cursor: grab;\n            border-radius: 3px;\n            transition: all 0.2s cubic-bezier(0.4,0,0.2,1);\n        }\n        \n        .option-drag-handle:hover {\n            background-color: var(--background-tertiary);\n            color: var(--text-secondary);\n        }\n        \n        .option-drag-handle:active {\n            cursor: grabbing;\n        }\n        \n        .option-input-wrapper {\n            flex: 1;\n            margin: 0 8px;\n        }\n        \n        .option-remove-placeholder {\n            width: 24px;\n            height: 24px;\n        }\n        \n        .option-dragging {\n            opacity: 0.5;\n            transform: rotate(2deg);\n        }\n        \n        .option-item:last-child .option-input {\n            border-bottom-color: transparent;\n        }\n        \n        .option-item .option-input:focus {\n            border-bottom-color: var(--primary-color);\n        }\n        \n        /* Field type option hover effects */\n        .field-type-option {\n            position: relative;\n            overflow: hidden;\n        }\n        \n        .field-type-option::before {\n            content: '';\n            position: absolute;\n            top: 0;\n            left: -100%;\n            width: 100%;\n            height: 100%;\n            background: linear-gradient(90deg, transparent, rgba(26, 115, 232, 0.1), transparent);\n            transition: left 0.5s ease;\n        }\n        \n        .field-type-option:hover::before {\n            left: 100%;\n        }\n        \n        /* Form validation styles */\n        .is-invalid .option-input {\n            border-bottom-color: var(--error-color);\n        }\n        \n        .invalid-feedback {\n            color: var(--error-color);\n            font-size: 12px;\n            margin-top: 4px;\n        }\n        \n        /* Loading state for option builder */\n        .option-builder.loading {\n            opacity: 0.6;\n            pointer-events: none;\n        }\n        \n        .option-builder.loading::after {\n            content: '';\n            position: absolute;\n            top: 50%;\n            left: 50%;\n            transform: translate(-50%, -50%);\n            width: 20px;\n            height: 20px;\n            border: 2px solid var(--border-color);\n            border-top-color: var(--primary-color);\n            border-radius: 50%;\n            animation: spin 1s linear infinite;\n        }\n        \n        /* Dashboard specific responsive improvements */\n        .dashboard-stats {\n            margin-bottom: 2rem;\n        }\n        \n        .dashboard-stats .form-card {\n            transition: all 0.3s cubic-bezier(0.4,0,0.2,1);\n        }\n        \n        .dashboard-stats .form-card:hover {\n            transform: translateY(-2px);\n            box-shadow: var(--shadow-medium);\n        }\n        \n        /* Forms grid responsive layout */\n        @media (min-width: 1200px) {\n            .forms-grid .col-xl-4 {\n                flex: 0 0 auto;\n                width: 33.333333%;\n            }\n        }\n        \n        @media (min-width: 992px) and (max-width: 1199.98px) {\n            .forms-grid .col-lg-6 {\n                flex: 0 0 auto;\n                width: 50%;\n            }\n        }\n        \n        @media (max-width: 991.98px) {\n            .forms-grid .col-md-12 {\n                flex: 0 0 auto;\n                width: 100%;\n            }\n        }\n        \n        /* Better button groups on mobile */\n        @media (max-width: 767.98px) {\n            .btn-group-mobile {\n                display: flex;\n                flex-direction: column;\n                gap: 8px;\n                width: 100%;\n            }\n            \n            .btn-group-mobile .btn {\n                width: 100%;\n                margin-left: 0;\n            }\n            \n            .page-header .d-flex {\n                flex-direction: column;\n                align-items: stretch !important;\n                gap: 16px;\n            }\n            \n            .page-header .flex-grow-1 {\n                text-align: center;\n            }\n        }\n        \n        /* Form card improvements for different screen sizes */\n        .form-item-card {\n            transition: all 0.2s cubic-bezier(0.4,0,0.2,1);\n            height: 100%;\n            display: flex;\n            flex-direction: column;\n        }\n        \n        .form-item-card:hover {\n            transform: translateY(-1px);\n            box-shadow: var(--shadow-light);\n        }\n        \n        .form-item-card .form-item-content {\n            flex: 1;\n            display: flex;\n            flex-direction: column;\n        }\n        \n        .form-item-card .form-item-footer {\n            margin-top: auto;\n            padding-top: 12px;\n        }\n        \n        /* Enhanced responsiveness for collaboration UI */\n        .collaboration-panel {\n            position: sticky;\n            top: 24px;\n            max-height: calc(100vh - 48px);\n            overflow-y: auto;\n        }\n        \n        @media (max-width: 991.98px) {\n            .collaboration-panel {\n                position: static;\n                max-height: none;\n            }\n        }\n        \n        /* Better form field spacing on different screen sizes */\n        @media (min-width: 768px) and (max-width: 1023.98px) {\n            .form-group-google {\n                margin-bottom: 1.25rem;\n            }\n            \n            .field-type-grid {\n                gap: 8px;\n            }\n            \n            .option-builder {\n                padding: 14px;\n            }\n        }\n        \n        /* Ultra-wide screen optimizations */\n        @media (min-width: 1600px) {\n            .page-container-wide {\n                max-width: 1500px;\n            }\n            \n            .forms-grid {\n                --bs-gutter-x: 2rem;\n            }\n            \n            .dashboard-stats {\n                --bs-gutter-x: 1.5rem;\n            }\n        }\n        \n        /* Print styles */\n        @media print {\n            .page-header,\n            .btn,\n            .dropdown,\n            .connection-status,\n            .navbar {\n                display: none !important;\n            }\n            \n            .form-card {\n                border: 1px solid #ddd !important;\n                box-shadow: none !important;\n                page-break-inside: avoid;\n            }\n            \n            .page-container,\n            .page-container-wide {\n                max-width: none !important;\n                padding: 0 !important;\n            }\n        }\n        \n        /* Google Forms-style form groups */\n        .form-group-google {\n            margin-bottom: 24px;\n            position: relative;\n        }\n        \n        .form-error {\n            color: var(--error-color);\n            font-size: 12px;\n            margin-top: 6px;\n            font-weight: 400;\n        }\n        \n        .form-help {\n            color: var(--text-muted);\n            font-size: 12px;\n            margin-top: 6px;\n            line-height: 1.4;\n        }\n    </style>\n    </head>\n    <body>\n        <nav class=\"navbar navbar-expand-lg\">\n            <div class=\"container-fluid px-4\">\n                <a class=\"navbar-brand d-flex align-items-center\" href=\"/forms/\">\n                    <i class=\"fas fa-poll-h me-2\"></i>\n                CollabForms\n                </a>\n                <div class=\"navbar-nav ms-auto\">\n                    <a class=\"btn btn-google-text me-2\" href=\"/accounts/login/\">\n                        <i class=\"fas fa-sign-in-alt me-1\"></i>Sign in\n                    </a>\n                    <a class=\"btn btn-google-primary\" href=\"/accounts/register/\">\n                        <i class=\"fas fa-user-plus me-1\"></i>Sign up\n                    </a>\n                </div>\n            </div>\n        </nav>\n        <main>\n            <div class=\"auth-container\">\n                <div class=\"auth-card\">\n                    <div class=\"auth-header\">\n                        <div class=\"auth-logo\">\n                            <i class=\"fas fa-poll-h\"></i>\n                        </div>\n                        <h1 class=\"auth-title\">Create account</h1>\n                        <p class=\"auth-subtitle\">to get started with CollabForms</p>\n                    </div>\n                    <div class=\"auth-body\">\n                        <div class=\"alert alert-danger mb-4\">\n                            <div>This field is required.</div>\n                            <div>This field is required.</div>\n                            <div>This field is required.</div>\n                            <div>This field is required.</div>\n                            <div>This field is required.</div>\n                        </div>\n                        <form method=\"post\" novalidate>\n                            <input type=\"hidden\" name=\"csrfmiddlewaretoken\" value=\"7Z7l80kpIV9pR1nwTfbGwadacW4B1prcmH4csLVTsRF9EfGUkTPoDxIpkshjU70N\">\n                            <div class=\"form-group-google\">\n                                <div class=\"form-floating-google\">\n                                    <input type=\"text\" \n                               class=\"form-input-google\" \n                               id=\"id_username\" \n                               name=\"username\" \n                               placeholder=\" \"\n                               value=\"\"\n                               required>\n                                    <label for=\"id_username\">Username</label>\n                                </div>\n                                <div class=\"form-error\">This field is required.</div>\n                            </div>\n                            <div class=\"form-group-google\">\n                                <div class=\"form-floating-google\">\n                                    <input type=\"email\" \n                               class=\"form-input-google\" \n                               id=\"id_email\" \n                               name=\"email\" \n                               placeholder=\" \"\n                               value=\"\"\n                               required>\n                                    <label for=\"id_email\">Email</label>\n                                </div>\n                                <div class=\"form-error\">This field is required.</div>\n                            </div>\n                            <div class=\"form-group-google\">\n                                <div class=\"form-floating-google\">\n                                    <input type=\"password\" \n                               class=\"form-input-google\" \n                               id=\"id_password1\" \n                               name=\"password1\" \n                               placeholder=\" \"\n                               required>\n                                    <label for=\"id_password1\">Password</label>\n                                </div>\n                                <div class=\"form-error\">This field is required.</div>\n                            </div>\n                            <div class=\"form-group-google\">\n                                <div class=\"form-floating-google\">\n                                    <input type=\"password\" \n                               class=\"form-input-google\" \n                               id=\"id_password2\" \n                               name=\"password2\" \n                               placeholder=\" \"\n                               required>\n                                    <label for=\"id_password2\">Confirm password</label>\n                                </div>\n                                <div class=\"form-error\">This field is required.</div>\n                            </div>\n                            <div class=\"form-group-google\">\n                                <div class=\"form-floating-google\">\n                                    <select class=\"form-input-google\" \n                                id=\"id_role\" \n                                name=\"role\" \n                                required>\n                                        <option value=\"\" disabled selected></option>\n                                        <option value=\"admin\" >Admin</option>\n                                        <option value=\"user\" >User</option>\n                                    </select>\n                                    <label for=\"id_role\">Role</label>\n                                </div>\n                                <div class=\"form-error\">This field is required.</div>\n                            </div>\n                            <div class=\"d-flex justify-content-between align-items-center mb-4 mt-2\">\n                                <a href=\"/accounts/login/\" class=\"btn-google-text p-0\">\n                        Sign in instead\n                    </a>\n                                <button type=\"submit\" class=\"btn btn-google-primary\">\n                        Create account\n                    </button>\n                            </div>\n                        </form>\n                        <div class=\"text-center mt-4\">\n                            <p class=\"text-muted small mb-0\">\n                    Already have an account? \n                    \n                                <a href=\"/accounts/login/\" class=\"text-decoration-none\">\n                        Sign in\n                    </a>\n                            </p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </main>\n        <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js\"></script>\n        <script>\n    // Google Forms-style form field rendering\n    function renderFormField(field, value = '', userEditing = null) {\n        const isLocked = userEditing && userEditing.id !== window.currentUserId;\n        const lockClass = isLocked ? 'field-locked' : '';\n        const lockIcon = isLocked ? `\n            <i class=\"fas fa-lock text-warning ms-2\" title=\"Being edited by ${userEditing.username}\"></i>` : '';\n        \n        let fieldHtml = `\n            <div class=\"form-card mb-3 fade-in\" data-field-id=\"${field.id}\">\n                <div class=\"form-card-body\">\n                    <div class=\"d-flex justify-content-between align-items-start mb-3\">\n                        <div>\n                            <label class=\"form-label fw-normal\">${field.label}</label>\n                            ${field.is_required ? '\n                            <span class=\"text-danger ms-1\">*</span>' : ''}\n                            ${lockIcon}\n                        </div>\n                    </div>\n        `;\n        \n        switch(field.field_type) {\n            case 'text':\n            case 'email':\n            case 'url':\n                fieldHtml += `\n                    <div class=\"form-floating-google\">\n                        <input type=\"${field.field_type}\" \n                               class=\"form-input-google ${lockClass}\" \n                               id=\"field_${field.id}\" \n                               name=\"field_${field.id}\" \n                               placeholder=\" \"\n                               value=\"${value}\"\n                               ${field.is_required ? 'required' : ''}\n                               ${isLocked ? 'disabled' : ''}>\n                        <label for=\"field_${field.id}\">Your answer</label>\n                    </div>\n                `;\n                break;\n                \n            case 'date':\n                fieldHtml += `\n                    <div class=\"form-floating-google\">\n                        <input type=\"date\" \n                               class=\"form-input-google ${lockClass}\" \n                               id=\"field_${field.id}\" \n                               name=\"field_${field.id}\" \n                               value=\"${value}\"\n                               ${field.is_required ? 'required' : ''}\n                               ${isLocked ? 'disabled' : ''}>\n                        <label for=\"field_${field.id}\">Select date</label>\n                    </div>\n                `;\n                break;\n                \n            case 'textarea':\n                fieldHtml += `\n                    <div class=\"form-floating-google\">\n                        <textarea class=\"form-input-google ${lockClass}\" \n                                  id=\"field_${field.id}\" \n                                  name=\"field_${field.id}\" \n                                  placeholder=\" \"\n                                  rows=\"3\"\n                                  style=\"min-height: 100px; resize: vertical;\"\n                                  ${field.is_required ? 'required' : ''}\n                                  ${isLocked ? 'disabled' : ''}>${value}</textarea>\n                        <label for=\"field_${field.id}\">Your answer</label>\n                    </div>\n                `;\n                break;\n                \n            case 'number':\n                fieldHtml += `\n                    <div class=\"form-floating-google\">\n                        <input type=\"number\" \n                               class=\"form-input-google ${lockClass}\" \n                               id=\"field_${field.id}\" \n                               name=\"field_${field.id}\" \n                               placeholder=\" \"\n                               value=\"${value}\"\n                               ${field.is_required ? 'required' : ''}\n                               ${isLocked ? 'disabled' : ''}>\n                        <label for=\"field_${field.id}\">Your answer</label>\n                    </div>\n                `;\n                break;\n                \n            case 'select':\n            case 'dropdown':\n                fieldHtml += `\n                    <select class=\"form-input-google ${lockClass}\" \n                            id=\"field_${field.id}\" \n                            name=\"field_${field.id}\"\n                            ${field.is_required ? 'required' : ''}\n                            ${isLocked ? 'disabled' : ''}>\n                        <option value=\"\" disabled ${!value ? 'selected' : ''}>Choose</option>\n                        ${field.options.map(option => \n                            `\n                        <option value=\"${option}\" ${value === option ? 'selected' : ''}>${option}</option>`\n                        ).join('')}\n                    </select>\n                `;\n                break;\n                \n            case 'radio':\n                fieldHtml += `\n                    <div class=\"d-grid gap-2\">\n                        ${field.options.map((option, index) => `\n                            \n                        <div class=\"form-check\">\n                            <input class=\"form-check-input\" \n                                       type=\"radio\" \n                                       name=\"field_${field.id}\" \n                                       id=\"field_${field.id}_${index}\" \n                                       value=\"${option}\"\n                                       ${value === option ? 'checked' : ''}\n                                       ${isLocked ? 'disabled' : ''}>\n                            <label class=\"form-check-label\" for=\"field_${field.id}_${index}\">\n                                    ${option}\n                                </label>\n                        </div>\n                        `).join('')}\n                    </div>\n                `;\n                break;\n                \n            case 'checkbox':\n                const selectedValues = Array.isArray(value) ? value : (value ? [value] : []);\n                fieldHtml += `\n                    <div class=\"d-grid gap-2\">\n                        ${field.options.map((option, index) => `\n                            \n                        <div class=\"form-check\">\n                            <input class=\"form-check-input\" \n                                       type=\"checkbox\" \n                                       name=\"field_${field.id}\" \n                                       id=\"field_${field.id}_${index}\" \n                                       value=\"${option}\"\n                                       ${selectedValues.includes(option) ? 'checked' : ''}\n                                       ${isLocked ? 'disabled' : ''}>\n                            <label class=\"form-check-label\" for=\"field_${field.id}_${index}\">\n                                    ${option}\n                                </label>\n                        </div>\n                        `).join('')}\n                    </div>\n                `;\n                break;\n        }\n        \n        fieldHtml += `\n                </div>\n            </div>\n        `;\n        \n        return fieldHtml;\n    }\n    \n    // Show user avatars in a Google-style way\n    function renderUserAvatar(user, isEditing = false) {\n        const statusClass = isEditing ? 'status-editing' : 'status-online';\n        return `\n            <div class=\"d-flex align-items-center mb-2\" data-user-id=\"${user.id}\">\n                <div class=\"user-avatar me-2\">${user.username.charAt(0).toUpperCase()}</div>\n                <div class=\"flex-grow-1\">\n                    <div class=\"d-flex align-items-center\">\n                        <span class=\"status-indicator ${statusClass}\"></span>\n                        <span class=\"small fw-medium\">${user.username}</span>\n                    </div>\n                    <div class=\"text-muted\" style=\"font-size: 11px;\">\n                        ${isEditing ? 'Currently editing' : 'Active'}\n                    </div>\n                </div>\n            </div>\n        `;\n    }\n    \n    // Mobile user avatar rendering\n    function renderMobileUserAvatar(user, isEditing = false) {\n        const statusClass = isEditing ? 'status-editing' : 'status-online';\n        return `\n            <div class=\"user-avatar\" \n                 data-user-id=\"${user.id}\" \n                 title=\"${user.username} - ${isEditing ? 'Currently editing' : 'Active'}\"\n                 style=\"position: relative;\">\n                ${user.username.charAt(0).toUpperCase()}\n                \n                <span class=\"status-indicator ${statusClass}\" \n                      style=\"position: absolute; bottom: -2px; right: -2px; border: 1px solid white;\"></span>\n            </div>\n        `;\n    }\n    \n    // Option builder functionality\n    window.optionBuilders = {};\n    \n    function createOptionBuilder(containerId, initialOptions = []) {\n        const container = document.getElementById(containerId);\n        if (!container) return;\n        \n        const options = initialOptions.length > 0 ? initialOptions : ['Option 1'];\n        let optionCounter = options.length;\n        \n        function renderOptions() {\n            container.innerHTML = `\n            <div class=\"option-builder\">\n                <div class=\"mb-3\">\n                    <label class=\"form-label small text-muted mb-2\">Options</label>\n                    <div class=\"option-list\" id=\"option-list-${containerId}\">\n                            ${options.map((option, index) => `\n                                \n                        <div class=\"option-item\" data-index=\"${index}\">\n                            <div class=\"option-drag-handle\">\n                                <i class=\"fas fa-grip-vertical\"></i>\n                            </div>\n                            <div class=\"option-input-wrapper\">\n                                <input type=\"text\" \n                                               class=\"option-input\" \n                                               value=\"${option}\" \n                                               placeholder=\"Enter option text...\"\n                                               onchange=\"updateOption('${containerId}', ${index}, this.value)\"\n                                               onkeydown=\"handleOptionKeydown(event, '${containerId}', ${index})\">\n                                    \n                            </div>\n                                    ${options.length > 1 ? `\n                            <button type=\"button\" \n                                                class=\"option-remove\" \n                                                onclick=\"removeOption('${containerId}', ${index})\"\n                                                title=\"Remove option\">\n                                <i class=\"fas fa-times\"></i>\n                            </button>\n                                    ` : `\n                            <div class=\"option-remove-placeholder\"></div>\n                                    `}\n                        </div>\n                            `).join('')}\n                    </div>\n                    <button type=\"button\" \n                                class=\"option-add\" \n                                onclick=\"addOption('${containerId}')\"\n                                title=\"Add new option\">\n                        <i class=\"fas fa-plus\"></i>\n                        <span>Add option</span>\n                    </button>\n                </div>\n            </div>\n            `;\n            \n            // Initialize drag and drop for options\n            initializeOptionSorting(containerId);\n        }\n        \n        window.updateOption = function(builderId, index, value) {\n            if (window.optionBuilders[builderId]) {\n                window.optionBuilders[builderId].options[index] = value;\n                window.optionBuilders[builderId].updateHiddenInput();\n            }\n        };\n        \n        window.removeOption = function(builderId, index) {\n            if (window.optionBuilders[builderId] && window.optionBuilders[builderId].options.length > 1) {\n                window.optionBuilders[builderId].options.splice(index, 1);\n                window.optionBuilders[builderId].renderOptions();\n                window.optionBuilders[builderId].updateHiddenInput();\n            }\n        };\n        \n        window.addOption = function(builderId) {\n            if (window.optionBuilders[builderId]) {\n                const builder = window.optionBuilders[builderId];\n                builder.optionCounter++;\n                builder.options.push(`Option ${builder.optionCounter}`);\n                builder.renderOptions();\n                \n                // Focus on the new input\n                setTimeout(() => {\n                    const inputs = document.querySelectorAll(`#${builderId} .option-input`);\n                    const newInput = inputs[inputs.length - 1];\n                    if (newInput) {\n                        newInput.focus();\n                        newInput.select();\n                    }\n                }, 100);\n                \n                builder.updateHiddenInput();\n            }\n        };\n        \n        window.handleOptionKeydown = function(event, builderId, index) {\n            if (event.key === 'Enter') {\n                event.preventDefault();\n                addOption(builderId);\n            } else if (event.key === 'Backspace' && event.target.value === '' && window.optionBuilders[builderId].options.length > 1) {\n                event.preventDefault();\n                removeOption(builderId, index);\n                // Focus on previous input if available\n                setTimeout(() => {\n                    const inputs = document.querySelectorAll(`#${builderId} .option-input`);\n                    const prevInput = inputs[Math.max(0, index - 1)];\n                    if (prevInput) {\n                        prevInput.focus();\n                    }\n                }, 100);\n            }\n        };\n        \n        function updateHiddenInput() {\n            const hiddenInput = document.querySelector('[name=\"options_text\"]');\n            if (hiddenInput) {\n                hiddenInput.value = options.filter(opt => opt.trim()).join('\\n');\n            }\n        }\n        \n        function initializeOptionSorting(builderId) {\n            const optionList = document.getElementById(`option-list-${builderId}`);\n            if (optionList && window.Sortable) {\n                new Sortable(optionList, {\n                    handle: '.option-drag-handle',\n                    animation: 150,\n                    ghostClass: 'option-dragging',\n                    onEnd: function(evt) {\n                        const builder = window.optionBuilders[builderId];\n                        if (builder) {\n                            // Reorder the options array\n                            const movedOption = builder.options.splice(evt.oldIndex, 1)[0];\n                            builder.options.splice(evt.newIndex, 0, movedOption);\n                            builder.updateHiddenInput();\n                        }\n                    }\n                });\n            }\n        }\n        \n        renderOptions();\n        updateHiddenInput();\n        \n        window.optionBuilders[containerId] = {\n            options,\n            optionCounter,\n            renderOptions,\n            updateHiddenInput\n        };\n    }\n    \n    // Field type selector functionality\n    function createFieldTypeSelector(containerId, selectedType = '') {\n        const container = document.getElementById(containerId);\n        if (!container) return;\n        \n        const fieldTypes = [\n            { value: 'text', label: 'Short answer', icon: 'fas fa-font', description: 'Single line text input' },\n            { value: 'textarea', label: 'Paragraph', icon: 'fas fa-align-left', description: 'Multi-line text input' },\n            { value: 'radio', label: 'Multiple choice', icon: 'fas fa-circle-dot', description: 'Select one option' },\n            { value: 'checkbox', label: 'Checkboxes', icon: 'fas fa-check-square', description: 'Select multiple options' },\n            { value: 'dropdown', label: 'Dropdown', icon: 'fas fa-caret-down', description: 'Select from dropdown list' },\n            { value: 'number', label: 'Number', icon: 'fas fa-hashtag', description: 'Numeric input' },\n            { value: 'email', label: 'Email', icon: 'fas fa-envelope', description: 'Email address input' },\n            { value: 'date', label: 'Date', icon: 'fas fa-calendar-alt', description: 'Date picker input' }\n        ];\n        \n        container.innerHTML = `\n            <div class=\"field-type-grid\">\n                ${fieldTypes.map(type => `\n                    \n                <div class=\"field-type-option ${selectedType === type.value ? 'selected' : ''}\" \n                         data-type=\"${type.value}\"\n                         onclick=\"selectFieldType('${type.value}')\"\n                         title=\"${type.description}\">\n                    <i class=\"${type.icon}\"></i>\n                    <span>${type.label}</span>\n                </div>\n                `).join('')}\n            </div>\n        `;\n        \n        window.selectFieldType = function(type) {\n            // Update visual selection\n            container.querySelectorAll('.field-type-option').forEach(option => {\n                option.classList.toggle('selected', option.dataset.type === type);\n            });\n            \n            // Update hidden select\n            const hiddenSelect = document.querySelector('[name=\"field_type\"]');\n            if (hiddenSelect) {\n                hiddenSelect.value = type;\n            }\n            \n            // Show/hide options builder based on field type\n            const optionsContainer = document.getElementById('options-builder');\n            const needsOptions = ['radio', 'checkbox', 'dropdown'].includes(type);\n            if (optionsContainer) {\n                optionsContainer.style.display = needsOptions ? 'block' : 'none';\n                \n                // Initialize or update option builder if needed\n                if (needsOptions) {\n                    const builderContainer = document.getElementById('options-container');\n                    if (builderContainer && !window.optionBuilders['options-container']) {\n                        createOptionBuilder('options-container');\n                    }\n                }\n            }\n        };\n        \n        // Auto-select first option if none selected\n        if (!selectedType) {\n            selectFieldType('text');\n        }\n    }\n        </script>\n    </body>\n</html>"
				}
			]
		},
		{
			"name": "Get Dashboard",
			"request": {
				"method": "GET",
				"header": []
			},
			"response": [
				{
					"name": "Test User 1",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/html",
								"type": "text"
							},
							{
								"key": "Cookie",
								"value": "csrftoken={{csrf_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{local_url}}/forms/",
							"host": [
								"{{local_url}}"
							],
							"path": [
								"forms",
								""
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "html",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/html; charset=utf-8"
						},
						{
							"key": "Expires",
							"value": "Sat, 14 Jun 2025 08:30:19 GMT"
						},
						{
							"key": "Cache-Control",
							"value": "max-age=0, no-cache, no-store, must-revalidate, private"
						},
						{
							"key": "Vary",
							"value": "Cookie"
						},
						{
							"key": "X-Frame-Options",
							"value": "DENY"
						},
						{
							"key": "Content-Length",
							"value": "58066"
						},
						{
							"key": "X-Content-Type-Options",
							"value": "nosniff"
						},
						{
							"key": "Referrer-Policy",
							"value": "same-origin"
						},
						{
							"key": "Cross-Origin-Opener-Policy",
							"value": "same-origin"
						},
						{
							"key": "Set-Cookie",
							"value": "csrftoken=pS71uVLEU6GUXotyBOOShxFpiGnS3SJL; expires=Sat, 13 Jun 2026 08:30:19 GMT; Max-Age=31449600; Path=/; SameSite=Lax"
						},
						{
							"key": "Server",
							"value": "daphne"
						}
					],
					"cookie": [],
					"body": "<!DOCTYPE html>\n<html lang=\"en\">\n    <head>\n        <meta charset=\"UTF-8\">\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n        <title>Sign in - CollabForms</title>\n        <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css\" rel=\"stylesheet\">\n        <link href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css\" rel=\"stylesheet\">\n        <link href=\"https://fonts.googleapis.com/css2?family=Google+Sans:wght@300;400;500;600;700&family=Roboto:wght@300;400;500;600;700&display=swap\" rel=\"stylesheet\">\n        <style>\n        :root {\n            /* Google Forms exact color palette */\n            --primary-color: #1a73e8;\n            --primary-hover: #1557b0;\n            --secondary-color: #5f6368;\n            --text-primary: #202124;\n            --text-secondary: #5f6368;\n            --text-muted: #9aa0a6;\n            --border-color: #dadce0;\n            --border-focus: #4285f4;\n            --background-primary: #ffffff;\n            --background-secondary: #f1f3f4;\n            --background-tertiary: #e8eaed;\n            --surface-color: #ffffff;\n            --surface-raised: #ffffff;\n            --shadow-light: 0 1px 2px 0 rgba(60,64,67,.3), 0 1px 3px 1px rgba(60,64,67,.15);\n            --shadow-medium: 0 1px 3px 0 rgba(60,64,67,.3), 0 4px 8px 3px rgba(60,64,67,.15);\n            --shadow-heavy: 0 2px 6px 2px rgba(60,64,67,.15), 0 8px 24px 4px rgba(60,64,67,.15);\n            --success-color: #34a853;\n            --warning-color: #fbbc04;\n            --error-color: #ea4335;\n            --purple-accent: #9c27b0;\n            --forms-purple: #673ab7;\n        }\n        \n        * {\n            font-family: 'Google Sans', 'Roboto', -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif;\n        }\n        \n        body {\n            background-color: var(--background-secondary);\n            color: var(--text-primary);\n            line-height: 1.6;\n            font-size: 14px;\n            margin: 0;\n            padding: 0;\n        }\n        \n        /* Google Forms-style header */\n        .navbar {\n            background: var(--surface-color) !important;\n            border-bottom: 1px solid var(--border-color);\n            box-shadow: var(--shadow-light);\n            min-height: 64px;\n            padding: 0;\n        }\n        \n        .navbar-brand {\n            font-family: 'Google Sans', sans-serif;\n            font-weight: 500;\n            color: var(--text-primary) !important;\n            font-size: 22px;\n            padding: 0;\n            margin: 0;\n        }\n        \n        .navbar-brand i {\n            color: var(--forms-purple);\n            margin-right: 8px;\n        }\n        \n        /* Google Forms-style cards */\n        .form-card {\n            background: var(--surface-color);\n            border: 1px solid var(--border-color);\n            border-radius: 8px;\n            box-shadow: var(--shadow-light);\n            transition: all 0.2s cubic-bezier(0.4,0,0.2,1);\n            overflow: hidden;\n        }\n        \n        .form-card:hover {\n            box-shadow: var(--shadow-medium);\n        }\n        \n        .form-card-header {\n            border-top: 10px solid var(--forms-purple);\n            padding: 24px 24px 0 24px;\n            background: var(--surface-color);\n        }\n        \n        .form-card-body {\n            padding: 24px;\n        }\n        \n        /* Google Forms-style buttons */\n        .btn-google-primary {\n            background-color: var(--primary-color);\n            border: none;\n            color: white;\n            border-radius: 4px;\n            font-weight: 500;\n            font-size: 14px;\n            padding: 8px 24px;\n            height: 40px;\n            transition: all 0.2s cubic-bezier(0.4,0,0.2,1);\n            text-transform: none;\n            box-shadow: none;\n        }\n        \n        .btn-google-primary:hover {\n            background-color: var(--primary-hover);\n            color: white;\n            box-shadow: 0 1px 2px 0 rgba(60,64,67,.3), 0 1px 3px 1px rgba(60,64,67,.15);\n        }\n        \n        .btn-google-secondary {\n            background-color: transparent;\n            border: 1px solid var(--border-color);\n            color: var(--primary-color);\n            border-radius: 4px;\n            font-weight: 500;\n            font-size: 14px;\n            padding: 8px 24px;\n            height: 40px;\n            transition: all 0.2s cubic-bezier(0.4,0,0.2,1);\n            text-transform: none;\n        }\n        \n        .btn-google-secondary:hover {\n            background-color: rgba(26, 115, 232, 0.04);\n            border-color: var(--primary-color);\n            color: var(--primary-color);\n        }\n        \n        .btn-google-text {\n            background: transparent;\n            border: none;\n            color: var(--primary-color);\n            font-weight: 500;\n            font-size: 14px;\n            padding: 8px 16px;\n            border-radius: 4px;\n            transition: all 0.2s cubic-bezier(0.4,0,0.2,1);\n        }\n        \n        .btn-google-text:hover {\n            background-color: rgba(26, 115, 232, 0.04);\n            color: var(--primary-color);\n        }\n        \n        /* Google Forms-style form inputs */\n        .form-input-google {\n            border: none;\n            border-bottom: 1px solid var(--border-color);\n            border-radius: 4px 4px 0 0;\n            background-color: #f8f9fa;\n            padding: 16px 16px 6px 16px;\n            font-size: 16px;\n            line-height: 1.5;\n            transition: all 0.2s cubic-bezier(0.4,0,0.2,1);\n            width: 100%;\n        }\n        \n        .form-input-google:focus {\n            outline: none;\n            border-bottom: 2px solid var(--primary-color);\n            background-color: #fafbfc;\n            box-shadow: 0 2px 4px rgba(26, 115, 232, 0.1);\n        }\n        \n        .form-floating-google {\n            position: relative;\n        }\n        \n        .form-floating-google > .form-input-google {\n            padding-top: 20px;\n            padding-bottom: 4px;\n        }\n        \n        .form-floating-google > label {\n            position: absolute;\n            top: 0;\n            left: 16px;\n            padding-top: 16px;\n            color: var(--text-secondary);\n            font-size: 16px;\n            font-weight: 400;\n            transition: all 0.2s cubic-bezier(0.4,0,0.2,1);\n            pointer-events: none;\n            transform-origin: 0 0;\n        }\n        \n        .form-floating-google > .form-input-google:focus ~ label,\n        .form-floating-google > .form-input-google:not(:placeholder-shown) ~ label {\n            transform: translateY(-50%) scale(0.75);\n            color: var(--primary-color);\n            padding-top: 4px;\n        }\n        \n        /* User avatar */\n        .user-avatar {\n            width: 32px;\n            height: 32px;\n            border-radius: 50%;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            color: white;\n            font-weight: 500;\n            font-size: 14px;\n            background: linear-gradient(135deg, var(--primary-color), var(--forms-purple));\n        }\n        \n        /* Connection status */\n        .connection-status {\n            position: fixed;\n            bottom: 24px;\n            right: 24px;\n            z-index: 1050;\n            border-radius: 4px;\n            padding: 8px 16px;\n            font-size: 14px;\n            font-weight: 500;\n            box-shadow: var(--shadow-medium);\n        }\n        \n        .connection-connected {\n            background-color: var(--success-color);\n            color: white;\n        }\n        \n        .connection-connecting {\n            background-color: var(--warning-color);\n            color: var(--text-primary);\n        }\n        \n        .connection-disconnected {\n            background-color: var(--error-color);\n            color: white;\n        }\n        \n        /* Page layouts */\n        .page-container {\n            max-width: 768px;\n            margin: 0 auto;\n            padding: 0 16px;\n        }\n        \n        .page-container-wide {\n            max-width: 1200px;\n            margin: 0 auto;\n            padding: 0 16px;\n        }\n        \n        .auth-container {\n            min-height: 100vh;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n            padding: 24px;\n        }\n        \n        .auth-card {\n            background: var(--surface-color);\n            border-radius: 12px;\n            box-shadow: var(--shadow-heavy);\n            width: 100%;\n            max-width: 420px;\n            overflow: hidden;\n        }\n        \n        .auth-header {\n            text-align: center;\n            padding: 48px 48px 24px 48px;\n        }\n        \n        .auth-body {\n            padding: 0 48px 48px 48px;\n        }\n        \n        .auth-logo {\n            color: var(--forms-purple);\n            font-size: 48px;\n            margin-bottom: 24px;\n        }\n        \n        .auth-title {\n            font-size: 24px;\n            font-weight: 400;\n            color: var(--text-primary);\n            margin-bottom: 8px;\n        }\n        \n        .auth-subtitle {\n            font-size: 16px;\n            color: var(--text-secondary);\n            margin-bottom: 0;\n        }\n        \n        /* Dropdown menus */\n        .dropdown-menu {\n            border: 1px solid var(--border-color);\n            border-radius: 8px;\n            box-shadow: var(--shadow-medium);\n            padding: 8px 0;\n            min-width: 200px;\n        }\n        \n        .dropdown-item {\n            padding: 12px 16px;\n            font-size: 14px;\n            color: var(--text-primary);\n            border: none;\n            background: none;\n            transition: background-color 0.2s cubic-bezier(0.4,0,0.2,1);\n        }\n        \n        .dropdown-item:hover {\n            background-color: var(--background-tertiary);\n            color: var(--text-primary);\n        }\n        \n        .dropdown-divider {\n            margin: 8px 0;\n            border-top: 1px solid var(--border-color);\n        }\n        \n        /* Alert messages */\n        .alert {\n            border-radius: 4px;\n            border: none;\n            font-size: 14px;\n            padding: 16px;\n            margin-bottom: 16px;\n        }\n        \n        .alert-success {\n            background-color: #e8f5e8;\n            color: #1e7e34;\n        }\n        \n        .alert-warning {\n            background-color: #fff3cd;\n            color: #856404;\n        }\n        \n        .alert-danger {\n            background-color: #f8d7da;\n            color: #721c24;\n        }\n        \n        .alert-info {\n            background-color: #d1ecf1;\n            color: #0c5460;\n        }\n        \n        /* Loading animations */\n        .loading-spinner {\n            display: inline-block;\n            width: 16px;\n            height: 16px;\n            border: 2px solid var(--border-color);\n            border-radius: 50%;\n            border-top-color: var(--primary-color);\n            animation: spin 1s linear infinite;\n        }\n        \n        @keyframes spin {\n            to { transform: rotate(360deg); }\n        }\n        \n        .fade-in {\n            animation: fadeIn 0.3s cubic-bezier(0.4,0,0.2,1);\n        }\n        \n        @keyframes fadeIn {\n            from { opacity: 0; transform: translateY(8px); }\n            to { opacity: 1; transform: translateY(0); }\n        }\n        \n        /* Option builder styles */\n        .option-builder {\n            width: 100%;\n        }\n        \n        .option-item {\n            display: flex;\n            align-items: center;\n            gap: 8px;\n            margin-bottom: 8px;\n            padding: 8px;\n            border: 1px solid var(--border-color);\n            border-radius: 4px;\n            background-color: var(--surface-color);\n            transition: all 0.2s cubic-bezier(0.4,0,0.2,1);\n        }\n        \n        .option-item:hover {\n            border-color: var(--primary-color);\n        }\n        \n        .option-item .field-handle {\n            color: var(--text-muted);\n            cursor: grab;\n            padding: 4px;\n        }\n        \n        .option-item .field-handle:active {\n            cursor: grabbing;\n        }\n        \n        .option-input {\n            flex: 1;\n            border: none;\n            outline: none;\n            background: transparent;\n            font-size: 14px;\n            color: var(--text-primary);\n            padding: 4px 0;\n        }\n        \n        .option-input::placeholder {\n            color: var(--text-muted);\n        }\n        \n        .option-remove {\n            background: transparent;\n            border: none;\n            color: var(--text-muted);\n            padding: 4px;\n            border-radius: 3px;\n            transition: all 0.2s cubic-bezier(0.4,0,0.2,1);\n            cursor: pointer;\n        }\n        \n        .option-remove:hover {\n            background-color: var(--error-color);\n            color: white;\n        }\n        \n        .option-add {\n            display: flex;\n            align-items: center;\n            gap: 8px;\n            width: 100%;\n            background: transparent;\n            border: 1px dashed var(--border-color);\n            border-radius: 4px;\n            padding: 12px;\n            color: var(--primary-color);\n            font-size: 14px;\n            font-weight: 500;\n            transition: all 0.2s cubic-bezier(0.4,0,0.2,1);\n            cursor: pointer;\n            margin-top: 4px;\n        }\n        \n        .option-add:hover {\n            background-color: rgba(26, 115, 232, 0.04);\n            border-color: var(--primary-color);\n        }\n        \n        .option-add i {\n            font-size: 12px;\n        }\n        \n        /* Field type selector styles */\n        .field-type-grid {\n            display: grid;\n            grid-template-columns: repeat(auto-fit, minmax(140px, 1fr));\n            gap: 8px;\n            margin-bottom: 16px;\n        }\n        \n        .field-type-option {\n            display: flex;\n            flex-direction: column;\n            align-items: center;\n            gap: 6px;\n            padding: 16px 8px;\n            border: 1px solid var(--border-color);\n            border-radius: 6px;\n            background-color: var(--surface-color);\n            cursor: pointer;\n            transition: all 0.2s cubic-bezier(0.4,0,0.2,1);\n            text-align: center;\n            position: relative;\n            overflow: hidden;\n        }\n        \n        .field-type-option:hover {\n            border-color: var(--primary-color);\n            background-color: rgba(26, 115, 232, 0.04);\n        }\n        \n        .field-type-option.selected {\n            border-color: var(--primary-color);\n            background-color: rgba(26, 115, 232, 0.08);\n            color: var(--primary-color);\n        }\n        \n        .field-type-option i {\n            font-size: 18px;\n            color: var(--text-secondary);\n            transition: color 0.2s cubic-bezier(0.4,0,0.2,1);\n        }\n        \n        .field-type-option.selected i {\n            color: var(--primary-color);\n        }\n        \n        .field-type-option span {\n            font-size: 12px;\n            font-weight: 500;\n            color: var(--text-primary);\n        }\n        \n        /* Enhanced responsive design */\n        /* Enhanced responsive design for different screen sizes */\n        \n        /* Mobile First - Base styles for small devices */\n        @media (max-width: 575.98px) {\n            .page-container {\n                padding: 0 8px;\n                max-width: 100%;\n            }\n            \n            .page-container-wide {\n                padding: 0 8px;\n                max-width: 100%;\n            }\n            \n            .auth-container {\n                padding: 16px;\n                min-height: 100vh;\n            }\n            \n            .auth-header {\n                padding: 32px 20px 20px 20px;\n            }\n            \n            .auth-body {\n                padding: 0 20px 32px 20px;\n            }\n            \n            .form-group-google {\n                margin-bottom: 20px;\n            }\n            \n            .navbar-brand {\n                font-size: 18px;\n            }\n            \n            .form-card-body {\n                padding: 16px;\n            }\n            \n            .form-card-header {\n                padding: 16px 16px 0 16px;\n            }\n            \n            .field-type-grid {\n                grid-template-columns: repeat(2, 1fr);\n                gap: 6px;\n            }\n            \n            .field-type-option {\n                padding: 12px 6px;\n                min-height: 70px;\n            }\n            \n            .field-type-option i {\n                font-size: 16px;\n                margin-bottom: 4px;\n            }\n            \n            .field-type-option span {\n                font-size: 10px;\n                line-height: 1.2;\n            }\n            \n            .page-header .d-flex {\n                flex-direction: column;\n                align-items: stretch !important;\n                gap: 12px;\n            }\n            \n            .btn-group {\n                width: 100%;\n                flex-direction: column;\n            }\n            \n            .btn-group .btn {\n                flex: 1;\n                margin-left: 0;\n                margin-bottom: 4px;\n            }\n            \n            .option-item {\n                flex-wrap: wrap;\n                gap: 6px;\n            }\n            \n            .option-input-wrapper {\n                flex: 1;\n                min-width: 200px;\n                margin: 0;\n            }\n        }\n        \n        /* Small devices - tablets portrait */\n        @media (min-width: 576px) and (max-width: 767.98px) {\n            .page-container {\n                padding: 0 12px;\n                max-width: 540px;\n            }\n            \n            .page-container-wide {\n                padding: 0 12px;\n                max-width: 720px;\n            }\n            \n            .auth-container {\n                padding: 20px;\n            }\n            \n            .auth-header {\n                padding: 40px 28px 20px 28px;\n            }\n            \n            .auth-body {\n                padding: 0 28px 40px 28px;\n            }\n            \n            .form-group-google {\n                margin-bottom: 22px;\n            }\n            \n            .field-type-grid {\n                grid-template-columns: repeat(3, 1fr);\n                gap: 8px;\n            }\n            \n            .field-type-option {\n                padding: 14px 8px;\n                min-height: 80px;\n            }\n            \n            .field-type-option i {\n                font-size: 18px;\n                margin-bottom: 6px;\n            }\n            \n            .field-type-option span {\n                font-size: 11px;\n            }\n        }\n        \n        /* Medium devices - tablets landscape */\n        @media (min-width: 768px) and (max-width: 991.98px) {\n            .page-container {\n                padding: 0 16px;\n                max-width: 720px;\n            }\n            \n            .page-container-wide {\n                padding: 0 16px;\n                max-width: 960px;\n            }\n            \n            .form-card-body {\n                padding: 20px;\n            }\n            \n            .form-card-header {\n                padding: 20px 20px 0 20px;\n            }\n            \n            .field-type-grid {\n                grid-template-columns: repeat(4, 1fr);\n                gap: 8px;\n            }\n            \n            .field-type-option {\n                padding: 16px 10px;\n                min-height: 85px;\n            }\n            \n            .field-type-option i {\n                font-size: 20px;\n                margin-bottom: 8px;\n            }\n            \n            .field-type-option span {\n                font-size: 12px;\n            }\n        }\n        \n        /* Large devices - small laptops */\n        @media (min-width: 992px) and (max-width: 1199.98px) {\n            .page-container {\n                padding: 0 20px;\n                max-width: 960px;\n            }\n            \n            .page-container-wide {\n                padding: 0 20px;\n                max-width: 1140px;\n            }\n            \n            .field-type-grid {\n                grid-template-columns: repeat(4, 1fr);\n                gap: 10px;\n            }\n            \n            .field-type-option {\n                padding: 18px 12px;\n                min-height: 90px;\n            }\n            \n            .field-type-option i {\n                font-size: 22px;\n                margin-bottom: 8px;\n            }\n            \n            .field-type-option span {\n                font-size: 13px;\n            }\n        }\n        \n        /* Extra large devices - large laptops and desktops */\n        @media (min-width: 1200px) and (max-width: 1399.98px) {\n            .page-container {\n                padding: 0 24px;\n                max-width: 1140px;\n            }\n            \n            .page-container-wide {\n                padding: 0 24px;\n                max-width: 1320px;\n            }\n            \n            .field-type-grid {\n                grid-template-columns: repeat(4, 1fr);\n                gap: 12px;\n            }\n            \n            .field-type-option {\n                padding: 20px 14px;\n                min-height: 95px;\n            }\n            \n            .field-type-option i {\n                font-size: 24px;\n                margin-bottom: 10px;\n            }\n            \n            .field-type-option span {\n                font-size: 14px;\n            }\n        }\n        \n        /* Extra extra large devices - large monitors */\n        @media (min-width: 1400px) {\n            .page-container {\n                padding: 0 30px;\n                max-width: 1200px;\n            }\n            \n            .page-container-wide {\n                padding: 0 30px;\n                max-width: 1600px;\n            }\n            \n            .field-type-grid {\n                grid-template-columns: repeat(4, 1fr);\n                gap: 15px;\n            }\n            \n            .field-type-option {\n                padding: 22px 16px;\n                min-height: 100px;\n            }\n            \n            .field-type-option i {\n                font-size: 26px;\n                margin-bottom: 12px;\n            }\n            \n            .field-type-option span {\n                font-size: 15px;\n            }\n        }\n        \n        /* Laptop-specific fixes for alignment issues */\n        @media (min-width: 1024px) and (max-width: 1440px) and (orientation: landscape) {\n            /* Common laptop resolution fixes */\n            .row.g-4 {\n                --bs-gutter-x: 2rem;\n                --bs-gutter-y: 2rem;\n            }\n            \n            .col-xl-8, .col-lg-7 {\n                flex: 0 0 auto;\n                width: 66.66666667%;\n            }\n            \n            .col-xl-4, .col-lg-5 {\n                flex: 0 0 auto;\n                width: 33.33333333%;\n            }\n            \n            .sticky-form-panel {\n                position: sticky;\n                top: 24px;\n                height: fit-content;\n                max-height: calc(100vh - 48px);\n                overflow-y: auto;\n            }\n            \n            /* Better spacing for form elements */\n            .form-group-google {\n                margin-bottom: 1.5rem;\n            }\n            \n            .option-builder {\n                max-height: 300px;\n                overflow-y: auto;\n                border: 1px solid var(--border-color);\n                border-radius: 6px;\n                padding: 12px;\n            }\n            \n            /* Improved field item layout */\n            .field-item {\n                margin-bottom: 1rem;\n                padding: 1.25rem;\n            }\n            \n            .field-item .d-flex {\n                align-items: flex-start;\n                gap: 1rem;\n            }\n            \n            /* Better button alignment */\n            .d-flex.gap-2 {\n                gap: 0.75rem !important;\n            }\n            \n            .d-flex.gap-3 {\n                gap: 1rem !important;\n            }\n        }\n        \n        /* Ultra-wide screen optimizations */\n        @media (min-width: 1920px) {\n            .page-container-wide {\n                max-width: 1800px;\n            }\n            \n            .row.g-4 {\n                --bs-gutter-x: 3rem;\n            }\n            \n            .form-card {\n                box-shadow: var(--shadow-medium);\n            }\n        }\n        \n        /* Height-based responsive adjustments */\n        @media (max-height: 700px) and (min-width: 992px) {\n            .sticky-form-panel {\n                position: static;\n            }\n            \n            .form-card-body {\n                padding: 16px;\n            }\n            \n            .form-group-google {\n                margin-bottom: 1rem;\n            }\n        }\n        \n        /* High DPI screen adjustments */\n        @media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi) {\n            .form-card {\n                border-width: 0.5px;\n            }\n            \n            .option-item {\n                border-width: 0.5px;\n            }\n            \n            .field-type-option {\n                border-width: 0.5px;\n            }\n        }\n        \n        /* Additional utility classes for better alignment */\n        .status-indicator {\n            width: 8px;\n            height: 8px;\n            border-radius: 50%;\n            margin-right: 6px;\n            flex-shrink: 0;\n        }\n        \n        .status-online {\n            background-color: var(--success-color);\n        }\n        \n        .status-editing {\n            background-color: var(--warning-color);\n            animation: pulse 2s infinite;\n        }\n        \n        @keyframes pulse {\n            0% { opacity: 1; }\n            50% { opacity: 0.5; }\n            100% { opacity: 1; }\n        }\n        \n        /* Field handle for drag and drop */\n        .field-handle {\n            color: var(--text-muted);\n            cursor: grab;\n            padding: 4px;\n            transition: color 0.2s cubic-bezier(0.4,0,0.2,1);\n        }\n        \n        .field-handle:hover {\n            color: var(--text-secondary);\n        }\n        \n        .field-handle:active {\n            cursor: grabbing;\n        }\n        \n        /* Field item styles */\n        .field-item {\n            transition: all 0.2s cubic-bezier(0.4,0,0.2,1);\n        }\n        \n        .field-item:hover {\n            box-shadow: var(--shadow-light);\n        }\n        \n        .field-item.dragging {\n            opacity: 0.7;\n            transform: rotate(5deg);\n        }\n        \n        /* Better form input focus states */\n        .form-input-google:focus {\n            outline: none;\n            border-bottom: 2px solid var(--primary-color);\n            background-color: #fafbfc;\n            box-shadow: 0 2px 4px rgba(26, 115, 232, 0.1);\n        }\n        \n        /* Improved checkbox and radio styles */\n        .form-check-input:checked {\n            background-color: var(--primary-color);\n            border-color: var(--primary-color);\n        }\n        \n        .form-check-input:focus {\n            border-color: var(--primary-color);\n            outline: none;\n            box-shadow: 0 0 0 0.25rem rgba(26, 115, 232, 0.25);\n        }\n        \n        /* Page header improvements */\n        .page-header {\n            background-color: var(--surface-color);\n            border-bottom: 1px solid var(--border-color);\n            margin-bottom: 0;\n        }\n        \n        /* Better button spacing in groups */\n        .btn-group .btn,\n        .d-flex .btn + .btn {\n            margin-left: 8px;\n        }\n        \n        /* Better form field error states */\n        .form-input-google.is-invalid {\n            border-bottom-color: var(--error-color);\n        }\n        \n        .form-input-google.is-invalid:focus {\n            border-bottom-color: var(--error-color);\n            box-shadow: 0 2px 4px rgba(234, 67, 53, 0.1);\n        }\n        \n        /* Consistent border radius */\n        .rounded {\n            border-radius: 6px !important;\n        }\n        \n        .rounded-pill {\n            border-radius: 16px !important;\n        }\n        \n        /* Enhanced option builder styles */\n        .option-list {\n            margin-bottom: 12px;\n        }\n        \n        .option-drag-handle {\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            width: 24px;\n            height: 24px;\n            color: var(--text-muted);\n            cursor: grab;\n            border-radius: 3px;\n            transition: all 0.2s cubic-bezier(0.4,0,0.2,1);\n        }\n        \n        .option-drag-handle:hover {\n            background-color: var(--background-tertiary);\n            color: var(--text-secondary);\n        }\n        \n        .option-drag-handle:active {\n            cursor: grabbing;\n        }\n        \n        .option-input-wrapper {\n            flex: 1;\n            margin: 0 8px;\n        }\n        \n        .option-remove-placeholder {\n            width: 24px;\n            height: 24px;\n        }\n        \n        .option-dragging {\n            opacity: 0.5;\n            transform: rotate(2deg);\n        }\n        \n        .option-item:last-child .option-input {\n            border-bottom-color: transparent;\n        }\n        \n        .option-item .option-input:focus {\n            border-bottom-color: var(--primary-color);\n        }\n        \n        /* Field type option hover effects */\n        .field-type-option {\n            position: relative;\n            overflow: hidden;\n        }\n        \n        .field-type-option::before {\n            content: '';\n            position: absolute;\n            top: 0;\n            left: -100%;\n            width: 100%;\n            height: 100%;\n            background: linear-gradient(90deg, transparent, rgba(26, 115, 232, 0.1), transparent);\n            transition: left 0.5s ease;\n        }\n        \n        .field-type-option:hover::before {\n            left: 100%;\n        }\n        \n        /* Form validation styles */\n        .is-invalid .option-input {\n            border-bottom-color: var(--error-color);\n        }\n        \n        .invalid-feedback {\n            color: var(--error-color);\n            font-size: 12px;\n            margin-top: 4px;\n        }\n        \n        /* Loading state for option builder */\n        .option-builder.loading {\n            opacity: 0.6;\n            pointer-events: none;\n        }\n        \n        .option-builder.loading::after {\n            content: '';\n            position: absolute;\n            top: 50%;\n            left: 50%;\n            transform: translate(-50%, -50%);\n            width: 20px;\n            height: 20px;\n            border: 2px solid var(--border-color);\n            border-top-color: var(--primary-color);\n            border-radius: 50%;\n            animation: spin 1s linear infinite;\n        }\n        \n        /* Dashboard specific responsive improvements */\n        .dashboard-stats {\n            margin-bottom: 2rem;\n        }\n        \n        .dashboard-stats .form-card {\n            transition: all 0.3s cubic-bezier(0.4,0,0.2,1);\n        }\n        \n        .dashboard-stats .form-card:hover {\n            transform: translateY(-2px);\n            box-shadow: var(--shadow-medium);\n        }\n        \n        /* Forms grid responsive layout */\n        @media (min-width: 1200px) {\n            .forms-grid .col-xl-4 {\n                flex: 0 0 auto;\n                width: 33.333333%;\n            }\n        }\n        \n        @media (min-width: 992px) and (max-width: 1199.98px) {\n            .forms-grid .col-lg-6 {\n                flex: 0 0 auto;\n                width: 50%;\n            }\n        }\n        \n        @media (max-width: 991.98px) {\n            .forms-grid .col-md-12 {\n                flex: 0 0 auto;\n                width: 100%;\n            }\n        }\n        \n        /* Better button groups on mobile */\n        @media (max-width: 767.98px) {\n            .btn-group-mobile {\n                display: flex;\n                flex-direction: column;\n                gap: 8px;\n                width: 100%;\n            }\n            \n            .btn-group-mobile .btn {\n                width: 100%;\n                margin-left: 0;\n            }\n            \n            .page-header .d-flex {\n                flex-direction: column;\n                align-items: stretch !important;\n                gap: 16px;\n            }\n            \n            .page-header .flex-grow-1 {\n                text-align: center;\n            }\n        }\n        \n        /* Form card improvements for different screen sizes */\n        .form-item-card {\n            transition: all 0.2s cubic-bezier(0.4,0,0.2,1);\n            height: 100%;\n            display: flex;\n            flex-direction: column;\n        }\n        \n        .form-item-card:hover {\n            transform: translateY(-1px);\n            box-shadow: var(--shadow-light);\n        }\n        \n        .form-item-card .form-item-content {\n            flex: 1;\n            display: flex;\n            flex-direction: column;\n        }\n        \n        .form-item-card .form-item-footer {\n            margin-top: auto;\n            padding-top: 12px;\n        }\n        \n        /* Enhanced responsiveness for collaboration UI */\n        .collaboration-panel {\n            position: sticky;\n            top: 24px;\n            max-height: calc(100vh - 48px);\n            overflow-y: auto;\n        }\n        \n        @media (max-width: 991.98px) {\n            .collaboration-panel {\n                position: static;\n                max-height: none;\n            }\n        }\n        \n        /* Better form field spacing on different screen sizes */\n        @media (min-width: 768px) and (max-width: 1023.98px) {\n            .form-group-google {\n                margin-bottom: 1.25rem;\n            }\n            \n            .field-type-grid {\n                gap: 8px;\n            }\n            \n            .option-builder {\n                padding: 14px;\n            }\n        }\n        \n        /* Ultra-wide screen optimizations */\n        @media (min-width: 1600px) {\n            .page-container-wide {\n                max-width: 1500px;\n            }\n            \n            .forms-grid {\n                --bs-gutter-x: 2rem;\n            }\n            \n            .dashboard-stats {\n                --bs-gutter-x: 1.5rem;\n            }\n        }\n        \n        /* Print styles */\n        @media print {\n            .page-header,\n            .btn,\n            .dropdown,\n            .connection-status,\n            .navbar {\n                display: none !important;\n            }\n            \n            .form-card {\n                border: 1px solid #ddd !important;\n                box-shadow: none !important;\n                page-break-inside: avoid;\n            }\n            \n            .page-container,\n            .page-container-wide {\n                max-width: none !important;\n                padding: 0 !important;\n            }\n        }\n        \n        /* Google Forms-style form groups */\n        .form-group-google {\n            margin-bottom: 24px;\n            position: relative;\n        }\n        \n        .form-error {\n            color: var(--error-color);\n            font-size: 12px;\n            margin-top: 6px;\n            font-weight: 400;\n        }\n        \n        .form-help {\n            color: var(--text-muted);\n            font-size: 12px;\n            margin-top: 6px;\n            line-height: 1.4;\n        }\n    </style>\n    </head>\n    <body>\n        <nav class=\"navbar navbar-expand-lg\">\n            <div class=\"container-fluid px-4\">\n                <a class=\"navbar-brand d-flex align-items-center\" href=\"/forms/\">\n                    <i class=\"fas fa-poll-h me-2\"></i>\n                CollabForms\n                </a>\n                <div class=\"navbar-nav ms-auto\">\n                    <a class=\"btn btn-google-text me-2\" href=\"/accounts/login/\">\n                        <i class=\"fas fa-sign-in-alt me-1\"></i>Sign in\n                    </a>\n                    <a class=\"btn btn-google-primary\" href=\"/accounts/register/\">\n                        <i class=\"fas fa-user-plus me-1\"></i>Sign up\n                    </a>\n                </div>\n            </div>\n        </nav>\n        <main>\n            <div class=\"auth-container\">\n                <div class=\"auth-card\">\n                    <div class=\"auth-header\">\n                        <div class=\"auth-logo\">\n                            <i class=\"fas fa-poll-h\"></i>\n                        </div>\n                        <h1 class=\"auth-title\">Sign in</h1>\n                        <p class=\"auth-subtitle\">to continue to CollabForms</p>\n                    </div>\n                    <div class=\"auth-body\">\n                        <form method=\"post\" novalidate>\n                            <input type=\"hidden\" name=\"csrfmiddlewaretoken\" value=\"xSjtjnUn237i7HQDhJ4xlsVWRZEdEXSJMAgkD8vRMZD2UV91InIfsPqbZvRVxFrk\">\n                            <div class=\"form-group-google\">\n                                <div class=\"form-floating-google\">\n                                    <input type=\"text\" \n                               class=\"form-input-google\" \n                               id=\"id_username\" \n                               name=\"username\" \n                               placeholder=\" \"\n                               value=\"\"\n                               required>\n                                    <label for=\"id_username\">Username</label>\n                                </div>\n                            </div>\n                            <div class=\"form-group-google\">\n                                <div class=\"form-floating-google\">\n                                    <input type=\"password\" \n                               class=\"form-input-google\" \n                               id=\"id_password\" \n                               name=\"password\" \n                               placeholder=\" \"\n                               required>\n                                    <label for=\"id_password\">Password</label>\n                                </div>\n                            </div>\n                            <div class=\"d-flex justify-content-between align-items-center mb-4 mt-2\">\n                                <a href=\"/accounts/register/\" class=\"btn-google-text p-0\">\n                        Create account\n                    </a>\n                                <button type=\"submit\" class=\"btn btn-google-primary\">\n                        Sign in\n                    </button>\n                            </div>\n                        </form>\n                        <div class=\"text-center mt-4\">\n                            <p class=\"text-muted small mb-0\">\n                    New to CollabForms? \n                    \n                                <a href=\"/accounts/register/\" class=\"text-decoration-none\">\n                        Create an account\n                    </a>\n                            </p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </main>\n        <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js\"></script>\n        <script>\n    // Google Forms-style form field rendering\n    function renderFormField(field, value = '', userEditing = null) {\n        const isLocked = userEditing && userEditing.id !== window.currentUserId;\n        const lockClass = isLocked ? 'field-locked' : '';\n        const lockIcon = isLocked ? `\n            <i class=\"fas fa-lock text-warning ms-2\" title=\"Being edited by ${userEditing.username}\"></i>` : '';\n        \n        let fieldHtml = `\n            <div class=\"form-card mb-3 fade-in\" data-field-id=\"${field.id}\">\n                <div class=\"form-card-body\">\n                    <div class=\"d-flex justify-content-between align-items-start mb-3\">\n                        <div>\n                            <label class=\"form-label fw-normal\">${field.label}</label>\n                            ${field.is_required ? '\n                            <span class=\"text-danger ms-1\">*</span>' : ''}\n                            ${lockIcon}\n                        </div>\n                    </div>\n        `;\n        \n        switch(field.field_type) {\n            case 'text':\n            case 'email':\n            case 'url':\n                fieldHtml += `\n                    <div class=\"form-floating-google\">\n                        <input type=\"${field.field_type}\" \n                               class=\"form-input-google ${lockClass}\" \n                               id=\"field_${field.id}\" \n                               name=\"field_${field.id}\" \n                               placeholder=\" \"\n                               value=\"${value}\"\n                               ${field.is_required ? 'required' : ''}\n                               ${isLocked ? 'disabled' : ''}>\n                        <label for=\"field_${field.id}\">Your answer</label>\n                    </div>\n                `;\n                break;\n                \n            case 'date':\n                fieldHtml += `\n                    <div class=\"form-floating-google\">\n                        <input type=\"date\" \n                               class=\"form-input-google ${lockClass}\" \n                               id=\"field_${field.id}\" \n                               name=\"field_${field.id}\" \n                               value=\"${value}\"\n                               ${field.is_required ? 'required' : ''}\n                               ${isLocked ? 'disabled' : ''}>\n                        <label for=\"field_${field.id}\">Select date</label>\n                    </div>\n                `;\n                break;\n                \n            case 'textarea':\n                fieldHtml += `\n                    <div class=\"form-floating-google\">\n                        <textarea class=\"form-input-google ${lockClass}\" \n                                  id=\"field_${field.id}\" \n                                  name=\"field_${field.id}\" \n                                  placeholder=\" \"\n                                  rows=\"3\"\n                                  style=\"min-height: 100px; resize: vertical;\"\n                                  ${field.is_required ? 'required' : ''}\n                                  ${isLocked ? 'disabled' : ''}>${value}</textarea>\n                        <label for=\"field_${field.id}\">Your answer</label>\n                    </div>\n                `;\n                break;\n                \n            case 'number':\n                fieldHtml += `\n                    <div class=\"form-floating-google\">\n                        <input type=\"number\" \n                               class=\"form-input-google ${lockClass}\" \n                               id=\"field_${field.id}\" \n                               name=\"field_${field.id}\" \n                               placeholder=\" \"\n                               value=\"${value}\"\n                               ${field.is_required ? 'required' : ''}\n                               ${isLocked ? 'disabled' : ''}>\n                        <label for=\"field_${field.id}\">Your answer</label>\n                    </div>\n                `;\n                break;\n                \n            case 'select':\n            case 'dropdown':\n                fieldHtml += `\n                    <select class=\"form-input-google ${lockClass}\" \n                            id=\"field_${field.id}\" \n                            name=\"field_${field.id}\"\n                            ${field.is_required ? 'required' : ''}\n                            ${isLocked ? 'disabled' : ''}>\n                        <option value=\"\" disabled ${!value ? 'selected' : ''}>Choose</option>\n                        ${field.options.map(option => \n                            `\n                        <option value=\"${option}\" ${value === option ? 'selected' : ''}>${option}</option>`\n                        ).join('')}\n                    </select>\n                `;\n                break;\n                \n            case 'radio':\n                fieldHtml += `\n                    <div class=\"d-grid gap-2\">\n                        ${field.options.map((option, index) => `\n                            \n                        <div class=\"form-check\">\n                            <input class=\"form-check-input\" \n                                       type=\"radio\" \n                                       name=\"field_${field.id}\" \n                                       id=\"field_${field.id}_${index}\" \n                                       value=\"${option}\"\n                                       ${value === option ? 'checked' : ''}\n                                       ${isLocked ? 'disabled' : ''}>\n                            <label class=\"form-check-label\" for=\"field_${field.id}_${index}\">\n                                    ${option}\n                                </label>\n                        </div>\n                        `).join('')}\n                    </div>\n                `;\n                break;\n                \n            case 'checkbox':\n                const selectedValues = Array.isArray(value) ? value : (value ? [value] : []);\n                fieldHtml += `\n                    <div class=\"d-grid gap-2\">\n                        ${field.options.map((option, index) => `\n                            \n                        <div class=\"form-check\">\n                            <input class=\"form-check-input\" \n                                       type=\"checkbox\" \n                                       name=\"field_${field.id}\" \n                                       id=\"field_${field.id}_${index}\" \n                                       value=\"${option}\"\n                                       ${selectedValues.includes(option) ? 'checked' : ''}\n                                       ${isLocked ? 'disabled' : ''}>\n                            <label class=\"form-check-label\" for=\"field_${field.id}_${index}\">\n                                    ${option}\n                                </label>\n                        </div>\n                        `).join('')}\n                    </div>\n                `;\n                break;\n        }\n        \n        fieldHtml += `\n                </div>\n            </div>\n        `;\n        \n        return fieldHtml;\n    }\n    \n    // Show user avatars in a Google-style way\n    function renderUserAvatar(user, isEditing = false) {\n        const statusClass = isEditing ? 'status-editing' : 'status-online';\n        return `\n            <div class=\"d-flex align-items-center mb-2\" data-user-id=\"${user.id}\">\n                <div class=\"user-avatar me-2\">${user.username.charAt(0).toUpperCase()}</div>\n                <div class=\"flex-grow-1\">\n                    <div class=\"d-flex align-items-center\">\n                        <span class=\"status-indicator ${statusClass}\"></span>\n                        <span class=\"small fw-medium\">${user.username}</span>\n                    </div>\n                    <div class=\"text-muted\" style=\"font-size: 11px;\">\n                        ${isEditing ? 'Currently editing' : 'Active'}\n                    </div>\n                </div>\n            </div>\n        `;\n    }\n    \n    // Mobile user avatar rendering\n    function renderMobileUserAvatar(user, isEditing = false) {\n        const statusClass = isEditing ? 'status-editing' : 'status-online';\n        return `\n            <div class=\"user-avatar\" \n                 data-user-id=\"${user.id}\" \n                 title=\"${user.username} - ${isEditing ? 'Currently editing' : 'Active'}\"\n                 style=\"position: relative;\">\n                ${user.username.charAt(0).toUpperCase()}\n                \n                <span class=\"status-indicator ${statusClass}\" \n                      style=\"position: absolute; bottom: -2px; right: -2px; border: 1px solid white;\"></span>\n            </div>\n        `;\n    }\n    \n    // Option builder functionality\n    window.optionBuilders = {};\n    \n    function createOptionBuilder(containerId, initialOptions = []) {\n        const container = document.getElementById(containerId);\n        if (!container) return;\n        \n        const options = initialOptions.length > 0 ? initialOptions : ['Option 1'];\n        let optionCounter = options.length;\n        \n        function renderOptions() {\n            container.innerHTML = `\n            <div class=\"option-builder\">\n                <div class=\"mb-3\">\n                    <label class=\"form-label small text-muted mb-2\">Options</label>\n                    <div class=\"option-list\" id=\"option-list-${containerId}\">\n                            ${options.map((option, index) => `\n                                \n                        <div class=\"option-item\" data-index=\"${index}\">\n                            <div class=\"option-drag-handle\">\n                                <i class=\"fas fa-grip-vertical\"></i>\n                            </div>\n                            <div class=\"option-input-wrapper\">\n                                <input type=\"text\" \n                                               class=\"option-input\" \n                                               value=\"${option}\" \n                                               placeholder=\"Enter option text...\"\n                                               onchange=\"updateOption('${containerId}', ${index}, this.value)\"\n                                               onkeydown=\"handleOptionKeydown(event, '${containerId}', ${index})\">\n                                    \n                            </div>\n                                    ${options.length > 1 ? `\n                            <button type=\"button\" \n                                                class=\"option-remove\" \n                                                onclick=\"removeOption('${containerId}', ${index})\"\n                                                title=\"Remove option\">\n                                <i class=\"fas fa-times\"></i>\n                            </button>\n                                    ` : `\n                            <div class=\"option-remove-placeholder\"></div>\n                                    `}\n                        </div>\n                            `).join('')}\n                    </div>\n                    <button type=\"button\" \n                                class=\"option-add\" \n                                onclick=\"addOption('${containerId}')\"\n                                title=\"Add new option\">\n                        <i class=\"fas fa-plus\"></i>\n                        <span>Add option</span>\n                    </button>\n                </div>\n            </div>\n            `;\n            \n            // Initialize drag and drop for options\n            initializeOptionSorting(containerId);\n        }\n        \n        window.updateOption = function(builderId, index, value) {\n            if (window.optionBuilders[builderId]) {\n                window.optionBuilders[builderId].options[index] = value;\n                window.optionBuilders[builderId].updateHiddenInput();\n            }\n        };\n        \n        window.removeOption = function(builderId, index) {\n            if (window.optionBuilders[builderId] && window.optionBuilders[builderId].options.length > 1) {\n                window.optionBuilders[builderId].options.splice(index, 1);\n                window.optionBuilders[builderId].renderOptions();\n                window.optionBuilders[builderId].updateHiddenInput();\n            }\n        };\n        \n        window.addOption = function(builderId) {\n            if (window.optionBuilders[builderId]) {\n                const builder = window.optionBuilders[builderId];\n                builder.optionCounter++;\n                builder.options.push(`Option ${builder.optionCounter}`);\n                builder.renderOptions();\n                \n                // Focus on the new input\n                setTimeout(() => {\n                    const inputs = document.querySelectorAll(`#${builderId} .option-input`);\n                    const newInput = inputs[inputs.length - 1];\n                    if (newInput) {\n                        newInput.focus();\n                        newInput.select();\n                    }\n                }, 100);\n                \n                builder.updateHiddenInput();\n            }\n        };\n        \n        window.handleOptionKeydown = function(event, builderId, index) {\n            if (event.key === 'Enter') {\n                event.preventDefault();\n                addOption(builderId);\n            } else if (event.key === 'Backspace' && event.target.value === '' && window.optionBuilders[builderId].options.length > 1) {\n                event.preventDefault();\n                removeOption(builderId, index);\n                // Focus on previous input if available\n                setTimeout(() => {\n                    const inputs = document.querySelectorAll(`#${builderId} .option-input`);\n                    const prevInput = inputs[Math.max(0, index - 1)];\n                    if (prevInput) {\n                        prevInput.focus();\n                    }\n                }, 100);\n            }\n        };\n        \n        function updateHiddenInput() {\n            const hiddenInput = document.querySelector('[name=\"options_text\"]');\n            if (hiddenInput) {\n                hiddenInput.value = options.filter(opt => opt.trim()).join('\\n');\n            }\n        }\n        \n        function initializeOptionSorting(builderId) {\n            const optionList = document.getElementById(`option-list-${builderId}`);\n            if (optionList && window.Sortable) {\n                new Sortable(optionList, {\n                    handle: '.option-drag-handle',\n                    animation: 150,\n                    ghostClass: 'option-dragging',\n                    onEnd: function(evt) {\n                        const builder = window.optionBuilders[builderId];\n                        if (builder) {\n                            // Reorder the options array\n                            const movedOption = builder.options.splice(evt.oldIndex, 1)[0];\n                            builder.options.splice(evt.newIndex, 0, movedOption);\n                            builder.updateHiddenInput();\n                        }\n                    }\n                });\n            }\n        }\n        \n        renderOptions();\n        updateHiddenInput();\n        \n        window.optionBuilders[containerId] = {\n            options,\n            optionCounter,\n            renderOptions,\n            updateHiddenInput\n        };\n    }\n    \n    // Field type selector functionality\n    function createFieldTypeSelector(containerId, selectedType = '') {\n        const container = document.getElementById(containerId);\n        if (!container) return;\n        \n        const fieldTypes = [\n            { value: 'text', label: 'Short answer', icon: 'fas fa-font', description: 'Single line text input' },\n            { value: 'textarea', label: 'Paragraph', icon: 'fas fa-align-left', description: 'Multi-line text input' },\n            { value: 'radio', label: 'Multiple choice', icon: 'fas fa-circle-dot', description: 'Select one option' },\n            { value: 'checkbox', label: 'Checkboxes', icon: 'fas fa-check-square', description: 'Select multiple options' },\n            { value: 'dropdown', label: 'Dropdown', icon: 'fas fa-caret-down', description: 'Select from dropdown list' },\n            { value: 'number', label: 'Number', icon: 'fas fa-hashtag', description: 'Numeric input' },\n            { value: 'email', label: 'Email', icon: 'fas fa-envelope', description: 'Email address input' },\n            { value: 'date', label: 'Date', icon: 'fas fa-calendar-alt', description: 'Date picker input' }\n        ];\n        \n        container.innerHTML = `\n            <div class=\"field-type-grid\">\n                ${fieldTypes.map(type => `\n                    \n                <div class=\"field-type-option ${selectedType === type.value ? 'selected' : ''}\" \n                         data-type=\"${type.value}\"\n                         onclick=\"selectFieldType('${type.value}')\"\n                         title=\"${type.description}\">\n                    <i class=\"${type.icon}\"></i>\n                    <span>${type.label}</span>\n                </div>\n                `).join('')}\n            </div>\n        `;\n        \n        window.selectFieldType = function(type) {\n            // Update visual selection\n            container.querySelectorAll('.field-type-option').forEach(option => {\n                option.classList.toggle('selected', option.dataset.type === type);\n            });\n            \n            // Update hidden select\n            const hiddenSelect = document.querySelector('[name=\"field_type\"]');\n            if (hiddenSelect) {\n                hiddenSelect.value = type;\n            }\n            \n            // Show/hide options builder based on field type\n            const optionsContainer = document.getElementById('options-builder');\n            const needsOptions = ['radio', 'checkbox', 'dropdown'].includes(type);\n            if (optionsContainer) {\n                optionsContainer.style.display = needsOptions ? 'block' : 'none';\n                \n                // Initialize or update option builder if needed\n                if (needsOptions) {\n                    const builderContainer = document.getElementById('options-container');\n                    if (builderContainer && !window.optionBuilders['options-container']) {\n                        createOptionBuilder('options-container');\n                    }\n                }\n            }\n        };\n        \n        // Auto-select first option if none selected\n        if (!selectedType) {\n            selectFieldType('text');\n        }\n    }\n        </script>\n    </body>\n</html>"
				}
			]
		},
		{
			"name": "Join Form",
			"request": {
				"method": "GET",
				"header": []
			},
			"response": []
		}
	]
}